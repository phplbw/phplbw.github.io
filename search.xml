<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/09/23/hello-world/"/>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>centos6-install-nginx1.12.2-mysql5.6.22-php5.6.36</title>
      <link href="/2018/06/25/centos6-install-nginx1-12-2-mysql5-6-22-php5-6-36/"/>
      <content type="html"><![CDATA[<h2 id="vmware安装"><a href="#vmware安装" class="headerlink" title="vmware安装"></a>vmware安装</h2><h3 id="安装前准备"><a href="#安装前准备" class="headerlink" title="安装前准备"></a>安装前准备</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vmware安装自己百度或者谷歌下载安装，我用的是12.1.0版本的vmware</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="centos6安装"><a href="#centos6安装" class="headerlink" title="centos6安装"></a>centos6安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">点击虚拟机右上角的文件—&gt;新建虚拟机—&gt;典型（推荐）—&gt;下一步—&gt;选稍后安装系统—&gt;下一步—&gt;选linux对应版本为centos64位—&gt;下一步—&gt;给虚拟机命名（随意）和所安装的路径（这里建议建个文件夹搞）—&gt;下一步—&gt;设置最大磁盘大小（我设置了80G）选将磁盘拆分成多个文件—&gt;下一步—&gt;点自定义硬件—&gt;设置内存（根据自己电脑设置我设置了3G）设置CD/DVD选右边的使用ISO映像文件找到下载的文件（我用的是CentOS-6.5-x86_64-minimal.iso）—&gt;关闭—&gt;完成</span><br></pre></td></tr></table></figure><h3 id="开启虚拟机"><a href="#开启虚拟机" class="headerlink" title="开启虚拟机"></a>开启虚拟机</h3><p><img src="centos_1.jpg" alt="centos_1"><br>回车<br><img src="centos_2.png" alt="centos_2"><br>这里记得用tab键切换到Skip然后回车<br><img src="centos_3.jpg" alt="centos_3"><br>下一步<br><img src="centos_4.png" alt="centos_4"><br>下一步<br><img src="centos_5.jpg" alt="centos_5"><br>下一步<br><img src="centos_6.png" alt="centos_6"><br>下一步<br><img src="centos_7.jpg" alt="centos_7"><br><img src="centos_8.png" alt="centos_8"><br>暂时用默认主机名点下一步<br><img src="centos_9.jpg" alt="centos_9"><br>下一步<br>接着设置登录密码<br>下一步<br>选创建自定义布局<br>下一步<br>创建—&gt;标准分区—&gt;创建—&gt;挂载点填/boot然后其它默认—&gt;确定<br>创建—&gt;标准分区—&gt;创建—&gt;文件系统类型选swap大小填2048然后其它默认—&gt;确定<br>创建—&gt;标准分区—&gt;创建—&gt;挂载点填/其它大小选项选使用全部可用空间然后其它默认—&gt;确定<br>下一步—&gt;格式化—&gt;将修改写入磁盘—&gt;默认设置—&gt;下一步—&gt;最后等待安装完成—&gt;点重新引导</p><h3 id="配置静态ip访问外网"><a href="#配置静态ip访问外网" class="headerlink" title="配置静态ip访问外网"></a>配置静态ip访问外网</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">安装完虚拟机之后，检查网络连接下的VMnet1和VMnet8是否存在，如果不存在可以在虚拟机界面 编辑—&gt;虚拟网络编辑器—&gt;还原默认配置</span><br><span class="line">然后设置虚拟机桥接模式，在电脑本机cmd界面输入ipconfig查看本机的ip假设为192.168.137.59</span><br><span class="line">接着进到centos虚拟机命令行界面输入ifconfig会发现只有lo少了网卡eth0上不了网,解决办法配置静态ip,操作如下：</span><br><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line">会看到如下配置其中写着修改和添加表示改动过和新增的</span><br><span class="line">DEVICE=eth0</span><br><span class="line">HWADDR=00:0C:29:B4:21:3B</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">UUID=b1635b78-bf89-4b9e-b598-450ac33797a8</span><br><span class="line">ONBOOT=yes 修改</span><br><span class="line">NM_CONTROLLED=no 修改</span><br><span class="line">BOOTPROTO=static 修改</span><br><span class="line">IPADDR=192.168.137.130 添加（这里根据电脑本机设置同一网段）</span><br><span class="line">NETMASK=255.255.255.0 添加（子网掩码）</span><br><span class="line">GATEWAY=192.168.137.2 添加（网关）</span><br><span class="line">DNS1=8.8.8.8 添加</span><br><span class="line">DNS1=8.8.4.4 添加</span><br><span class="line">配置完后esc然后英文状态下:wq保存退出</span><br><span class="line">重启网络服务 service network restart</span><br><span class="line">此时在/etc/resolv.conf就会加入</span><br><span class="line">nameserver 8.8.8.8</span><br><span class="line">nameserver 8.8.4.4</span><br><span class="line">然后ping www.baidu.com这回可以上网了，完美~</span><br><span class="line">接下来就可以使用xshell连接虚拟机里面的centos</span><br></pre></td></tr></table></figure><h3 id="修改虚拟机主机名"><a href="#修改虚拟机主机名" class="headerlink" title="修改虚拟机主机名"></a>修改虚拟机主机名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">有三种方式：</span><br><span class="line">第一种直接用hostname命名</span><br><span class="line">hostname linbiwei</span><br><span class="line">第二种编辑network</span><br><span class="line">vi /etc/sysconfig/network</span><br><span class="line">NETWORKING=yes</span><br><span class="line">HOSTNAME=linbiwei(根据自己喜欢的名称设置)</span><br><span class="line">第三种编辑hosts(我一般使用这种)</span><br><span class="line">vi /etc/hosts</span><br><span class="line"></span><br><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line"></span><br><span class="line">127.0.0.1 linbiwei</span><br><span class="line">192.168.137.130 linbiwei</span><br><span class="line">注：（这里192.168.137.130根据上面设置的DHCP起始ip范围自己设置）</span><br><span class="line">重启reboot</span><br></pre></td></tr></table></figure><h3 id="nginx-1-12-2安装准备"><a href="#nginx-1-12-2安装准备" class="headerlink" title="nginx-1.12.2安装准备"></a>nginx-1.12.2安装准备</h3><p>我使用的安装包是nginx-1.12.2.tar.gz<br>可以去这里下载<br><a href="http://nginx.org/download/nginx-1.12.2.tar.gz" target="_blank" rel="noopener">nginx-1.12.2.tar.gz</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@linbiwei ~]<span class="comment"># pwd</span></span><br><span class="line">/root</span><br><span class="line">[root@linbiwei ~]<span class="comment"># cd /</span></span><br><span class="line">[root@linbiwei /]<span class="comment"># ll</span></span><br><span class="line">[root@linbiwei /]<span class="comment"># mkdir software</span></span><br><span class="line">[root@linbiwei /]<span class="comment"># cd software</span></span><br><span class="line">[root@linbiwei software]<span class="comment"># yum -y install wget</span></span><br><span class="line">如果安装包已经下载好可以用工具SSH Secure File Transfer Client上传</span><br><span class="line">如果还没下载可以用wget http://nginx.org/download/nginx-1.12.2.tar.gz下载</span><br><span class="line">关闭防火墙</span><br><span class="line">[root@linbiwei software]<span class="comment"># service iptables status</span></span><br><span class="line">[root@linbiwei software]<span class="comment"># service iptables stop   临时关闭防火墙</span></span><br><span class="line">[root@linbiwei software]<span class="comment"># chkconfig iptables off  永久关闭防火墙</span></span><br><span class="line">[root@linbiwei software]<span class="comment"># service iptables status</span></span><br><span class="line">iptables：未运行防火墙。</span><br><span class="line">关闭SElinux</span><br><span class="line">[root@linbiwei software]<span class="comment"># sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config</span></span><br><span class="line">[root@linbiwei software]<span class="comment"># setenforce 0</span></span><br><span class="line">[root@linbiwei software]<span class="comment"># useradd www -s /sbin/nologin</span></span><br><span class="line">[root@linbiwei software]<span class="comment"># yum -y install pcre pcre-devel zlib zlib-devel gcc-c++ gcc openssl*</span></span><br><span class="line">[root@linbiwei software]<span class="comment"># tar zxvf nginx-1.12.2.tar.gz </span></span><br><span class="line">[root@linbiwei software]<span class="comment"># cd nginx-1.12.2/</span></span><br><span class="line">[root@linbiwei nginx-1.12.2]<span class="comment"># ./configure --user=www --group=www --prefix=/usr/local/nginx --with-http_realip_module --with-http_sub_module --with-http_gzip_static_module --with-http_stub_status_module  --with-pcre</span></span><br><span class="line">[root@linbiwei nginx-1.12.2]<span class="comment"># make &amp;&amp; make install</span></span><br><span class="line">接下来浏览器访问ip地址就可以看到Welcome to nginx!</span><br><span class="line">注：如果不能访问接着下面的nginx添加系统服务操作步骤完成后一般就可以正常访问</span><br></pre></td></tr></table></figure></p><h3 id="nginx添加到系统服务"><a href="#nginx添加到系统服务" class="headerlink" title="nginx添加到系统服务"></a>nginx添加到系统服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">设置nginx到系统服务</span><br><span class="line">vi /etc/init.d/nginx </span><br><span class="line">添加如下脚本</span><br><span class="line">开始</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># nginx Startup script for the Nginx HTTP Server</span></span><br><span class="line"><span class="comment"># this script create it by caffreyxin at 2007.10.15.</span></span><br><span class="line"><span class="comment"># it is v.0.0.1 version.</span></span><br><span class="line"><span class="comment"># if you find any errors on this scripts, please contact caffreyxin.</span></span><br><span class="line"><span class="comment"># and send mail to xinyflove at sina dot com.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># chkconfig: - 85 15</span></span><br><span class="line"><span class="comment"># description: Nginx is a high-performance web and proxy server.</span></span><br><span class="line"><span class="comment">#              It has a lot of features, but it's not for everyone.</span></span><br><span class="line"><span class="comment"># processname: nginx</span></span><br><span class="line"><span class="comment"># pidfile: /var/run/nginx.pid</span></span><br><span class="line"><span class="comment"># config: /usr/local/nginx/conf/nginx.conf</span></span><br><span class="line"></span><br><span class="line">nginxd=/usr/<span class="built_in">local</span>/nginx/sbin/nginx</span><br><span class="line">nginx_config=/usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br><span class="line">nginx_pid=/var/run/nginx.pid</span><br><span class="line"></span><br><span class="line">RETVAL=0</span><br><span class="line">prog=<span class="string">"nginx"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Source function library.</span></span><br><span class="line">. /etc/rc.d/init.d/<span class="built_in">functions</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Source networking configuration.</span></span><br><span class="line">. /etc/sysconfig/network</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check that networking is up.</span></span><br><span class="line">[ <span class="variable">$&#123;NETWORKING&#125;</span> = <span class="string">"no"</span> ] &amp;&amp; <span class="built_in">exit</span> 0</span><br><span class="line"></span><br><span class="line">[ -x <span class="variable">$nginxd</span> ] || <span class="built_in">exit</span> 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Start nginx daemons functions.</span></span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ -e <span class="variable">$nginx_pid</span> ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"nginx already running...."</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">"Starting <span class="variable">$prog</span>: "</span></span><br><span class="line">    daemon <span class="variable">$nginxd</span> -c <span class="variable">$&#123;nginx_config&#125;</span></span><br><span class="line">    RETVAL=$?</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    [ <span class="variable">$RETVAL</span> = 0 ] &amp;&amp; touch /var/lock/subsys/nginx</span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$RETVAL</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Stop nginx daemons functions.</span></span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">"Stopping <span class="variable">$prog</span>: "</span></span><br><span class="line">    killproc <span class="variable">$nginxd</span></span><br><span class="line">    RETVAL=$?</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    [ <span class="variable">$RETVAL</span> = 0 ] &amp;&amp; rm -f /var/lock/subsys/nginx /var/run/nginx.pid</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># reload nginx service functions.</span></span><br><span class="line"><span class="function"><span class="title">reload</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">"Reloading <span class="variable">$prog</span>: "</span></span><br><span class="line">    <span class="comment">#kill -HUP `cat $&#123;nginx_pid&#125;`</span></span><br><span class="line">    killproc <span class="variable">$nginxd</span> -HUP</span><br><span class="line">    RETVAL=$?</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># See how we were called.</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">start)</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">stop)</span><br><span class="line">        stop</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">reload)</span><br><span class="line">        reload</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">restart)</span><br><span class="line">        stop</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">status)</span><br><span class="line">        status <span class="variable">$prog</span></span><br><span class="line">        RETVAL=$?</span><br><span class="line">        ;;</span><br><span class="line">*)</span><br><span class="line">        <span class="built_in">echo</span> $<span class="string">"Usage: <span class="variable">$prog</span> &#123;start|stop|restart|reload|status|help&#125;"</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> <span class="variable">$RETVAL</span></span><br><span class="line"></span><br><span class="line">结束</span><br><span class="line">脚本中的</span><br><span class="line">nginxd=/usr/<span class="built_in">local</span>/nginx/sbin/nginx</span><br><span class="line">nginx_config=/usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br><span class="line">nginx_pid=/var/run/nginx.pid</span><br><span class="line">这三个路径一般按照我上面的操作不用改</span><br><span class="line"></span><br><span class="line">[root@linbiwei nginx-1.12.2]<span class="comment"># chmod 755 /etc/init.d/nginx</span></span><br><span class="line">[root@linbiwei nginx-1.12.2]<span class="comment"># chkconfig nginx on  设置开机自启</span></span><br><span class="line">[root@linbiwei nginx-1.12.2]<span class="comment"># chkconfig --list    查看开机启动的服务</span></span><br><span class="line">[root@linbiwei nginx-1.12.2]<span class="comment"># service nginx restart 重启nginx</span></span><br><span class="line">[root@linbiwei nginx-1.12.2]<span class="comment"># service nginx stop 停止nginx</span></span><br><span class="line">[root@linbiwei nginx-1.12.2]<span class="comment"># service nginx start 开启nginx</span></span><br></pre></td></tr></table></figure><h3 id="mysql-5-6-22安装准备"><a href="#mysql-5-6-22安装准备" class="headerlink" title="mysql-5.6.22安装准备"></a>mysql-5.6.22安装准备</h3><p>我使用的安装包是mysql-5.6.22.tar.gz<br>可以去这里下载<br><a href="http://cdn.mysql.com/archives/mysql-5.6/mysql-5.6.22.tar.gz" target="_blank" rel="noopener">mysql-5.6.22.tar.gz</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line">[root@linbiwei software]<span class="comment"># rpm -qa | grep mysql </span></span><br><span class="line">mysql-libs-5.1.71-1.el6.x86_64</span><br><span class="line">查看是否有安装mysql服务，因为mysql-libs-5.1.71-1.el6.x86_64是 MySQL 的必要包，没有 MySQL 服务，因此没必要卸载</span><br><span class="line">如果需要删除可以使用rpm -e mysql 普通删除模式或者yum remove mysql mysql-* 删除</span><br><span class="line">修改防火墙设置开启3306端口</span><br><span class="line">[root@linbiwei software]<span class="comment"># vi /etc/sysconfig/iptables </span></span><br><span class="line">添加</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT </span><br><span class="line">以下是所有的配置</span><br><span class="line">开始</span><br><span class="line"><span class="comment"># Firewall configuration written by system-config-firewall</span></span><br><span class="line"><span class="comment"># Manual customization of this file is not recommended.</span></span><br><span class="line">*filter</span><br><span class="line">:INPUT ACCEPT [0:0]</span><br><span class="line">:FORWARD ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [0:0]</span><br><span class="line">-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</span><br><span class="line">-A INPUT -p icmp -j ACCEPT</span><br><span class="line">-A INPUT -i lo -j ACCEPT</span><br><span class="line">-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT 新增</span><br><span class="line">-A INPUT -j REJECT --reject-with icmp-host-prohibited</span><br><span class="line">-A FORWARD -j REJECT --reject-with icmp-host-prohibited</span><br><span class="line">COMMIT</span><br><span class="line">结束</span><br><span class="line">[root@linbiwei software]<span class="comment"># service iptables restart 重启防火墙生效这里有个坑，会发现访问不了nginx</span></span><br><span class="line">[root@linbiwei software]<span class="comment"># service iptables stop </span></span><br><span class="line">[root@linbiwei software]<span class="comment"># chkconfig iptables off</span></span><br><span class="line">解决nginx访问不了</span><br><span class="line">[root@linbiwei software]<span class="comment"># groupadd mysql  新增mysql用户组</span></span><br><span class="line">[root@linbiwei software]<span class="comment"># useradd -r -g mysql mysql 新增 mysql 用户并添加到 mysql 用户组</span></span><br><span class="line">[root@linbiwei software]<span class="comment"># mkdir -p /usr/local/mysql 新建mysql 执行文件目录</span></span><br><span class="line">[root@linbiwei software]<span class="comment"># mkdir -p /home/mysql/data 新建mysql数据文件目录</span></span><br><span class="line">[root@linbiwei software]<span class="comment"># mkdir -p /home/mysql/logs 新建mysql日志文件目录</span></span><br><span class="line">[root@linbiwei software]<span class="comment"># mkdir -p /home/mysql/temp 新建mysql缓存文件目录</span></span><br><span class="line">这里的数据文件目录、日志文件目录、缓存文件目录可以自定义、执行文件目录一般用/usr/<span class="built_in">local</span>/mysql 个人感觉比较规范</span><br><span class="line">[root@linbiwei software]<span class="comment">#  vi /etc/profile </span></span><br><span class="line">在最后一行添加者两行</span><br><span class="line">PATH=/usr/<span class="built_in">local</span>/mysql/bin:/usr/<span class="built_in">local</span>/mysql/lib:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> PATH</span><br><span class="line">[root@linbiwei software]<span class="comment"># source /etc/profile 使其生效</span></span><br><span class="line"> 安装mysql需要的依赖包</span><br><span class="line">[root@linbiwei software]<span class="comment"># yum install make cmake gcc gcc-c++ bison bison-devel  ncurses ncurses-devel  autoconf  automake</span></span><br><span class="line">[root@linbiwei software]<span class="comment"># tar -zxvf mysql-5.6.22.tar.gz</span></span><br><span class="line">[root@linbiwei software]<span class="comment"># ll</span></span><br><span class="line">[root@linbiwei software]<span class="comment"># cd mysql-5.6.22</span></span><br><span class="line">使用cmake源码安装mysql这里需要注意的是两个参数DCMAKE_INSTALL_PREFIX和DMYSQL_DATADIR对应的mysql创建的执行目录路径和数据目录要写对</span><br><span class="line">[root@linbiwei mysql-5.6.22]<span class="comment"># cmake -DCMAKE_INSTALL_PREFIX=/usr/local/mysql  -DDEFAULT_CHARSET=utf8  -DDEFAULT_COLLATION=utf8_general_ci  -DWITH_MYISAM_STORAGE_ENGINE=1  -DWITH_INNOBASE_STORAGE_ENGINE=1  -DWITH_ARCHIVE_STORAGE_ENGINE=1  -DWITH_BLACKHOLE_STORAGE_ENGINE=1  -DWITH_MEMORY_STORAGE_ENGINE=1  -DWITH_READLINE=1 -DENABLED_LOCAL_INFILE=1  -DMYSQL_DATADIR=/home/mysql/data  -DMYSQL_USER=mysql  -DMYSQL_TCP_PORT=3306  -DENABLE_DOWNLOADS=1</span></span><br><span class="line">[root@linbiwei mysql-5.6.22]<span class="comment"># make</span></span><br><span class="line">[root@linbiwei mysql-5.6.22]<span class="comment"># make install</span></span><br><span class="line">[root@linbiwei mysql-5.6.22]<span class="comment"># make clean</span></span><br><span class="line">修改 mysql 目录拥有者为 mysql 用户</span><br><span class="line">[root@linbiwei mysql-5.6.22]<span class="comment"># chown -Rf mysql:mysql /usr/local/mysql </span></span><br><span class="line">[root@linbiwei mysql-5.6.22]<span class="comment"># chown -Rf mysql:mysql /home/mysql</span></span><br><span class="line">进入mysql执行目录</span><br><span class="line">[root@linbiwei mysql-5.6.22]<span class="comment">#  cd /usr/local/mysql</span></span><br><span class="line">[root@linbiwei mysql]<span class="comment"># pwd</span></span><br><span class="line">/usr/<span class="built_in">local</span>/mysql</span><br><span class="line">[root@linbiwei mysql]<span class="comment"># scripts/mysql_install_db --user=mysql --basedir=/usr/local/mysql --datadir=/home/mysql/data 初始化脚本生成my.cnf</span></span><br><span class="line">[root@linbiwei mysql]<span class="comment"># chown -Rf mysql:mysql /usr/local/mysql</span></span><br><span class="line">[root@linbiwei mysql]<span class="comment"># vi my.cnf</span></span><br><span class="line">在sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES之上添加</span><br><span class="line">开始</span><br><span class="line">[client]</span><br><span class="line">port=3306</span><br><span class="line"><span class="comment">#socket=/usr/local/mysql/mysql.sock</span></span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">[mysqld]</span><br><span class="line">character-set-server=utf8</span><br><span class="line">collation-server=utf8_general_ci</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">skip-external-locking</span><br><span class="line">skip-name-resolve</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">user=mysql</span><br><span class="line">port=3306</span><br><span class="line">basedir=/usr/<span class="built_in">local</span>/mysql</span><br><span class="line">datadir=/home/mysql/data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#server_id=...</span></span><br><span class="line"><span class="comment">#socket=/usr/local/mysql/mysql.sock</span></span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line"><span class="built_in">log</span>-error=/home/mysql/logs/mysql_error.log</span><br><span class="line">pid-file=/home/mysql/mysql.pid</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">open_files_limit=10240</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">back_log=600</span><br><span class="line">max_connections=500</span><br><span class="line">max_connect_errors=6000</span><br><span class="line">wait_timeout=605800</span><br><span class="line"><span class="comment">#open_tables=6000</span></span><br><span class="line"><span class="comment">#table_cache=650</span></span><br><span class="line"><span class="comment">#opened_talbes=630</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">max_allowed_packet=32M</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sort_buffer_size=4M</span><br><span class="line">join_buffer_size=4M</span><br><span class="line">thread_cache_size=300</span><br><span class="line">query_cache_type=1</span><br><span class="line">query_cache_size=256</span><br><span class="line">query_cache_limit=2M</span><br><span class="line">query_cache_min_res_unit=16K</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tmp_table_size=256M</span><br><span class="line">max_heap_table_size=256M</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">key_buffer_size=256M</span><br><span class="line">read_buffer_size=1M</span><br><span class="line">read_rnd_buffer_size=16M</span><br><span class="line">bulk_insert_buffer_size=64M</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lower_case_table_names=1</span><br><span class="line">default-storage-engine=INNODB</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">innodb_buffer_pool_size=1024</span><br><span class="line">innodb_log_buffer_size=32M</span><br><span class="line">innodb_log_file_size=128M</span><br><span class="line">innodb_flush_method=O_DIRECT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##########################</span></span><br><span class="line">thread_concurrency=32</span><br><span class="line">long_query_time=2</span><br><span class="line">slow-query-log=on</span><br><span class="line">slow-query-log-file=/home/mysql/logs/mysql-slow.log</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line">max_allowed_packet=32M</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[mysql_safe]</span><br><span class="line"><span class="built_in">log</span>-error=/var/<span class="built_in">log</span>/mysqld.log</span><br><span class="line">pid-file=/var/run/mysqld/mysqld.pid</span><br><span class="line">结束</span><br><span class="line">脚本中的innodb_buffer_pool_size=1024这个值根据设置为内存的三分之一或三分之二即可</span><br><span class="line">[root@linbiwei mysql]<span class="comment"># cd /etc</span></span><br><span class="line">[root@linbiwei etc]<span class="comment"># ll  查看是否有my.cnf</span></span><br><span class="line">[root@linbiwei etc]<span class="comment"># rm -rf my.cnf  将其删除主要是我想直接在mysql执行目录设置my.cnf软链接到etc目录</span></span><br><span class="line">[root@linbiwei mysql]<span class="comment"># ln -s /usr/local/mysql/my.cnf /etc/my.cnf</span></span><br><span class="line">[root@linbiwei mysql]<span class="comment"># cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysql 复制启动脚本到/etc/init.d目录</span></span><br><span class="line">[root@linbiwei mysql]<span class="comment">#  service mysql start  启动mysql服务</span></span><br><span class="line">如果出现以下错误</span><br><span class="line">Starting MySQL.. ERROR! The server quit without updating PID file (/home/mysql/mysql.pid).</span><br><span class="line">是因为/home/mysql这个目录之前设置目录拥有者为mysql没有成功</span><br><span class="line">使用chown -Rf mysql:mysql /home/mysql 解决后再执行service mysql start</span><br><span class="line">[root@linbiwei mysql]<span class="comment"># chkconfig mysql on</span></span><br><span class="line">[root@linbiwei mysql]<span class="comment"># mysqladmin -u root password 'xxx' 设置数据库密码为xxx</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line">填写xxx密码</span><br><span class="line">show databases;</span><br><span class="line">use mysql;</span><br><span class="line">update user <span class="built_in">set</span> password=password(<span class="string">'root'</span>) <span class="built_in">where</span> user=<span class="string">'xxx'</span>; 修改密码sql</span><br><span class="line">flush privileges; 刷新权限</span><br><span class="line">设置远程访问</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO <span class="string">'root'</span>@<span class="string">'%'</span> IDENTIFIED BY <span class="string">'123456'</span> WITH  GRANT OPTION; 允许root远程访问数据库</span><br><span class="line">flush privileges; 刷新权限</span><br></pre></td></tr></table></figure></p><h3 id="php-5-6-36"><a href="#php-5-6-36" class="headerlink" title="php-5.6.36"></a>php-5.6.36</h3><p>我使用的安装包是php-5.6.36.tar.gz<br>可以去这里下载<br><a href="http://am1.php.net/distributions/php-5.6.36.tar.gz" target="_blank" rel="noopener">php-5.6.36.tar.gz</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line">[root@linbiwei software]<span class="comment"># yum install gcc-c++ gd libxml2-devel libjpeg-devel libpng-devel net-snmp-devel curl-devel libxslt-devel pcre-devel libjpeg libpng libxml2 libcurl4-openssl-dev libcurl-devel libcurl freetype-config freetype freetype-devel unixODBC libxslt -y</span></span><br><span class="line">[root@linbiwei software]<span class="comment"># tar -zxf php-5.6.36.tar.gz</span></span><br><span class="line">[root@linbiwei software]<span class="comment"># cd php-5.6.36</span></span><br><span class="line">[root@linbiwei php-5.6.36]<span class="comment"># ./configure --prefix=/usr/local/php --with-curl --with-gd --with-gettext --with-iconv-dir --with-kerberos --with-libdir=lib64 --with-libxml-dir --with-mysql --with-mysqli --with-openssl --with-pcre-regex --with-pdo-mysql --with-pdo-sqlite --with-pear --with-png-dir --with-freetype-dir --with-jpeg-dir --with-xmlrpc --with-xsl --with-zlib --enable-fpm --enable-bcmath --enable-libxml --enable-inline-optimization --enable-gd-native-ttf --enable-mbregex --enable-mbstring --enable-opcache --enable-pcntl --enable-shmop --enable-soap --enable-sockets --enable-sysvsem --enable-xml</span></span><br><span class="line">[root@linbiwei php-5.6.36]<span class="comment"># make &amp;&amp; make install</span></span><br><span class="line">[root@linbiwei php-5.6.36]<span class="comment"># cp -a /software/php-5.6.36/php.ini-production /usr/local/php/etc/php.ini</span></span><br><span class="line">[root@linbiwei php-5.6.36]<span class="comment"># ln -s /usr/local/php/etc/php.ini /etc/php.ini</span></span><br><span class="line">[root@linbiwei php-5.6.36]<span class="comment"># cp -a /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf</span></span><br><span class="line">[root@linbiwei php-5.6.36]<span class="comment"># ln -s /usr/local/php/etc/php-fpm.conf /etc/php-fpm.conf</span></span><br><span class="line">[root@linbiwei php-5.6.36]<span class="comment"># sed -i '25s/;//g' /usr/local/php/etc/php-fpm.conf</span></span><br><span class="line">[root@linbiwei php-5.6.36]<span class="comment"># sed -i '303s/disable_functions =/disable_functions = passthru,exec,system,chroot,scandir,chgrp,chown,shell_exec,proc_open,proc_get_status, ini_alter,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server,esca peshellcmd,dll,popen,disk_free_space,checkdnsrr,checkdnsrr,getservbyname,getservbyport,disk_total_space,p osix_ctermid,posix_get_last_error,posix_getcwd, posix_getegid,posix_geteuid,posix_getgid, posix_getgrgid, posix_getgrnam,posix_getgroups,posix_getlogin,posix_getpgid,posix_getpgrp,posix_getpid, posix_getppid,pos ix_getpwnam,posix_getpwuid, posix_getrlimit, posix_getsid,posix_getuid,posix_isatty, posix_kill,posix_mkf ifo,posix_setegid,posix_seteuid,posix_setgid, posix_setpgid,posix_setsid,posix_setuid,posix_strerror,posi x_times,posix_ttyname,posix_uname/g' /usr/local/php/etc/php.ini</span></span><br><span class="line">[root@linbiwei php-5.6.36]<span class="comment"># sed -i '936s/;date.timezone =/date.timezone = PRC/g' /usr/local/php/etc/php.ini</span></span><br><span class="line">[root@linbiwei php-5.6.36]<span class="comment"># sed -i '151s/; short_open_tag/short_open_tag = ON/g' /usr/local/php/etc/php.ini</span></span><br><span class="line">[root@linbiwei php-5.6.36]<span class="comment"># sed -i '1905s/;opcache.enable=0/opcache.enable=1/g' /usr/local/php/etc/php.ini</span></span><br><span class="line">[root@linbiwei php-5.6.36]<span class="comment"># sed -i '1908s/;opcache.enable_cli=0/opcache.enable_cli=0/g' /usr/local/php/etc/php.ini</span></span><br><span class="line">[root@linbiwei php-5.6.36]<span class="comment"># sed -i '$a zend_extension=opcache.so' /usr/local/php/etc/php.ini</span></span><br><span class="line">root@linbiwei php-5.6.36]<span class="comment"># sed -i '509s/;env[PATH] = /usr/local/bin:/usr/bin:/bin/env[PATH] = /usr/local/bin:/usr/bin:/bin/:/usr/local/php/bin/g' /usr/local/php/etc/php-fpm.conf</span></span><br><span class="line">[root@linbiwei php-5.6.36]<span class="comment"># cd /etc/init.d</span></span><br><span class="line">[root@linbiwei init.d]<span class="comment"># vi php-fpm 创建启动脚本</span></span><br><span class="line">开始</span><br><span class="line"><span class="meta">#! /bin/sh</span></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides:          php-fpm</span></span><br><span class="line"><span class="comment"># Required-Start:    $remote_fs $network</span></span><br><span class="line"><span class="comment"># Required-Stop:     $remote_fs $network</span></span><br><span class="line"><span class="comment"># Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="comment"># Default-Stop:      0 1 6</span></span><br><span class="line"><span class="comment"># Short-Description: starts php-fpm</span></span><br><span class="line"><span class="comment"># Description:       starts the PHP FastCGI Process Manager daemon</span></span><br><span class="line"><span class="comment">### END INIT INFO</span></span><br><span class="line"> </span><br><span class="line">prefix=/usr/<span class="built_in">local</span>/php</span><br><span class="line">exec_prefix=<span class="variable">$&#123;prefix&#125;</span></span><br><span class="line"> </span><br><span class="line">php_fpm_BIN=<span class="variable">$&#123;exec_prefix&#125;</span>/sbin/php-fpm</span><br><span class="line">php_fpm_CONF=<span class="variable">$&#123;prefix&#125;</span>/etc/php-fpm.conf</span><br><span class="line">php_fpm_PID=<span class="variable">$&#123;prefix&#125;</span>/var/run/php-fpm.pid</span><br><span class="line"> </span><br><span class="line">php_opts=<span class="string">"--fpm-config <span class="variable">$php_fpm_CONF</span> --pid <span class="variable">$php_fpm_PID</span>"</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">wait_for_pid</span></span> () &#123;</span><br><span class="line">        try=0</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">while</span> <span class="built_in">test</span> <span class="variable">$try</span> -lt 35 ; <span class="keyword">do</span></span><br><span class="line"> </span><br><span class="line">                <span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">                        <span class="string">'created'</span>)</span><br><span class="line">                        <span class="keyword">if</span> [ -f <span class="string">"<span class="variable">$2</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">                                try=<span class="string">''</span></span><br><span class="line">                                <span class="built_in">break</span></span><br><span class="line">                        <span class="keyword">fi</span></span><br><span class="line">                        ;;</span><br><span class="line"> </span><br><span class="line">                        <span class="string">'removed'</span>)</span><br><span class="line">                        <span class="keyword">if</span> [ ! -f <span class="string">"<span class="variable">$2</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">                                try=<span class="string">''</span></span><br><span class="line">                                <span class="built_in">break</span></span><br><span class="line">                        <span class="keyword">fi</span></span><br><span class="line">                        ;;</span><br><span class="line">                <span class="keyword">esac</span></span><br><span class="line"> </span><br><span class="line">                <span class="built_in">echo</span> -n .</span><br><span class="line">                try=`expr <span class="variable">$try</span> + 1`</span><br><span class="line">                sleep 1</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">        start)</span><br><span class="line">                <span class="built_in">echo</span> -n <span class="string">"Starting php-fpm "</span></span><br><span class="line"> </span><br><span class="line">                <span class="variable">$php_fpm_BIN</span> --daemonize <span class="variable">$php_opts</span></span><br><span class="line"> </span><br><span class="line">                <span class="keyword">if</span> [ <span class="string">"$?"</span> != 0 ] ; <span class="keyword">then</span></span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">" failed"</span></span><br><span class="line">                        <span class="built_in">exit</span> 1</span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line"> </span><br><span class="line">                wait_for_pid created <span class="variable">$php_fpm_PID</span></span><br><span class="line"> </span><br><span class="line">                <span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$try</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">" failed"</span></span><br><span class="line">                        <span class="built_in">exit</span> 1</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">" done"</span></span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line">        ;;</span><br><span class="line"> </span><br><span class="line">        stop)</span><br><span class="line">                <span class="built_in">echo</span> -n <span class="string">"Gracefully shutting down php-fpm "</span></span><br><span class="line"> </span><br><span class="line">                <span class="keyword">if</span> [ ! -r <span class="variable">$php_fpm_PID</span> ] ; <span class="keyword">then</span></span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">"warning, no pid file found - php-fpm is not running ?"</span></span><br><span class="line">                        <span class="built_in">exit</span> 1</span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line"> </span><br><span class="line">                <span class="built_in">kill</span> -QUIT `cat <span class="variable">$php_fpm_PID</span>`</span><br><span class="line"> </span><br><span class="line">                wait_for_pid removed <span class="variable">$php_fpm_PID</span></span><br><span class="line"> </span><br><span class="line">                <span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$try</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">" failed. Use force-quit"</span></span><br><span class="line">                        <span class="built_in">exit</span> 1</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">" done"</span></span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line">        ;;</span><br><span class="line"> </span><br><span class="line">        force-quit)</span><br><span class="line">                <span class="built_in">echo</span> -n <span class="string">"Terminating php-fpm "</span></span><br><span class="line"> </span><br><span class="line">                <span class="keyword">if</span> [ ! -r <span class="variable">$php_fpm_PID</span> ] ; <span class="keyword">then</span></span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">"warning, no pid file found - php-fpm is not running ?"</span></span><br><span class="line">                        <span class="built_in">exit</span> 1</span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line"> </span><br><span class="line">                <span class="built_in">kill</span> -TERM `cat <span class="variable">$php_fpm_PID</span>`</span><br><span class="line"> </span><br><span class="line">                wait_for_pid removed <span class="variable">$php_fpm_PID</span></span><br><span class="line"> </span><br><span class="line">                <span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$try</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">" failed"</span></span><br><span class="line">                        <span class="built_in">exit</span> 1</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">" done"</span></span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line">        ;;</span><br><span class="line"> </span><br><span class="line">        restart)</span><br><span class="line">                <span class="variable">$0</span> stop</span><br><span class="line">                <span class="variable">$0</span> start</span><br><span class="line">        ;;</span><br><span class="line"> </span><br><span class="line">        reload)</span><br><span class="line"> </span><br><span class="line">                <span class="built_in">echo</span> -n <span class="string">"Reload service php-fpm "</span></span><br><span class="line"> </span><br><span class="line">                <span class="keyword">if</span> [ ! -r <span class="variable">$php_fpm_PID</span> ] ; <span class="keyword">then</span></span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">"warning, no pid file found - php-fpm is not running ?"</span></span><br><span class="line">                        <span class="built_in">exit</span> 1</span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line"> </span><br><span class="line">                <span class="built_in">kill</span> -USR2 `cat <span class="variable">$php_fpm_PID</span>`</span><br><span class="line"> </span><br><span class="line">                <span class="built_in">echo</span> <span class="string">" done"</span></span><br><span class="line">        ;;</span><br><span class="line"> </span><br><span class="line">        *)</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop|force-quit|restart|reload&#125;"</span></span><br><span class="line">                <span class="built_in">exit</span> 1</span><br><span class="line">        ;;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">结束</span><br><span class="line">[root@linbiwei init.d]<span class="comment"># chmod 755 php-fpm</span></span><br><span class="line">[root@linbiwei init.d]<span class="comment"># chkconfig php-fpm on</span></span><br><span class="line">[root@linbiwei init.d]<span class="comment"># service php-fpm restart</span></span><br><span class="line">[root@linbiwei init.d]<span class="comment"># vi /etc/profile </span></span><br><span class="line">添加环境变量，方便直接在任何目录下使用php -v，php -m， php -i等操作</span><br><span class="line">PATH=/usr/<span class="built_in">local</span>/php/bin:/usr/<span class="built_in">local</span>/mysql/bin:/usr/<span class="built_in">local</span>/mysql/lib:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> PATH</span><br><span class="line">[root@linbiwei init.d]<span class="comment"># source /etc/profile  设置生效</span></span><br></pre></td></tr></table></figure><h3 id="windows共享目录到centos"><a href="#windows共享目录到centos" class="headerlink" title="windows共享目录到centos"></a>windows共享目录到centos</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">[root@linbiwei software]<span class="comment"># yum install perl</span></span><br><span class="line">点击Vmware菜单栏虚拟机—&gt;安装Vmware tools</span><br><span class="line">[root@linbiwei software]<span class="comment"># mkdir /mnt/cdrom  创建目录</span></span><br><span class="line">[root@linbiwei software]<span class="comment"># mount /dev/cdrom /mnt/cdrom 挂载</span></span><br><span class="line">[root@linbiwei software]<span class="comment"># cd /mnt/cdrom 进入挂载目录</span></span><br><span class="line">[root@linbiwei cdrom]<span class="comment"># ll 查看VMware tools安装包</span></span><br><span class="line">总用量 71994</span><br><span class="line">-r-xr-xr-x 1 root root     1994 11月 11 2015 manifest.txt</span><br><span class="line">-r-xr-xr-x 1 root root     1850 11月 11 2015 run_upgrader.sh</span><br><span class="line">-r--r--r-- 1 root root 72270857 11月 11 2015 VMwareTools-10.0.5-3228253.tar.gz</span><br><span class="line">-r-xr-xr-x 1 root root   687524 11月 11 2015 vmware-tools-upgrader-32</span><br><span class="line">-r-xr-xr-x 1 root root   757944 11月 11 2015 vmware-tools-upgrader-64</span><br><span class="line">[root@linbiwei cdrom]<span class="comment"># mkdir /usr/local/vm-src 创建安装包存放文件夹</span></span><br><span class="line">[root@linbiwei cdrom]<span class="comment"># cp VMwareTools-10.0.5-3228253.tar.gz /usr/local/vm-src  把挂载目录中的安装包拷贝到存放文件夹中</span></span><br><span class="line">[root@linbiwei cdrom]<span class="comment"># cd /usr/local/vm-src 进入存放文件夹中</span></span><br><span class="line">[root@linbiwei vm-src]<span class="comment"># umount /dev/cdrom  卸载</span></span><br><span class="line">[root@linbiwei vm-src]<span class="comment"># tar zxvf VMwareTools-10.0.5-3228253.tar.gz  解压</span></span><br><span class="line">[root@linbiwei vm-src]<span class="comment"># ll</span></span><br><span class="line">总用量 70584</span><br><span class="line">-r--r--r-- 1 root root 72270857 6月  28 08:38 VMwareTools-10.0.5-3228253.tar.gz</span><br><span class="line">drwxr-xr-x 9 root root     4096 11月 11 2015 vmware-tools-distrib</span><br><span class="line">[root@linbiwei vm-src]<span class="comment"># cd vmware-tools-distrib</span></span><br><span class="line">[root@linbiwei vmware-tools-distrib]<span class="comment"># ./vmware-install.pl 执行文件</span></span><br><span class="line">接下来一路回车即可</span><br><span class="line">最后会看到这些</span><br><span class="line">Creating a new initrd boot image <span class="keyword">for</span> the kernel.</span><br><span class="line">Generating the key and certificate files.</span><br><span class="line">Successfully generated the key and certificate files.</span><br><span class="line">vmware-tools-thinprint start/running</span><br><span class="line">initctl: Job failed to start</span><br><span class="line">Unable to start services <span class="keyword">for</span> VMware Tools</span><br><span class="line"></span><br><span class="line">Execution aborted.</span><br><span class="line">需要解决initctl: Job failed to start</span><br><span class="line">[root@linbiwei vm-src]<span class="comment"># ll /etc/init/vmware-tools-thinprint.conf</span></span><br><span class="line">-rw-r--r-- 1 root root 351 6月  28 08:41 /etc/init/vmware-tools-thinprint.conf</span><br><span class="line">[root@linbiwei vm-src]<span class="comment"># rm /etc/init/vmware-tools-thinprint.conf</span></span><br><span class="line">rm：是否删除普通文件 <span class="string">"/etc/init/vmware-tools-thinprint.conf"</span>？yes</span><br><span class="line">[root@linbiwei vm-src]<span class="comment"># /etc/vmware-tools/services.sh start </span></span><br><span class="line">   Checking acpi hot plug                                  [确定]</span><br><span class="line">Starting VMware Tools services <span class="keyword">in</span> the virtual machine:</span><br><span class="line">   Switching to guest configuration:                       [确定]</span><br><span class="line">   VM communication interface:                             [确定]</span><br><span class="line">   VM communication interface socket family:               [确定]</span><br><span class="line">   Guest filesystem driver:                                [确定]</span><br><span class="line">   Mounting HGFS shares:                                   [失败]</span><br><span class="line">   Blocking file system:                                   [失败]</span><br><span class="line">   Guest operating system daemon:                          [确定]</span><br><span class="line">   VGAuthService:                                          [确定]</span><br><span class="line">   Common Agent:                                           [确定]</span><br><span class="line">接下来解决Blocking file system:[失败]</span><br><span class="line">Mounting HGFS shares:[失败]</span><br><span class="line">[root@linbiwei vm-src]<span class="comment"># yum install fuse-libs</span></span><br><span class="line">[root@linbiwei vm-src]<span class="comment"># mkdir /mnt/win</span></span><br><span class="line">[root@linbiwei vm-src]<span class="comment"># /usr/bin/vmhgfs-fuse .host:/ /mnt/win -o subtype=vmhgfs-fuse,allow_other</span></span><br><span class="line">[root@linbiwei vm-src]<span class="comment"># reboot 重启</span></span><br><span class="line">接着到虚拟机菜单栏点击虚拟机—&gt;设置—&gt;左上角选项—&gt;选共享文件夹—&gt;点击右边总是启用—&gt;添加共享目录</span><br><span class="line">[root@linbiwei vm-src]<span class="comment"># cd /mnt/hgfs  windows共享的文件夹一般都在hgfs目录</span></span><br><span class="line">[root@linbiwei hgfs]<span class="comment"># ll</span></span><br><span class="line">总用量 4</span><br><span class="line">drwxrwxrwx 1 root root 4096 5月  23 11:13 backend 这个文件夹是从windows共享出来的 </span><br><span class="line">最后就可以完美的在linux开发环境下搞事了~~~</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> vmware_centos6_lnmp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vmware下centos7实现共享文件夹</title>
      <link href="/2017/12/16/vmware-centos-share-folder/"/>
      <content type="html"><![CDATA[<h2 id="vmware下centos7实现共享文件夹"><a href="#vmware下centos7实现共享文件夹" class="headerlink" title="vmware下centos7实现共享文件夹"></a>vmware下centos7实现共享文件夹</h2><h3 id="准备安装"><a href="#准备安装" class="headerlink" title="准备安装"></a>准备安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span>到mnt目录查看装载点目录cdrom是否存在，创建该目录。</span><br><span class="line">mkdir /mnt/cdrom</span><br><span class="line">点击虚拟机菜单栏虚拟机后点击安装VMware Tools</span><br><span class="line">[root@localhost ~]<span class="comment"># cd /mnt</span></span><br><span class="line">[root@localhost mnt]<span class="comment"># ls -al</span></span><br><span class="line">total 0</span><br><span class="line">如果目录为空找不到VMware Tools压缩包就装载 CD-ROM 驱动器</span><br><span class="line">mount /dev/cdrom /mnt/cdrom 然后稍等片刻如果mnt/cdrom目录还是为空可以尝试重启虚拟机</span><br><span class="line">再次执行mount /dev/cdrom /mnt/cdrom再次进入mnt/cdrom目录就可以看到VMware Tools压缩包</span><br><span class="line">接着在tmp目录下创建vm文件夹然后将压缩包复制到vm目录中</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost vm]<span class="comment"># tar  zxvf VMwareTools-10.0.5-3228253.tar.gz</span></span><br><span class="line">[root@localhost vm]<span class="comment"># chmod -R 777 vmware-tools-distrib</span></span><br><span class="line">[root@localhost vm]<span class="comment"># cd vmware-tools-distrib</span></span><br><span class="line">[root@localhost vmware-tools-distrib]<span class="comment"># ./vmware-install.pl</span></span><br><span class="line">接下来一路next即可到最后会遇到两个大坑</span><br><span class="line">The First Problem:（无法安装vmware-tools）</span><br><span class="line">Searching <span class="keyword">for</span> a valid kernel header path...</span><br><span class="line">The path <span class="string">""</span> is not a valid path to the 3.10.0-693.el7.x86_64 kernel headers.</span><br><span class="line">Would you like to change it? [yes] </span><br><span class="line">Enter the path to the kernel header files <span class="keyword">for</span> the 3.10.0-693.el7.x86_64 </span><br><span class="line">kernel? </span><br><span class="line">The Second Problem:（会导致共享目录失败） </span><br><span class="line">/tmp/modconfig-b9RNHu/vmhgfs-only/page.c:1649:23: error: too many arguments to <span class="keyword">function</span> ‘wait_on_bit’ TASK_UNINTERRUPTIBLE);</span><br></pre></td></tr></table></figure><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">强制退出后先解决The First Problem</span><br><span class="line">先yum install kernel-devel</span><br><span class="line">再查找centos的kernel版本号</span><br><span class="line">[root@localhost ~]<span class="comment"># uname -r</span></span><br><span class="line">yum install kernel-devel-3.10.0-693.el7.x86_64 </span><br><span class="line">[root@localhost ~]<span class="comment"># rpm -qa|grep kernel-devel</span></span><br><span class="line">kernel-devel-3.10.0-693.el7.x86_64</span><br><span class="line">kernel-devel-3.10.0-693.11.1.el7.x86_64</span><br><span class="line">[root@localhost ~]<span class="comment"># rpm -qa|grep kernel-headers</span></span><br><span class="line">kernel-headers-3.10.0-693.11.1.el7.x86_64</span><br><span class="line">比对版本号是否一致</span><br><span class="line">如果一致可以执行下此操作再次执行</span><br><span class="line">./vmware-install.pl</span><br><span class="line">如果出现</span><br><span class="line">/tmp/modconfig-b9RNHu/vmhgfs-only/page.c:1649:23: error: too many arguments to <span class="keyword">function</span> ‘wait_on_bit’ TASK_UNINTERRUPTIBLE);</span><br><span class="line">解决办法</span><br><span class="line"><span class="built_in">cd</span> /tmp/vm/vmware-tools-distrib/lib/modules/<span class="built_in">source</span></span><br><span class="line">[root@localhost <span class="built_in">source</span>]<span class="comment"># tar xf vmhgfs.tar</span></span><br><span class="line">[root@localhost <span class="built_in">source</span>]<span class="comment"># cd vmhgfs-only</span></span><br><span class="line"></span><br><span class="line">编辑脚本前可以先设置下行号</span><br><span class="line">CentOS下可能有n个账户，让vim显示行号有两种方法：仅让当前用户显示行号和让所有用户显示行号 </span><br><span class="line">一.仅让当前用户显示行号</span><br><span class="line">输入命令：vim ~/.vimrc</span><br><span class="line">写入：<span class="built_in">set</span> nu</span><br><span class="line">保存：wq</span><br><span class="line">手动加载配置： <span class="built_in">source</span> .vimrc</span><br><span class="line">二.让所有用户显示行号</span><br><span class="line">输入命令：vim /etc/vimrc</span><br><span class="line">在vimrc文件的最后添加：<span class="built_in">set</span> nu</span><br><span class="line">保存：wq</span><br><span class="line">手动加载配置：<span class="built_in">source</span> /etc/bashrc</span><br><span class="line">这样不管是哪个用户在vim下都显示行号</span><br><span class="line"></span><br><span class="line">[root@localhost vmhgfs-only]<span class="comment"># vi page.c</span></span><br><span class="line">找到1639行根据uname -r显示的版本号应将1639 </span><br><span class="line"><span class="comment">#if LINUX_VERSION_CODE &gt;= KERNEL_VERSION(3, 19, 0)</span></span><br><span class="line">改为1639 <span class="comment">#if LINUX_VERSION_CODE &gt;= KERNEL_VERSION(3, 10, 0)</span></span><br><span class="line">修改完后保存退出时会提示E45: <span class="string">'readonly'</span> option is <span class="built_in">set</span> (add ! to override)</span><br><span class="line">可以用:wq!加英文状态半角感叹号的方式保存并强制退出</span><br><span class="line">[root@localhost vmhgfs-only]<span class="comment"># cd ../</span></span><br><span class="line">[root@localhost <span class="built_in">source</span>]<span class="comment"># tar cf vmhgfs.tar vmhgfs-only</span></span><br><span class="line">[root@localhost <span class="built_in">source</span>]<span class="comment"># rm -rf vmhgfs-only</span></span><br><span class="line">重新<span class="built_in">cd</span>到vmware-tools-distrib目录安装</span><br><span class="line">[root@localhost vmware-tools-distrib]<span class="comment"># ./vmware-install.pl</span></span><br><span class="line">这回成功了</span><br><span class="line">Creating a new initrd boot image <span class="keyword">for</span> the kernel.</span><br><span class="line">   Starting Virtual Printing daemon: <span class="keyword">done</span></span><br><span class="line">Starting vmware-tools (via systemctl):  [  OK  ]</span><br><span class="line">The configuration of VMware Tools 10.0.5 build-3228253 <span class="keyword">for</span> Linux <span class="keyword">for</span> this </span><br><span class="line">running kernel completed successfully.</span><br><span class="line">Enjoy,</span><br><span class="line">--the VMware team</span><br><span class="line">接着到虚拟机里设置界面找到文件夹共享添加文件夹总是启用共享</span><br><span class="line">然后再到mnt目录中的hgfs就可以看到windows共享的目录了</span><br><span class="line">至此就可以在linux环境下做开发工作了。windows下编辑器编辑本地目录文件就可以实现同步了~~~</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> vmware_centos7_share_folder </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>centos7编译安装nginx、mysql、php</title>
      <link href="/2017/12/10/centos7-install-nginx-mysql-php/"/>
      <content type="html"><![CDATA[<h2 id="centos7编译安装nginx、mysql、php"><a href="#centos7编译安装nginx、mysql、php" class="headerlink" title="centos7编译安装nginx、mysql、php"></a>centos7编译安装nginx、mysql、php</h2><h3 id="安装前准备"><a href="#安装前准备" class="headerlink" title="安装前准备"></a>安装前准备</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mkdir /software</span></span><br><span class="line">[root@localhost ~]<span class="comment"># cd /software/</span></span><br><span class="line">yum -y install wget</span><br><span class="line">wget http://nginx.org/download/nginx-1.12.2.tar.gz</span><br><span class="line">https://cdn.mysql.com//Downloads/MySQL-5.7/mysql-boost-5.7.20.tar.gz</span><br><span class="line">wget http://am1.php.net/distributions/php-7.0.26.tar.gz</span><br><span class="line">关闭系统限制</span><br><span class="line">关闭系统防火墙</span><br><span class="line">[root@localhost software]<span class="comment"># systemctl stop firewalld.service </span></span><br><span class="line">[root@localhost software]<span class="comment"># systemctl disable firewalld.service </span></span><br><span class="line">关闭SElinux</span><br><span class="line">[root@localhost software]<span class="comment"># sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config</span></span><br><span class="line">[root@localhost software]<span class="comment"># setenforce 0</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="nginx1-12-2"><a href="#nginx1-12-2" class="headerlink" title="nginx1.12.2"></a>nginx1.12.2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">创建www账户 用来启动nginx</span><br><span class="line">[root@localhost software]<span class="comment"># useradd www -s /sbin/nologin </span></span><br><span class="line">安装依赖的包</span><br><span class="line">[root@localhost software]<span class="comment"># yum -y install pcre pcre-devel zlib zlib-devel gcc-c++ gcc openssl*</span></span><br><span class="line">解压Nginx源码包</span><br><span class="line">root@localhost software]<span class="comment"># tar zxvf nginx-1.12.2.tar.gz </span></span><br><span class="line">进入解压后的目录，对Nginx进行配置</span><br><span class="line">[root@localhost software]<span class="comment"># cd nginx-1.12.2/</span></span><br><span class="line">[root@localhost nginx-1.12.2]<span class="comment"># ./configure --user=www --group=www --prefix=/usr/local/nginx --with-http_realip_module --with-http_sub_module --with-http_gzip_static_module --with-http_stub_status_module  --with-pcre</span></span><br><span class="line">编译和安装</span><br><span class="line">[root@localhost nginx-1.12.2]<span class="comment"># make &amp;&amp; make install</span></span><br><span class="line">启动Nginx</span><br><span class="line">[root@localhost nginx-1.12.2]<span class="comment"># /usr/local/nginx/sbin/nginx</span></span><br><span class="line">关闭Nginx进程</span><br><span class="line">[root@localhost nginx-1.12.2]<span class="comment"># killall nginx</span></span><br><span class="line">-bash: killall: <span class="built_in">command</span> not found 没有killall命令的解决方法</span><br><span class="line">debian、ubuntu系统下：</span><br><span class="line">apt-get install psmisc</span><br><span class="line">centos或rhel系统下：</span><br><span class="line">yum install psmisc</span><br><span class="line">[root@localhost nginx-1.12.2]<span class="comment"># ps -ef|grep nginx</span></span><br><span class="line">nginx命令做软连接方便使用</span><br><span class="line">[root@localhost nginx-1.12.2]<span class="comment"># ln -s /usr/local/nginx/sbin/nginx /sbin/nginx</span></span><br><span class="line">nginx加入到systemctl中管理</span><br><span class="line">cat &gt;&gt; /usr/lib/systemd/system/nginx.service &lt;&lt; EOF</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=nginx - high performance web server</span><br><span class="line">Documentation=http://nginx.org/en/docs/</span><br><span class="line">After=network-online.target remote-fs.target nss-lookup.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/usr/<span class="built_in">local</span>/nginx/logs/nginx.pid</span><br><span class="line">ExecStartPre=/usr/sbin/nginx -t</span><br><span class="line">ExecStart=/usr/sbin/nginx</span><br><span class="line">ExecReload=//usr/sbin/nginx -s reload</span><br><span class="line">ExecStop=/usr/sbin/nginx -s stop</span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line">修改完systemctl服务，需要重新加载下daemon</span><br><span class="line">[root@localhost nginx-1.12.2]<span class="comment"># systemctl daemon-reload </span></span><br><span class="line">用systemctl启动Nginx服务，并查看状态</span><br><span class="line">[root@localhost nginx-1.12.2]<span class="comment"># systemctl start nginx</span></span><br><span class="line">[root@localhost nginx-1.12.2]<span class="comment"># systemctl status nginx</span></span><br><span class="line">设置nginx开机启动</span><br><span class="line">[root@localhost nginx-1.12.2]<span class="comment"># systemctl enable nginx</span></span><br><span class="line">设置Nginx环境变量</span><br><span class="line">vi /etc/profile</span><br><span class="line">nginx=/usr/<span class="built_in">local</span>/nginx/sbin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$nginx</span></span><br><span class="line">设置生效</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line">nginx正常安装访问突然访问不了可能是防火墙的问题</span><br><span class="line">centos7 nginx防火墙配置</span><br><span class="line">允许相应的端口</span><br><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=3306/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=9000/tcp --permanent</span><br><span class="line">重新载入配置</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h3 id="mysql5-7-20"><a href="#mysql5-7-20" class="headerlink" title="mysql5.7.20"></a>mysql5.7.20</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">注意：此处巨坑。要先卸载centos7自带mariadb</span><br><span class="line">[root@localhost software]<span class="comment"># rpm -qa | grep mariadb</span></span><br><span class="line">[root@localhost software]<span class="comment"># rpm -e --nodeps mariadb-libs-5.5.56-2.el7.x86_64</span></span><br><span class="line"></span><br><span class="line">安装依赖包</span><br><span class="line">[root@localhost nginx-1.12.0]<span class="comment"># cd /software/</span></span><br><span class="line">[root@localhost software]<span class="comment"># yum -y install ncurses ncurses-devel bison cmake gcc gcc-c++</span></span><br><span class="line">创建用户和组</span><br><span class="line">[root@localhost software]<span class="comment"># groupadd mysql</span></span><br><span class="line">[root@localhost software]<span class="comment"># useradd -s /sbin/nologin -g mysql mysql -M</span></span><br><span class="line">[root@localhost software]<span class="comment"># id mysql</span></span><br><span class="line">解压mysql源码包</span><br><span class="line">[root@localhost software]<span class="comment"># tar xzf mysql-boost-5.7.20.tar.gz</span></span><br><span class="line">进入解压后的目录，对mysql进行配置</span><br><span class="line">[root@localhost software]<span class="comment"># cd mysql-5.7.20</span></span><br><span class="line">[root@localhost mysql-5.7.20]<span class="comment"># cmake . -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DMYSQL_UNIX_ADDR=/usr/local/mysql/mysql.sock -DSYSCONFDIR=/usr/local/mysql/etc -DSYSTEMD_PID_DIR=/usr/local/mysql -DDEFAULT_CHARSET=utf8  -DDEFAULT_COLLATION=utf8_general_ci -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_ARCHIVE_STORAGE_ENGINE=1 -DWITH_BLACKHOLE_STORAGE_ENGINE=1 -DWITH_PERFSCHEMA_STORAGE_ENGINE=1 -DMYSQL_DATADIR=/usr/local/mysql/data -DWITH_BOOST=boost -DWITH_SYSTEMD=1</span></span><br><span class="line">编译和安装</span><br><span class="line">[root@localhost mysql-5.7.20]<span class="comment"># make &amp;&amp; make install</span></span><br><span class="line">设置mysql文件夹目录下的文件拥有者指定mysql用户</span><br><span class="line">[root@localhost mysql-5.7.20]<span class="comment"># chown -R mysql.mysql /usr/local/mysql/</span></span><br><span class="line">进入mysql目录写入my.cnf文件并配置数据库文件</span><br><span class="line">[root@localhost mysql-5.7.20]<span class="comment"># cd /usr/local/mysql/</span></span><br><span class="line">[root@localhost mysql]<span class="comment"># cat &gt;&gt; my.cnf &lt;&lt; EOF</span></span><br><span class="line">[client]</span><br><span class="line">port = 3306</span><br><span class="line">default-character-set=utf8</span><br><span class="line">socket = /usr/<span class="built_in">local</span>/mysql/mysql.sock</span><br><span class="line">[mysql]</span><br><span class="line">port = 3306</span><br><span class="line">default-character-set=utf8</span><br><span class="line">socket = /usr/<span class="built_in">local</span>/mysql/mysql.sock</span><br><span class="line">[mysqld]</span><br><span class="line">user = mysql</span><br><span class="line">basedir = /usr/<span class="built_in">local</span>/mysql</span><br><span class="line">datadir = /usr/<span class="built_in">local</span>/mysql/data</span><br><span class="line">port = 3306</span><br><span class="line">default-character-set=utf8</span><br><span class="line">pid-file = /usr/<span class="built_in">local</span>/mysql/mysqld.pid</span><br><span class="line">socket = /usr/<span class="built_in">local</span>/mysql/mysql.sock</span><br><span class="line">server-id = 1</span><br><span class="line"><span class="comment"># Remove leading # to set options mainly useful for reporting servers.</span></span><br><span class="line"><span class="comment"># The server defaults are faster for transactions and fast SELECTs.</span></span><br><span class="line"><span class="comment"># Adjust sizes as needed, experiment to find the optimal values.</span></span><br><span class="line"><span class="comment"># join_buffer_size = 128M</span></span><br><span class="line"><span class="comment"># sort_buffer_size = 2M</span></span><br><span class="line"><span class="comment"># read_rnd_buffer_size = 2M </span></span><br><span class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class="line">EOF</span><br><span class="line">设置my.cnf文件的拥有者指定mysql用户</span><br><span class="line">[root@localhost mysql]<span class="comment"># chown mysql.mysql my.cnf</span></span><br><span class="line">设置环境变量</span><br><span class="line">[root@localhost mysql]<span class="comment"># echo 'PATH=/usr/local/mysql/bin:/usr/local/mysql/lib:$PATH' &gt;&gt; /etc/profile</span></span><br><span class="line">[root@localhost mysql]<span class="comment"># echo 'export PATH' &gt;&gt; /etc/profile</span></span><br><span class="line">[root@localhost mysql]<span class="comment"># source /etc/profile</span></span><br><span class="line">初始化数据库</span><br><span class="line">[root@localhost mysql]<span class="comment"># bin/mysqld --initialize-insecure --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data --explicit_defaults_for_timestamp=1</span></span><br><span class="line">msyql加入到systemctl管理</span><br><span class="line">[root@localhost mysql]<span class="comment"># cp usr/lib/systemd/system/mysqld.service /usr/lib/systemd/system/</span></span><br><span class="line">重载systemctl服务</span><br><span class="line">[root@localhost mysql]<span class="comment"># systemctl daemon-reload </span></span><br><span class="line">[root@localhost mysql]<span class="comment"># systemctl start mysqld</span></span><br><span class="line">[root@localhost data]<span class="comment"># ps -ef|grep mysql</span></span><br><span class="line">设置mysql开机启动</span><br><span class="line">[root@localhost mysql]<span class="comment"># systemctl enable mysqld</span></span><br><span class="line">查看Mysql启动状态</span><br><span class="line">[root@localhost mysql]<span class="comment"># systemctl status mysqld</span></span><br><span class="line">进入数据库，创建一个测试数据库以及授权远程用户可访问这个数据库</span><br><span class="line">[root@localhost mysql]<span class="comment"># mysql</span></span><br><span class="line"><span class="comment"># 登陆成功</span></span><br><span class="line"><span class="comment"># 修改密码</span></span><br><span class="line"><span class="built_in">set</span> password <span class="keyword">for</span> root@localhost = password(<span class="string">'新密码'</span>);</span><br><span class="line"><span class="comment"># 刷新权限</span></span><br><span class="line">flush privileges;</span><br><span class="line">设置外部允许访问</span><br><span class="line">grant all privileges  on *.* to root@<span class="string">'%'</span> identified by <span class="string">"新密码"</span>;</span><br><span class="line"><span class="comment"># 刷新权限</span></span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h3 id="php7-0-26"><a href="#php7-0-26" class="headerlink" title="php7.0.26"></a>php7.0.26</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">解压</span><br><span class="line">[root@localhost software]<span class="comment"># tar zxvf php-7.0.26.tar.gz </span></span><br><span class="line">[root@localhost software]<span class="comment"># cd php-7.0.26</span></span><br><span class="line">查看PHP安装是具体有有些扩展和选项</span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># ./configure --help</span></span><br><span class="line">安装扩展要用到的软件模块</span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># yum -y install libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel curl curl-devel openssl openssl-devel</span></span><br><span class="line">配置 PHP 7</span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># ./configure --prefix=/usr/local/php --enable-fpm --with-fpm-user=nginx --with-fpm-group=nginx --with-mysqli --with-zlib --with-curl --with-gd --with-jpeg-dir --with-png-dir --with-freetype-dir --with-openssl --enable-mbstring --enable-xml --enable-session --enable-ftp --enable-pdo -enable-tokenizer --enable-zip</span></span><br><span class="line">编译和安装</span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># make &amp;&amp; make install</span></span><br><span class="line">配置php文档</span><br><span class="line">cp php.ini-development /usr/<span class="built_in">local</span>/php/lib/php.ini</span><br><span class="line">php.ini 路径应该放在 PREFIX/lib 文件夹，除非在安装的时候通过这个选项修改</span><br><span class="line">--with-config-file-path=PATH</span><br><span class="line">如果安装 PHP 时没有指明 --prefix ，那么php.ini路径是 /usr/<span class="built_in">local</span>/lib/php.ini。安装时有指明 --prefix，路径是 /usr/<span class="built_in">local</span>/php/lib/php.ini</span><br><span class="line">然后根据实际自己需要修改 php.ini。</span><br><span class="line">查找 mysqli.default_socket，修改成 mysqli.default_socket = /usr/<span class="built_in">local</span>/mysql/mysql.sock：</span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># grep mysqli.default_socket  /usr/local/php/lib/php.ini</span></span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># sed -i 's#mysqli.default_socket =#mysqli.default_socket = /usr/local/mysql/mysql.sock#'  /usr/local/php/lib/php.ini</span></span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># grep mysqli.default_socket  /usr/local/php/lib/php.ini</span></span><br><span class="line">修改时区，查找 date.timezone，改成（主要将前面的 ; 去掉，这个是注释用的）：</span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># grep date.timezone /usr/local/php/lib/php.ini </span></span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># sed -i 's#;date.timezone =#date.timezone = Asia/Shanghai#' /usr/local/php/lib/php.ini </span></span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># grep date.timezone /usr/local/php/lib/php.ini </span></span><br><span class="line">查看php版本</span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># /usr/local/php/bin/php -v</span></span><br><span class="line">PHP 7.0.26 (cli) (built: Dec 10 2017 04:48:36) ( NTS )</span><br><span class="line">Copyright (c) 1997-2017 The PHP Group</span><br><span class="line">Zend Engine v3.0.0, Copyright (c) 1998-2017 Zend Technologies</span><br><span class="line">查看模块</span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># /usr/local/php/bin/php -make</span></span><br><span class="line">配置php-fpm文档</span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf</span></span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># cp /usr/local/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.conf</span></span><br><span class="line">修改/usr/<span class="built_in">local</span>/php/etc/php-fpm.d/www.conf，把启动用户改为和nginx服务同一个启动用户（前面Nginx使用的是www账户，这里改成和Nginx使用一样的账户；一般都是使用www用户）</span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># grep -E 'user =|group =' /usr/local/php/etc/php-fpm.d/www.conf</span></span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># sed -i 's#user = nginx#user = www#' /usr/local/php/etc/php-fpm.d/www.conf</span></span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># sed -i 's#group = nginx#group = www#' /usr/local/php/etc/php-fpm.d/www.conf</span></span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># grep -E 'user =|group =' /usr/local/php/etc/php-fpm.d/www.conf</span></span><br><span class="line">其中 www.conf 中要留意这个值 listen = 127.0.0.1:9000</span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># grep 'listen = 127.0.0.1' /usr/local/php/etc/php-fpm.d/www.conf</span></span><br><span class="line">这里使用 9000 端口，这个选项在配置 Nginx 网站时要用到的。</span><br><span class="line">配置 php-fpm 启动服务脚本</span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># cp sapi/fpm/php-fpm.service /usr/lib/systemd/system/</span></span><br><span class="line">查看启动脚本中指定的程序目录和pid文件（默认已经修改过了，如果没有修改过执行下面操作）</span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># grep -E 'PIDFile|ExecStart' /usr/lib/systemd/system/php-fpm.service</span></span><br><span class="line">修改启动脚本，把里边 prefix 相关的内容用实际路径代替(如果已经改了就保存退出)</span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># vim /usr/lib/systemd/system/php-fpm.service</span></span><br><span class="line">解決 centos -bash: vim: <span class="built_in">command</span> not found</span><br><span class="line">yum -y install vim*</span><br><span class="line">重新载入systemd</span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># systemctl daemon-reload</span></span><br><span class="line">让php-fpm 开机启动</span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># systemctl daemon-reload</span></span><br><span class="line">立即启动 php-fpm</span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># systemctl start php-fpm</span></span><br><span class="line">查看php-fpm状态</span><br><span class="line">[root@localhost php-7.0.26]<span class="comment"># systemctl status php-fpm</span></span><br><span class="line">根据上面设置MySQL设置PHP环境变量</span><br><span class="line">vi /etc/profile</span><br><span class="line">PATH=/usr/<span class="built_in">local</span>/php/bin:/usr/<span class="built_in">local</span>/mysql/bin:/usr/<span class="built_in">local</span>/mysql/lib:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> PATH</span><br><span class="line">设置生效 </span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h3 id="redis和mongodb"><a href="#redis和mongodb" class="headerlink" title="redis和mongodb"></a>redis和mongodb</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">待更新......</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> centos7_nginx1.12.2_mysql.5.7.20_php7.0.26 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>win10下java环境搭建</title>
      <link href="/2017/10/14/java-first-learn/"/>
      <content type="html"><![CDATA[<h2 id="win10下java环境搭建"><a href="#win10下java环境搭建" class="headerlink" title="win10下java环境搭建"></a>win10下java环境搭建</h2><h3 id="jdk下载"><a href="#jdk下载" class="headerlink" title="jdk下载"></a>jdk下载</h3><p><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">jdk下载</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">最新版的java9部署环境会有问题。我选择了java8。</span><br><span class="line">接下来就开始安装jdk,可以通过“更改”选择自己想要安装到的目录，然后点击下一步即可。安装向导会检查到你未安装jre，然后提示你安装jre。可以新建个文件夹安装在jdk同级目录下</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="如何下载"><a href="#如何下载" class="headerlink" title="如何下载"></a>如何下载</h3><p><img src="jdk1.png" alt="jdk1"><br><img src="jdk2.png" alt="jdk2"><br><img src="jdk3.png" alt="jdk3"></p><h3 id="环境变量的坑"><a href="#环境变量的坑" class="headerlink" title="环境变量的坑"></a>环境变量的坑</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">第一次配置错了。然后在命令行执行了验证。然后修改为正确的环境变量配置。不重启电脑的话怎么都不会生效。会把新手搞死。</span><br></pre></td></tr></table></figure><h3 id="jdk环境变量配置"><a href="#jdk环境变量配置" class="headerlink" title="jdk环境变量配置"></a>jdk环境变量配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">我的电脑→右键→属性→高级→环境变量</span><br><span class="line">新建两个系统变量和变量值</span><br><span class="line">以下是我的配置</span><br><span class="line">变量名：JAVA_HOME</span><br><span class="line">变量值：D:\Java\jdk1.8.0_144</span><br><span class="line">变量名：CLASSPATH</span><br><span class="line">变量值：.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;</span><br><span class="line">接着打开“Path”系统变量，新建两个系统变量</span><br><span class="line">添加%JAVA_HOME%\bin和%JAVA_HOME%\jre\bin两个系统变量让系统可以在任何路径下识别java命令</span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">到命令行界面分别输入java和java -version和javac都正常运行说明已安装成功</span><br></pre></td></tr></table></figure><h3 id="maven下载"><a href="#maven下载" class="headerlink" title="maven下载"></a>maven下载</h3><p>maven3.2以上版本要求jdk1.6及以上版本<br><a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener">maven下载</a><br>我下载的是Binary zip archive     apache-maven-3.5.0-bin.zip</p><h3 id="maven环境变量配置"><a href="#maven环境变量配置" class="headerlink" title="maven环境变量配置"></a>maven环境变量配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">我的电脑→右键→属性→高级→环境变量</span><br><span class="line">新建一个系统变量和变量值</span><br><span class="line">以下是我的配置</span><br><span class="line">变量名：MAVEN_HOME</span><br><span class="line">变量值：D:\Java\apache-maven-3.5.0</span><br><span class="line">接着打开“Path”系统变量，新建一个系统变量</span><br><span class="line">添加%MAVEN_HOME%\bin系统变量让系统可以在任何路径下识别mvn命令</span><br></pre></td></tr></table></figure><h3 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">到命令行界面输入mvn -version正常运行说明已安装成功</span><br></pre></td></tr></table></figure><h3 id="java开发工具"><a href="#java开发工具" class="headerlink" title="java开发工具"></a>java开发工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">我使用的是Intellij IDEA</span><br><span class="line">开发工具配置jdk和maven自己谷歌百度去</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> java_environment_to_build </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>php截取字符中间保留星号</title>
      <link href="/2017/08/27/php-substr-cut/"/>
      <content type="html"><![CDATA[<h2 id="php截取字符"><a href="#php截取字符" class="headerlink" title="php截取字符"></a>php截取字符</h2><h3 id="php截取字符中间保留星号"><a href="#php截取字符中间保留星号" class="headerlink" title="php截取字符中间保留星号"></a>php截取字符中间保留星号</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">    <span class="keyword">function</span> substr_cut(<span class="variable">$user_name</span>)&#123;</span><br><span class="line">        //获取字符串长度</span><br><span class="line">        <span class="variable">$strlen</span> = mb_strlen(<span class="variable">$user_name</span>, <span class="string">'utf-8'</span>);</span><br><span class="line">        //如果字符串长度小于2，不做任何处理</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$strlen</span>&lt;2)&#123;</span><br><span class="line">            <span class="built_in">return</span> <span class="variable">$user_name</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            //mb_substr — 获取字符串的部分</span><br><span class="line">            <span class="variable">$firstStr</span> = mb_substr(<span class="variable">$user_name</span>, 0, 1, <span class="string">'utf-8'</span>);</span><br><span class="line">            <span class="variable">$lastStr</span> = mb_substr(<span class="variable">$user_name</span>, -1, 1, <span class="string">'utf-8'</span>);</span><br><span class="line">            //str_repeat — 重复一个字符串</span><br><span class="line">            <span class="built_in">return</span> <span class="variable">$strlen</span> == 2 ? <span class="variable">$firstStr</span> . str_repeat(<span class="string">'*'</span>, mb_strlen(<span class="variable">$user_name</span>, <span class="string">'utf-8'</span>) - 1) : <span class="variable">$firstStr</span> . str_repeat(<span class="string">"*"</span>, <span class="variable">$strlen</span> - 2) . <span class="variable">$lastStr</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$str</span> = <span class="string">'中文ewe'</span>;</span><br><span class="line"><span class="built_in">echo</span> substr_cut(<span class="variable">$str</span>);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
      
      
        <tags>
            
            <tag> php_substr_cut </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>正则匹配</title>
      <link href="/2017/08/07/zhengze/"/>
      <content type="html"><![CDATA[<h2 id="正则匹配"><a href="#正则匹配" class="headerlink" title="正则匹配"></a>正则匹配</h2><h3 id="匹配只能由中文、数字、英文大写三者至少出现一次组合而成的字符串"><a href="#匹配只能由中文、数字、英文大写三者至少出现一次组合而成的字符串" class="headerlink" title="匹配只能由中文、数字、英文大写三者至少出现一次组合而成的字符串"></a>匹配只能由中文、数字、英文大写三者至少出现一次组合而成的字符串</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> checkString(r)&#123;</span><br><span class="line">    var flag;</span><br><span class="line">    var count=0;</span><br><span class="line">    var count1=0;</span><br><span class="line">    var count2=0;</span><br><span class="line">    var count3=0;</span><br><span class="line">    <span class="keyword">for</span>(var i=0;i&lt;r.length;i++)&#123;</span><br><span class="line">        switch(flag)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> /[\u4e00-\u9fa5]+/.<span class="built_in">test</span>(r.charAt(i)):</span><br><span class="line">            count1=count1+1;</span><br><span class="line">            count=count+1;</span><br><span class="line">            <span class="built_in">break</span>;</span><br><span class="line">            <span class="keyword">case</span> /[A-Z]+/.<span class="built_in">test</span>(r.charAt(i)):</span><br><span class="line">            count2=count2+1;</span><br><span class="line">            count=count+1;</span><br><span class="line">            <span class="built_in">break</span>;</span><br><span class="line">            <span class="keyword">case</span> /[0-9]+/.<span class="built_in">test</span>(r.charAt(i)):</span><br><span class="line">            count3=count3+1;</span><br><span class="line">            count=count+1;</span><br><span class="line">            <span class="built_in">break</span>;</span><br><span class="line">            default:</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(count1!=0&amp;&amp;count2!=0&amp;&amp;count3!=0&amp;&amp;count&gt;=a.length)&#123;</span><br><span class="line">       <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">       <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">alert(checkString(<span class="string">"1S中s"</span>));</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
      
      
        <tags>
            
            <tag> regular </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>移动端弹窗多种方式</title>
      <link href="/2017/08/07/jquery-tanchuan/"/>
      <content type="html"><![CDATA[<h2 id="多种弹窗方式"><a href="#多种弹窗方式" class="headerlink" title="多种弹窗方式"></a>多种弹窗方式</h2><h3 id="tanchuan-css"><a href="#tanchuan-css" class="headerlink" title="tanchuan.css"></a>tanchuan.css</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">注意：记得将lbw替换为script</span><br><span class="line">../img/btn_close.gif右上角的×自己设计去</span><br><span class="line">*/</span><br><span class="line">/*自适应适配*/</span><br><span class="line">@media (min-width: 320px) &#123;html &#123;font-size: 100%; &#125;&#125;</span><br><span class="line">@media (min-width: 360px) &#123;html &#123;font-size: 112.5%;&#125;&#125;</span><br><span class="line">@media (min-width: 384px) &#123;html &#123;font-size: 120%;&#125;&#125;</span><br><span class="line">@media (min-width: 400px) &#123;html &#123;font-size: 125%;&#125;&#125;</span><br><span class="line">@media (min-width: 540px) &#123;html &#123;font-size: 168.75%;&#125;&#125;</span><br><span class="line">@media (min-width: 600px) &#123;html &#123;font-size: 187.5%;&#125;&#125;</span><br><span class="line">@media (min-width: 640px) &#123;html &#123;font-size: 200%;&#125;&#125;</span><br><span class="line">@media (min-width: 720px) &#123;html &#123;font-size: 225%;&#125;&#125;</span><br><span class="line">@media (min-width: 768px) &#123;html &#123;font-size: 100%;&#125;&#125;</span><br><span class="line">html &#123;font-size: calc(100vw / 320 * 16);&#125;</span><br><span class="line">*, *:before, *:after &#123;</span><br><span class="line">-moz-box-sizing: border-box;   /* Firefox 1, probably can drop this */</span><br><span class="line">-webkit-box-sizing: border-box;   /* Safari 3-4, also probably droppable */</span><br><span class="line">box-sizing: border-box;   /* Everything <span class="keyword">else</span> */</span><br><span class="line">&#125;</span><br><span class="line">/*背景遮罩层css*/</span><br><span class="line">.xy-ui-overlay&#123;</span><br><span class="line">position:fixed;left:0;top:0;right:0;height:100%;width:100%;</span><br><span class="line">&#125;</span><br><span class="line">/*窗体容器css*/</span><br><span class="line">.xy-ui-wrapper&#123;</span><br><span class="line">background:<span class="comment">#fff;float:left;font-family:"Microsoft Yahei",Arial;padding:0.0625rem;min-width:15rem;_width:15rem;max-width:18.875rem;</span></span><br><span class="line">box-shadow:0 0 0.3125rem rgba(0,0,0,0.3);-webkit-box-shadow:0 0 0.3125rem rgba(0,0,0,0.3);-moz-box-shadow:0 0 0.3125rem rgba(0,0,0,0.3);</span><br><span class="line">&#125;</span><br><span class="line">.anim-ui-wrapper&#123;</span><br><span class="line">/* animation:anim_ui_in 0.3s ease-in-out;-webkit-animation:anim_ui_in 0.3s ease-in-out;-moz-animation:anim_ui_in 0.3s ease-in-out; */</span><br><span class="line">animation:showAlert 0.3s ease-in-out;-webkit-animation:showAlert 0.3s ease-in-out;-moz-animation:showAlert 0.3s ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line">/* ==========弹窗css3动画 (打开) &#123;&#123;&#123; */</span><br><span class="line">/*弹窗效果一*/</span><br><span class="line">/* @keyframes anim_ui_in &#123;</span><br><span class="line">0%&#123;opacity: 0; transform: scale(1.2);&#125; 50%&#123;transform: scale(0.95);&#125; 100%&#123;opacity: 1; transform: scale(1);&#125;</span><br><span class="line">&#125;</span><br><span class="line">@-webkit-keyframes anim_ui_in &#123;</span><br><span class="line">0%&#123;opacity: 0; -webkit-transform: scale(1.2);&#125; 50%&#123;-webkit-transform: scale(0.95);&#125; 100%&#123;opacity: 1; -webkit-transform: scale(1);&#125;</span><br><span class="line">&#125;</span><br><span class="line">@-moz-keyframes anim_ui_in &#123;</span><br><span class="line">0%&#123;opacity: 0; -moz-transform: scale(1.2);&#125; 50%&#123;-moz-transform: scale(0.95);&#125; 100%&#123;opacity: 1; -moz-transform: scale(1);&#125;</span><br><span class="line">&#125; */</span><br><span class="line">/*弹窗效果二*/</span><br><span class="line">@keyframes showAlert&#123;</span><br><span class="line">0% &#123; transform: scale(0.7); &#125;</span><br><span class="line">45% &#123; transform: scale(1.05); &#125;</span><br><span class="line">80% &#123; transform: scale(0.95); &#125;</span><br><span class="line">100% &#123; transform: scale(1); &#125;</span><br><span class="line">&#125;</span><br><span class="line">@-webkit-keyframes showAlert&#123;</span><br><span class="line">0% &#123; transform: scale(0.7); -webkit-transform: scale(0.7); &#125;</span><br><span class="line">45% &#123; transform: scale(1.05); -webkit-transform: scale(1.05); &#125;</span><br><span class="line">80% &#123; transform: scale(0.95); -webkit-tranform: scale(0.95); &#125;</span><br><span class="line">100% &#123; transform: scale(1); -webkit-transform: scale(1); &#125;</span><br><span class="line">&#125;</span><br><span class="line">@-moz-keyframes showAlert&#123;</span><br><span class="line">0% &#123; transform: scale(0.7); -moz-transform: scale(0.7); &#125;</span><br><span class="line">45% &#123; transform: scale(1.05); -moz-transform: scale(1.05); &#125;</span><br><span class="line">80% &#123; transform: scale(0.95); -moz-tranform: scale(0.95); &#125;</span><br><span class="line">100% &#123; transform: scale(1); -moz-transform: scale(1); &#125;</span><br><span class="line">&#125;</span><br><span class="line">.xy-ui-head&#123;</span><br><span class="line">background:<span class="comment">#fff;border-bottom:0.0625rem solid #e8e8e8;height:2.5rem;line-height:2.375rem;</span></span><br><span class="line">&#125;</span><br><span class="line">.xy-ui-title&#123;</span><br><span class="line">color:<span class="comment">#000;font-size:0.9375rem;font-family:"Microsoft Yahei";padding:0 0.9375rem 0 0.625rem;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;vertical-align:middle;</span></span><br><span class="line">&#125;</span><br><span class="line">.xy-ui-close&#123;</span><br><span class="line">background:url(../img/btn_close.gif) no-repeat center center;background-size:0.75rem 0.6875rem;-webkit-background-size:0.75rem 0.6875rem;cursor:pointer;height:0.6875rem;width:0.75rem;position:absolute;top:0.90125rem;right:0.625rem;</span><br><span class="line">transition:all 0.8s;-webkit-transition:all 0.8s;-moz-transition:all 0.8s;</span><br><span class="line">-webkit-tap-highlight-color:rgba(255,255,255,0); /*去除点击蓝色边框*/</span><br><span class="line">&#125;</span><br><span class="line">.xy-ui-close:hover&#123;</span><br><span class="line">transform:rotate(180deg);-webkit-transform:rotate(180deg);-moz-transform:rotate(180deg);</span><br><span class="line">transform-origin:50% 50%; -webkit-transform-origin:50% 50%; -moz-transform-origin:50% 50%;</span><br><span class="line">&#125;</span><br><span class="line">/* 底部按钮栏 */</span><br><span class="line">.xy-ui-foot&#123;</span><br><span class="line">background:<span class="comment">#f7f7f7;border-top:0.0625rem solid #e8e8e8;</span></span><br><span class="line">&#125;</span><br><span class="line">.xy-ui-foot .ui-btns&#123;</span><br><span class="line">background:<span class="comment">#f7f7f7;border-right:0.0625rem solid #e8e8e8;color:#333;text-shadow:0.0625rem 0.0625rem #fff;</span></span><br><span class="line">cursor:pointer;display:inline;<span class="built_in">float</span>:left;font:0.9375rem/2.8125rem <span class="string">"Microsoft Yahei"</span>;height:2.8125rem;overflow:hidden;_zoom:1;text-align:center;text-decoration:none;vertical-align:middle;</span><br><span class="line">-webkit-tap-highlight-color:rgba(255,255,255,0); /*去除点击蓝色边框*/</span><br><span class="line">&#125;</span><br><span class="line">.xy-ui-foot .ui-btns:active&#123;background:<span class="comment">#f2f2f2;&#125;</span></span><br><span class="line">.xy-ui-foot .xy_ui_btn0&#123;border-right:0 none;<span class="built_in">float</span>:right;&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;xyPop弹窗 - (测试版 v1.0)&lt;/title&gt;</span><br><span class="line">&lt;meta content=<span class="string">"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"</span> name=<span class="string">"viewport"</span>&gt;</span><br><span class="line">&lt;meta name=<span class="string">"format-detection"</span> content=<span class="string">"telephone=no"</span>&gt;</span><br><span class="line">&lt;lbw <span class="built_in">type</span>=<span class="string">"text/javalbw"</span> src=<span class="string">"js/jquery-1.9.1.min.js"</span>&gt;&lt;/lbw&gt;</span><br><span class="line">&lt;lbw <span class="built_in">type</span>=<span class="string">"text/javalbw"</span> src=<span class="string">"js/tanchuan.js"</span>&gt;&lt;/lbw&gt;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"css/tanchuan.css"</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div style=<span class="string">"font-size:1rem;background:#fcc;"</span>&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;&lt;a href=<span class="string">"javalbw:;"</span> id=<span class="string">"KKK"</span>&gt;xyPop消息提示(多按钮事件测试)&lt;/a&gt;&lt;/li&gt;&lt;br&gt;</span><br><span class="line">&lt;lbw <span class="built_in">type</span>=<span class="string">"text/javalbw"</span>&gt;</span><br><span class="line">$(<span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">$(<span class="string">"#KKK"</span>).on(<span class="string">"click"</span>, <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">/* 1.===原始方法调用 (object模式) */</span><br><span class="line">xyPop(&#123;</span><br><span class="line">id: <span class="string">"pop_msg"</span>,</span><br><span class="line">title: <span class="string">"弹窗提醒"</span>,</span><br><span class="line">content: <span class="string">"提示：数据请求成功，正等待服务器回应！"</span>,</span><br><span class="line"><span class="built_in">type</span>: <span class="string">"success"</span>,</span><br><span class="line">padding: 50,</span><br><span class="line">btn: [<span class="string">"确定按钮"</span>,<span class="string">"按钮1"</span>,<span class="string">"按钮2"</span>, <span class="string">"按钮3"</span>],</span><br><span class="line">btn1: <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">//alert(<span class="string">"同意"</span>);</span><br><span class="line">xyPop(<span class="string">"我只是一个简单的提示!"</span>);</span><br><span class="line">&#125;,</span><br><span class="line">btn2: <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">alert(<span class="string">"我是关闭执行"</span>);</span><br><span class="line">&#125;,</span><br><span class="line">btn3: <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">xyPop(<span class="string">"我是两个参数调用后的执行效果，确定要删除这条数据吗？"</span>, <span class="keyword">function</span>(i)&#123;</span><br><span class="line">xyPop.msg(<span class="string">"恭喜，数据删除成功！"</span>, &#123;<span class="built_in">type</span>: <span class="string">"success"</span>, lock: 1&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;,</span><br><span class="line">btn4: <span class="keyword">function</span>(i)&#123;</span><br><span class="line">alert(<span class="string">"关闭"</span>);</span><br><span class="line">&#125;,</span><br><span class="line">fixed: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/lbw&gt;</span><br><span class="line">&lt;li&gt;&lt;a href=<span class="string">"javalbw:;"</span> onclick=<span class="string">"xyPop(&#123;id:&amp;#39;xyPop_follow&amp;#39;, type:&amp;#39;confirm&amp;#39;, content:&amp;#39;您确定要删除这条数据吗？&amp;#39;,btn:[&amp;#39;确定&amp;#39;,&amp;#39;取消&amp;#39;], onOk:function()&#123;</span></span><br><span class="line"><span class="string">xyPop.msg(&amp;#39;数据删除成功！&amp;#39;, &#123;lock:1&#125;);</span></span><br><span class="line"><span class="string">&#125;&#125;);"</span>&gt;xyPop测试(自定义按钮、返回函数)&lt;/a&gt;&lt;/li&gt;&lt;br&gt;</span><br><span class="line">&lt;li&gt;&lt;a href=<span class="string">"javalbw:;"</span> onclick=<span class="string">"xyPop(&#123;content:&amp;#39;您没有填写完整信息!&amp;#39;&#125;);"</span>&gt;xyPop测试(内容content提示——短内容)&lt;/a&gt;&lt;/li&gt;&lt;br&gt;</span><br><span class="line">&lt;li&gt;&lt;a href=<span class="string">"javalbw:;"</span> class=<span class="string">"followid22"</span> onclick=<span class="string">"xyPop(&#123;content:&amp;#39;对不起，用户名格式有误，用户名只能输入 汉字字母和数字下划线!&amp;#39;&#125;);"</span>&gt;xyPop测试(内容content提示——长内容)&lt;/a&gt;&lt;/li&gt;&lt;br&gt;</span><br><span class="line">&lt;li&gt;&lt;a href=<span class="string">"javalbw:;"</span> onclick=<span class="string">"xyPop(&#123;title:&amp;#39;定时关闭&amp;#39;, content:&amp;#39;本窗口将在3s后关闭!&amp;#39;, time:3, lock:1&#125;);"</span>&gt;xyPop定时关闭(3s后关闭)&lt;/a&gt;&lt;/li&gt;&lt;br&gt;</span><br><span class="line">&lt;li&gt;&lt;a href=<span class="string">"javalbw:;"</span> onclick=<span class="string">"xyPop(&#123;title:false, content:&amp;#39;本窗口没有标题栏提示!&amp;#39;&#125;);"</span>&gt;xyPop测试(没有顶部标题栏 title:<span class="literal">false</span>)&lt;/a&gt;&lt;/li&gt;&lt;br&gt;</span><br><span class="line">&lt;li&gt;&lt;a href=<span class="string">"javalbw:;"</span> onclick=<span class="string">"xyPop(&#123;title:&amp;#39;无底部按钮&amp;#39;, content:&amp;#39;本窗口没有底部按钮!&amp;#39;, bottom:false&#125;);"</span>&gt;xyPop测试(没有底部按钮 bottom:<span class="literal">false</span>)&lt;/a&gt;&lt;/li&gt;&lt;br&gt;</span><br><span class="line">&lt;li&gt;&lt;a href=<span class="string">"javalbw:;"</span> onclick=<span class="string">"xyPop.msg(&amp;#39;本窗口没有顶部及底部的超精简提示!&amp;#39;);"</span>&gt;xyPop测试(没有顶部及底部的超精简提示)&lt;/a&gt;&lt;/li&gt;&lt;br&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;div style=<span class="string">"background:#eee;color:red;font-weight:700;"</span>&gt;更多精彩功能，敬请期待……&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="tanchuan-js"><a href="#tanchuan-js" class="headerlink" title="tanchuan.js"></a>tanchuan.js</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br></pre></td><td class="code"><pre><span class="line">!<span class="keyword">function</span>(w, $)&#123;</span><br><span class="line">var utils = &#123;</span><br><span class="line">//当前JS路径</span><br><span class="line">getPath: <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">var js = document.lbws, lbw = js[js.length - 1], jsPath = lbw.src;</span><br><span class="line"><span class="built_in">return</span> jsPath.substring(0, jsPath.lastIndexOf(<span class="string">"/"</span>) + 1);</span><br><span class="line">&#125;(),</span><br><span class="line">//浏览器检测</span><br><span class="line">browser: <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line"><span class="built_in">return</span> &#123;</span><br><span class="line">mobile: /Android|iPhone|SymbianOS|Windows Phone|iPad|iPod/.<span class="built_in">test</span>(navigator.userAgent.toLowerCase())</span><br><span class="line">&#125;;</span><br><span class="line">&#125;()</span><br><span class="line">&#125;,</span><br><span class="line">/**工厂构造函数*/</span><br><span class="line">Factory = <span class="keyword">function</span>(configs)&#123;</span><br><span class="line">var _i = this, c = _i.options;</span><br><span class="line">_i.config = $.extend(&#123;&#125;, c, configs);</span><br><span class="line"></span><br><span class="line">//实例化弹窗</span><br><span class="line"><span class="keyword">if</span>(!(_i instanceof Factory))&#123;</span><br><span class="line"><span class="built_in">return</span> new Factory(configs);</span><br><span class="line">&#125;</span><br><span class="line">_i.init();</span><br><span class="line">&#125;;</span><br><span class="line">Factory.prototype = &#123;</span><br><span class="line">options: &#123;</span><br><span class="line">dom: <span class="string">"xy-ui-pop"</span>,//标识弹窗，用于关闭所有</span><br><span class="line">id: <span class="string">"uiPop"</span>,//弹窗ID (不同ID对应不同弹窗)</span><br><span class="line">title: <span class="string">"提示"</span>,//标题(为<span class="literal">false</span>时隐藏标题)</span><br><span class="line">content: <span class="string">""</span>,//消息内容</span><br><span class="line"><span class="built_in">type</span>: <span class="string">"warning"</span>,//图标类型 warning|error|success|confirm</span><br><span class="line">padding: <span class="string">"20px"</span>,//内容填充区域</span><br><span class="line">lock: 1,//锁定屏幕(遮罩)</span><br><span class="line">fixed: <span class="literal">false</span>,//是否固定定位</span><br><span class="line">zIndex: 9999,//设置元素层叠</span><br><span class="line">time: 0,//定时关闭</span><br><span class="line">btn: <span class="string">"确定"</span>,//按钮(String/Array) btn:<span class="string">"确定"</span> | btn:[<span class="string">"确定"</span>, <span class="string">"取消"</span>] | btn: [<span class="string">'按钮1'</span>, <span class="string">'按钮2'</span>, <span class="string">'按钮3'</span>, …]</span><br><span class="line">onShow: null,//打开弹窗成功回调方法</span><br><span class="line">onOk: null,//确定按钮回调方法</span><br><span class="line">onClose: null,//关闭按钮回调方法</span><br><span class="line">bottom: <span class="literal">true</span>,//底部(为<span class="literal">false</span>时隐藏底部)</span><br><span class="line"></span><br><span class="line">alpha: [<span class="string">".4"</span>, <span class="string">"#000"</span>],//设置遮罩层背景及透明度</span><br><span class="line">skinPath: <span class="string">"skin/"</span>//css或image路径</span><br><span class="line">&#125;,</span><br><span class="line">init: <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">var _i = this, opt = _i.config, c = null, popWin = null, offsetL, offsetT;</span><br><span class="line">_i.isfixed = (opt.fixed || opt.time) ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>($(<span class="string">"#"</span> + opt.id)[0])</span><br><span class="line"><span class="built_in">return</span>;</span><br><span class="line">c = $(<span class="string">"&lt;div id='"</span>+opt.id+<span class="string">"' class='"</span>+opt.dom+<span class="string">"'&gt;&lt;/div&gt;"</span>);</span><br><span class="line">c.html(</span><br><span class="line">/**遮罩*/</span><br><span class="line">(opt.lock ? <span class="string">'&lt;div class="xy-ui-overlay"&gt;&lt;/div&gt;'</span> : <span class="string">''</span>)</span><br><span class="line">/**窗体*/</span><br><span class="line">+ <span class="string">'&lt;div class="xy-ui-wrapper anim-ui-wrapper"&gt;'</span></span><br><span class="line">/*标题区域*/</span><br><span class="line">+ (opt.title ? <span class="string">'&lt;div class="xy-ui-head"&gt;&lt;div class="xy-ui-title"&gt;'</span>+opt.title+<span class="string">'&lt;/div&gt;&lt;a class="xy-ui-close"&gt;&lt;/a&gt;&lt;/div&gt;'</span> : <span class="string">''</span>)</span><br><span class="line">/*内容区域*/</span><br><span class="line">+ <span class="string">'&lt;div class="xy-ui-body"&gt;'</span></span><br><span class="line">+(opt.type ? <span class="string">'&lt;div style="text-align:center;"&gt;&lt;span style="background:url('</span>+ opt.skinPath + opt.type +<span class="string">'_icon.gif) no-repeat 0 center;display:inline-block;padding:0.75rem 0 0.75rem 2.625rem;"&gt;'</span> + opt.content + <span class="string">'&lt;/span&gt;&lt;/div&gt;'</span> : opt.content)</span><br><span class="line">+ <span class="string">'&lt;/div&gt;'</span></span><br><span class="line">/*底部区域*/</span><br><span class="line">+ (opt.bottom &amp;&amp; opt.btn ? <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">/*定义多个按钮*/</span><br><span class="line">var btn = <span class="string">""</span>;</span><br><span class="line">typeof opt.btn === <span class="string">"string"</span> &amp;&amp; (opt.btn = [opt.btn]);</span><br><span class="line">$.each(opt.btn, <span class="keyword">function</span>(i, v)&#123;</span><br><span class="line">btn += <span class="string">'&lt;a class="ui-btns xy_ui_btn'</span>+i+<span class="string">'" style="width: '</span>+ (100 / opt.btn.length)+<span class="string">'%"&gt;'</span>+v+<span class="string">'&lt;/a&gt;'</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">return</span> <span class="string">'&lt;div class="xy-ui-foot"&gt;'</span></span><br><span class="line">+ <span class="string">'&lt;div class="xy-ui-btns"&gt;'</span>+ btn +<span class="string">'&lt;/div&gt;'</span></span><br><span class="line"><span class="string">'&lt;/div&gt;'</span></span><br><span class="line">&#125;() : <span class="string">''</span>)</span><br><span class="line">+ <span class="string">'&lt;/div&gt;'</span></span><br><span class="line">);</span><br><span class="line">$(<span class="string">"body"</span>).append(c); //插入到body最后</span><br><span class="line">/**锁屏设置*/</span><br><span class="line">_i.overlay = c.find(<span class="string">".xy-ui-overlay"</span>);</span><br><span class="line">_i.overlay.css(&#123;</span><br><span class="line"><span class="string">"background-color"</span>: opt.alpha[1] || <span class="string">"#000"</span>,</span><br><span class="line"><span class="string">"opacity"</span>: 0,</span><br><span class="line"><span class="string">"z-index"</span>: _i.maxIndex() + 1</span><br><span class="line">&#125;).fadeTo(300, opt.alpha[0]);</span><br><span class="line">_i.popWin = popWin = c.find(<span class="string">".xy-ui-wrapper"</span>);</span><br><span class="line">popWin.css(&#123;</span><br><span class="line"><span class="string">"position"</span>: _i.isfixed ? <span class="string">"fixed"</span> : <span class="string">"absolute"</span>,</span><br><span class="line"><span class="string">"z-index"</span>: _i.maxIndex() + 1</span><br><span class="line">&#125;);</span><br><span class="line">_i.body = _i.popWin.find(<span class="string">".xy-ui-body"</span>);</span><br><span class="line">_i.body.css(&#123;</span><br><span class="line"><span class="string">"padding"</span>: opt.padding</span><br><span class="line">&#125;);</span><br><span class="line">offsetL = ($(window).width() - popWin.outerWidth()) / 2;</span><br><span class="line">offsetT = ($(window).height() - popWin.outerHeight()) / 2;</span><br><span class="line">/**弹窗定位*/</span><br><span class="line">popWin.css(&#123;</span><br><span class="line"><span class="string">"left"</span>: _i.isfixed ? offsetL : $(document).scrollLeft() + offsetL,</span><br><span class="line"><span class="string">"top"</span>: _i.isfixed ? offsetT : $(document).scrollTop() + offsetT</span><br><span class="line">&#125;);</span><br><span class="line">/**弹窗重置*/</span><br><span class="line">_i.setPos = <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span>(!_i.isfixed)&#123;</span><br><span class="line">popWin.css(&#123;</span><br><span class="line"><span class="string">"left"</span>: $(document).scrollLeft() + ($(window).width() - popWin.outerWidth()) / 2,</span><br><span class="line"><span class="string">"top"</span>: $(document).scrollTop() + ($(window).height() - popWin.outerHeight()) / 2</span><br><span class="line">&#125;);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">popWin.css(&#123;</span><br><span class="line"><span class="string">"left"</span>: ($(window).width() - popWin.outerWidth()) / 2,</span><br><span class="line"><span class="string">"top"</span>: ($(window).height() - popWin.outerHeight()) / 2</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$(window).resize(_i.setPos);</span><br><span class="line">_i.ui_overlay = c.find(<span class="string">".xy-ui-overlay"</span>);</span><br><span class="line">_i.ui_close = c.find(<span class="string">".xy-ui-close"</span>);</span><br><span class="line"></span><br><span class="line">//弹窗事件</span><br><span class="line">_i.callback();</span><br><span class="line">&#125;,</span><br><span class="line">callback: <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">var _i = this, opt = _i.config;</span><br><span class="line"></span><br><span class="line">opt.onShow &amp;&amp; opt.onShow(_i);</span><br><span class="line">//弹窗自动关闭</span><br><span class="line"><span class="keyword">if</span>(opt.time)&#123;</span><br><span class="line">setTimeout(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">_i.close();</span><br><span class="line">&#125;, opt.time * 1000);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//按钮事件</span><br><span class="line">_i.popWin.find(<span class="string">".xy-ui-btns a"</span>).on(<span class="string">"click"</span>, <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">var index = $(this).index();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(index === 0)&#123; //默认是确定按钮 [第一个按钮，可以写btn1]</span><br><span class="line">opt.onOk ? (_i.close(), opt.onOk(_i)) : _i.close();</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(index === 1)&#123; //默认是取消按钮 [第二个按钮，可以写btn2]</span><br><span class="line">_i.close();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">opt[<span class="string">"btn"</span> + (index+1)] &amp;&amp; _i.close();</span><br><span class="line">&#125;</span><br><span class="line">opt[<span class="string">"btn"</span> + (index+1)] &amp;&amp; opt[<span class="string">"btn"</span> + (index+1)](_i);</span><br><span class="line">&#125;);</span><br><span class="line">//右上角关闭</span><br><span class="line"><span class="keyword">if</span>(_i.ui_close[0])&#123;</span><br><span class="line">_i.ui_close.on(<span class="string">"click"</span>, <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">_i.close();</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">//点击锁屏重置窗体位置 (双击关闭弹窗)</span><br><span class="line">_i.ui_overlay.on(<span class="string">"click"</span>, <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">_i.setPos();</span><br><span class="line">&#125;);</span><br><span class="line">&#125;,</span><br><span class="line">//关闭弹窗</span><br><span class="line">close: <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">var _i = this, opt = _i.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($(<span class="string">"#"</span> + opt.id))&#123;</span><br><span class="line">$(<span class="string">"#"</span> + opt.id).remove();</span><br><span class="line">&#125;</span><br><span class="line">opt.onClose &amp;&amp; opt.onClose(_i); //执行关闭事件</span><br><span class="line">&#125;,</span><br><span class="line">//关闭页面所有弹窗(根据页面唯一弹窗标识)</span><br><span class="line">closeAll: <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">$(<span class="string">"."</span> + this.config.dom).each(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">$(this).remove();</span><br><span class="line">&#125;);</span><br><span class="line">&#125;,</span><br><span class="line">//获取弹窗最大层级</span><br><span class="line">maxIndex: <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line"><span class="keyword">for</span>(var idx = this.config.zIndex, elem = $(<span class="string">"*"</span>), i = 0, len = elem.length; i &lt; len; i++)</span><br><span class="line">idx = Math.max(idx, elem[i].style.zIndex);</span><br><span class="line"><span class="built_in">return</span> idx;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">//提供外部访问接口</span><br><span class="line">var interface = (<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">/*</span><br><span class="line">===多功能消息弹窗(合并alert和confirm)(可接收三个参数[可向左容错])===</span><br><span class="line">1. 参数1个 信息内容</span><br><span class="line">2. 参数2个 &#123;a:1~2组合[信息内容~配置参数] | b:1~3组合[信息内容~执行函数]&#125;</span><br><span class="line">3. 参数3个 &#123;a:1~2~3组合[信息内容~定时关闭~执行函数] | b:1~2~3组合[信息内容~配置参数~执行函数]&#125;</span><br><span class="line">*/</span><br><span class="line">exports = <span class="keyword">function</span>(content, options, fn)&#123;</span><br><span class="line">Factory(</span><br><span class="line">typeof content === <span class="string">"object"</span> ? arguments[0] : $.extend(&#123;</span><br><span class="line">content: content,</span><br><span class="line">onOk: typeof options === <span class="string">"function"</span> ? options : fn,</span><br><span class="line">btn: arguments.length === 3 ? [<span class="string">"确定"</span>, <span class="string">"取消"</span>] : typeof options === <span class="string">"function"</span> ? [<span class="string">"确定"</span>, <span class="string">"取消"</span>] : [<span class="string">"关闭"</span>]</span><br><span class="line">&#125;, options || &#123;&#125;)</span><br><span class="line">);</span><br><span class="line">&#125;;</span><br><span class="line">/*</span><br><span class="line">===简单信息弹窗(可接收三个参数[可向左容错])===</span><br><span class="line">1. 参数1个 信息内容</span><br><span class="line">2. 参数2个 &#123;a:1~2组合[信息内容~配置参数] | b:1~3组合[信息内容~执行函数]&#125;</span><br><span class="line">3. 参数3个 信息内容~配置参数~执行函数</span><br><span class="line">*/</span><br><span class="line">exports.msg = <span class="keyword">function</span>(content, options, fn)&#123;</span><br><span class="line">Factory(</span><br><span class="line">$.extend(&#123;</span><br><span class="line">title: <span class="literal">false</span>,</span><br><span class="line">content: content,</span><br><span class="line">time: 3,</span><br><span class="line">bottom: <span class="literal">false</span>,</span><br><span class="line">onClose: typeof options === <span class="string">"function"</span> ? options : fn</span><br><span class="line">&#125;, options || &#123;&#125;)</span><br><span class="line">);</span><br><span class="line">&#125;;</span><br><span class="line">/*</span><br><span class="line">===加载外部css与js===</span><br><span class="line">1. xyPop.load(<span class="string">"skin/xyPop.css"</span>);//默认方式</span><br><span class="line">xyPop.load(<span class="string">"skin/xyPop.css, aaa.css"</span>);//使用逗号分隔  (<span class="string">"a, b, c, d......"</span>)</span><br><span class="line">xyPop.load([<span class="string">"skin/xyPop.css"</span>, <span class="string">"aaa.css"</span>]);//使用数组形式 ([<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>, <span class="string">"d"</span>......])</span><br><span class="line">2.加载js方法同上</span><br><span class="line">*/</span><br><span class="line">exports.load = <span class="keyword">function</span>(path)&#123;</span><br><span class="line">//加载多个文件</span><br><span class="line">var file = $.isArray(path) ? path : $.trim(path).replace(/[ ]&#123;2,&#125;/g, <span class="string">" "</span>).split(<span class="string">","</span>);</span><br><span class="line">$.each(file, <span class="keyword">function</span>(i, v)&#123;</span><br><span class="line">var f = file[i].replace(/\s/g, <span class="string">""</span>),</span><br><span class="line">isCss = /\.css$/.<span class="built_in">test</span>(f),</span><br><span class="line">node = document.createElement(isCss ? <span class="string">"link"</span> : <span class="string">"lbw"</span>),</span><br><span class="line">//唯一标识</span><br><span class="line">id = <span class="string">"xyPopTag_"</span> + f.replace(/(\.|\/|\:)/g, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">isCss &amp;&amp; (node.rel = <span class="string">"stylesheet"</span>);</span><br><span class="line">node[isCss ? <span class="string">"href"</span> : <span class="string">"src"</span>] = f;</span><br><span class="line">node.id = id;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$(<span class="string">"#"</span> + id)[0])&#123;</span><br><span class="line">$(<span class="string">"head"</span>)[0].appendChild(node);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">return</span> exports;</span><br><span class="line">&#125;());</span><br><span class="line">//加载css文件</span><br><span class="line">//interface.load(<span class="string">"skin/xyPop.css"</span>);</span><br><span class="line">//提供外部接口</span><br><span class="line">w.xyPop = interface;</span><br><span class="line">&#125;(window, jQuery);</span><br></pre></td></tr></table></figure><h3 id="jquery-1-9-1-min-js"><a href="#jquery-1-9-1-min-js" class="headerlink" title="jquery-1.9.1.min.js"></a>jquery-1.9.1.min.js</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">自己找去</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> touch_alert </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>git工作命令总结</title>
      <link href="/2017/07/10/git-work-to-sum-up/"/>
      <content type="html"><![CDATA[<h2 id="git-work"><a href="#git-work" class="headerlink" title="git_work"></a>git_work</h2><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"用户名"</span></span><br><span class="line">gt config --global user.email <span class="string">"邮箱"</span></span><br><span class="line">git config –global 参数，有了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然你也可以对某个仓库指定的不同的用户名和邮箱。</span><br><span class="line">git init 通过命令 git init 把这个目录变成git可以管理的仓库</span><br><span class="line">git add readme.txt 将readme.txt添加到暂存区</span><br><span class="line">如果此步骤提示warning: LF will be replaced by CRLF <span class="keyword">in</span> readme.txt.</span><br><span class="line">The file will have its original line endings <span class="keyword">in</span> your working directory.</span><br><span class="line">可用git config core.autocrlf <span class="literal">true</span>解决</span><br><span class="line">git status 查看文件状态</span><br><span class="line">git commit -m <span class="string">"提交的注释"</span></span><br><span class="line">git diff readme.txt 查看readme.txt修改了哪些内容</span><br><span class="line">git <span class="built_in">log</span> 查看修改的历史记录 显示信息多</span><br><span class="line">git <span class="built_in">log</span> --pretty=oneline 查看修改的历史记录 显示信息少</span><br><span class="line">git reset --hard HEAD^  撤销到上一个提交的版本</span><br><span class="line">git reset --hard HEAD^^  撤销到上上一个提交的版本</span><br><span class="line">git reset --hard HEAD~100 回退到前100个版本</span><br><span class="line">git reflog 显示撤销的修改的版本号</span><br><span class="line">git reset --hard 版本号  恢复撤销的文件</span><br><span class="line">添加到暂存区前发现文件有误。不采用直接vim修改和版本回退提交可以采用这种方法</span><br><span class="line">git checkout -- readme.txt</span><br><span class="line">在commit之前删除了文件可以用同样的命令恢复删除的文件</span><br><span class="line">git checkout -- readme.txt</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="多密钥"><a href="#多密钥" class="headerlink" title="多密钥"></a>多密钥</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">ls ~/.ssh  查看本地是否创建了公有密钥</span><br><span class="line">//配置git用户名和邮箱:</span><br><span class="line">$ git config user.name <span class="string">"用户名"</span></span><br><span class="line">$ git config user.email <span class="string">"邮箱"</span> </span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"邮箱"</span> </span><br><span class="line">//多个密钥的情况下，可生成ssh key同时指定保存的文件名</span><br><span class="line">$ ssh-keygen -t rsa -f ~/.ssh/文件名 -C <span class="string">"邮箱"</span></span><br><span class="line">多个密钥情况下</span><br><span class="line">touch ~/.ssh/config</span><br><span class="line">在config文件里添加如下内容（User表示你的用户名）</span><br><span class="line">Host *.github.com</span><br><span class="line">    IdentityFile ~/.ssh/文件名</span><br><span class="line">    User 用户名</span><br><span class="line">然后进行测试是否连接成功</span><br><span class="line">ssh -T git@github.com</span><br><span class="line">如果测试报github Permission denied错误，可以用</span><br><span class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(ssh-agent -s)</span>"</span></span><br><span class="line">ssh-add ~/.ssh/id_rsa</span><br><span class="line">两个命令。再执行ssh -T git@github.com</span><br></pre></td></tr></table></figure><h3 id="同步到远程仓库"><a href="#同步到远程仓库" class="headerlink" title="同步到远程仓库"></a>同步到远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:Ellacf/helloworld.git 连接远程只需连接一次</span><br><span class="line">如果出现fatal: remote origin already exists.</span><br><span class="line">可用git remote rm origin   //删除远程路径</span><br><span class="line">git push -u origin master 第一次推送到远程用u参数</span><br><span class="line">git push origin master </span><br><span class="line">git <span class="built_in">clone</span> 地址 远程克隆</span><br></pre></td></tr></table></figure><h3 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">创建分支并切换 git checkout -b dev</span><br><span class="line">查看分支 git branch</span><br><span class="line">编辑下dev文件添加内容add到暂存区然后commit 再切换分支git checkout master</span><br><span class="line">查看cat文件会发现内容没有接着合并分支git merge dev 接着如果dev分支不需要可以删除分支git branch -d dev</span><br><span class="line">合并分支建议用git merge --no-ff - m <span class="string">"merge with no-ff"</span> dev或者 git rebase --no-ff - m <span class="string">"merge with no-ff"</span>避免删除分支后丢失分支信息</span><br><span class="line">查看删除的分支信息git <span class="built_in">log</span> --graph --pretty=oneline --abbrev-commit</span><br><span class="line">查看远程分支 git branch -a</span><br><span class="line">删除远程分支</span><br><span class="line">git branch -r -d origin/dev</span><br><span class="line">git push origin :dev</span><br><span class="line">重命名本地分支 git branch -m dev devlop</span><br></pre></td></tr></table></figure><h3 id="解决冲突"><a href="#解决冲突" class="headerlink" title="解决冲突"></a>解决冲突</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">解决冲突：（演示在创建的分支和主分支上分别做不同修改）</span><br><span class="line">创建分支 git checkout -b dev</span><br><span class="line">并对文件进行增加内容修改add  commit</span><br><span class="line">切换到master分支同样进行上面的操作</span><br><span class="line">接着在master分支上合并dev分支</span><br><span class="line">此时会有冲突</span><br><span class="line">解决方法首先是</span><br><span class="line">git status </span><br><span class="line">cat readme.txt</span><br><span class="line">切换到创建的分支dev上修改成master主分支一样的内容</span><br></pre></td></tr></table></figure><h3 id="bug分支"><a href="#bug分支" class="headerlink" title="bug分支"></a>bug分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">在dev分支上工作一半还没提交</span><br><span class="line">可以先隐藏dev分支 </span><br><span class="line">git stash</span><br><span class="line">git status</span><br><span class="line">git checkout -b issue-404</span><br><span class="line">在issue-404分支上修改bug 然后add commit</span><br><span class="line">切换到主分支master上</span><br><span class="line">git merge --no-ff - m <span class="string">"merge with no-ff"</span> issue-404 合并分支</span><br><span class="line">然后不需要了可以删除分支 git branch -d issue-404</span><br><span class="line">切换到dev分支查看工作现场 </span><br><span class="line">git status </span><br><span class="line">git stash list</span><br><span class="line">git stash drop</span><br></pre></td></tr></table></figure><h3 id="多人协同合作"><a href="#多人协同合作" class="headerlink" title="多人协同合作"></a>多人协同合作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">当克隆远程仓库的时候Git自动把本地的master分支和远程的master分支对应起来了，并且远程库的默认名称是origin</span><br><span class="line">要查看远程库的信息 使用 git remote</span><br><span class="line">要查看远程库的详细信息 使用 git remote –v</span><br><span class="line">git push orgin dev首先把dev分支推送到远程</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/youname/项目名称  克隆远程库</span><br><span class="line">$ git checkout -b dev origin/dev 创建远程origin的dev分支到本地（在主分支master上）</span><br><span class="line">$ git add 文件名</span><br><span class="line">$ git commit -m <span class="string">"注释"</span></span><br><span class="line">$ git push origin dev 把现在的dev分支推送到远程</span><br><span class="line">$ git checkout dev 切换到dev分支</span><br><span class="line">$ git add 文件名</span><br><span class="line">$ git commit -m <span class="string">"注释"</span></span><br><span class="line">$ git push origin dev (不同人推送同个文件修改同个文件同个地方报错)</span><br><span class="line">解决：</span><br><span class="line">第一种解决错误提示：error:failed to push som refs to.......</span><br><span class="line">git pull origin master</span><br><span class="line">第二种方式解决</span><br><span class="line">$ git pull 把最新的提交从origin/dev抓下来,此步骤操作失败</span><br><span class="line">没有指定本地dev分支与远程origin/dev分支的链接：</span><br><span class="line">a、设置dev和origin/dev的链接 $ git branch --<span class="built_in">set</span>-upstream dev origin/dev</span><br><span class="line">b、$ git pull 等价于git fetch和git merge origin/master（中的master根据远程的分支名定）</span><br><span class="line">c、$ cat 文件名</span><br><span class="line">d、$ git add 文件名</span><br><span class="line">e、$ git commit -m <span class="string">"注释"</span></span><br><span class="line">f、$ git push origin dev</span><br></pre></td></tr></table></figure><h3 id="挖坑"><a href="#挖坑" class="headerlink" title="挖坑"></a>挖坑</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">创建了本地分支b1并pull到远程分支 origin/b1；</span><br><span class="line">    其他人在本地使用fetch或pull创建了本地的b1分支；</span><br><span class="line">    我删除了 origin/b1 远程分支；</span><br><span class="line">    其他人再次执行fetch或者pull并不会删除这个他们本地的 b1 分支，运行 git branch -a 也不能看出这个branch被删除了，如何处理？</span><br><span class="line">使用下面的代码查看b1的状态：</span><br><span class="line">$ git remote show origin</span><br><span class="line">* remote origin</span><br><span class="line">  Fetch URL: git@github.com:xxx/xxx.git</span><br><span class="line">  Push  URL: git@github.com:xxx/xxx.git</span><br><span class="line">  HEAD branch: master</span><br><span class="line">  Remote branches:</span><br><span class="line">    master                 tracked</span><br><span class="line">    refs/remotes/origin/b1 stale (use <span class="string">'git remote prune'</span> to remove)</span><br><span class="line">  Local branch configured <span class="keyword">for</span> <span class="string">'git pull'</span>:</span><br><span class="line">    master merges with remote master</span><br><span class="line">  Local ref configured <span class="keyword">for</span> <span class="string">'git push'</span>:</span><br><span class="line">    master pushes to master (up to date)</span><br><span class="line">这时候能够看到b1是stale的，使用 git remote prune origin 可以将其从本地版本库中去除。</span><br><span class="line">更简单的方法是使用这个命令，它在fetch之后删除掉没有与远程分支对应的本地分支：</span><br><span class="line">git fetch -p</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>php表单提交弹窗代替alert()</title>
      <link href="/2017/06/25/alert-replace-page/"/>
      <content type="html"><![CDATA[<h2 id="replace-alert"><a href="#replace-alert" class="headerlink" title="replace_alert"></a>replace_alert</h2><h3 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">注:为了提交到github js的脚本标签用lbw替换了 <span class="built_in">type</span>内容自己填。</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;投票&lt;/title&gt;</span><br><span class="line">    &lt;lbw src=<span class="string">"js/jquery-1.8.3.min.js"</span> <span class="built_in">type</span>=<span class="string">""</span>&gt;&lt;/lbw&gt;</span><br><span class="line">    &lt;lbw src=<span class="string">"js/msgbox.js"</span> <span class="built_in">type</span>=<span class="string">""</span>&gt;&lt;/lbw&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;lbw&gt;</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">testAlert</span></span>()&#123;</span><br><span class="line">        $.MsgBox.Alert(<span class="string">"消息"</span>, <span class="string">"哈哈，添加成功！"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/lbw&gt;</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">'act'</span>] == <span class="string">'save'</span>)&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"&lt;lbw&gt;testAlert()&lt;/lbw&gt;"</span>;</span><br><span class="line">    <span class="built_in">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">"index.php"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    &lt;input name=<span class="string">"act"</span> <span class="built_in">type</span>=<span class="string">"hidden"</span> id=<span class="string">"act"</span> value=<span class="string">"save"</span>&gt;</span><br><span class="line">    &lt;input <span class="built_in">type</span>=<span class="string">"submit"</span> name=<span class="string">"btn_tp"</span> id=<span class="string">"add"</span> value=<span class="string">"立即投票"</span> style=<span class="string">"cursor:pointer;"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="jquery1-8-3"><a href="#jquery1-8-3" class="headerlink" title="jquery1.8.3"></a>jquery1.8.3</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">自己找去~~~</span><br></pre></td></tr></table></figure><h3 id="msgbox-js"><a href="#msgbox-js" class="headerlink" title="msgbox.js"></a>msgbox.js</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="title">function</span></span> () &#123;  </span><br><span class="line">    $.MsgBox = &#123;  </span><br><span class="line">        Alert: <span class="keyword">function</span> (title, msg) &#123;  </span><br><span class="line">            GenerateHtml(<span class="string">"alert"</span>, title, msg);  </span><br><span class="line">            btnOk();  //alert只是弹出消息，因此没必要用到回调函数callback  </span><br><span class="line">            btnNo();  </span><br><span class="line">        &#125;/*, */</span><br><span class="line">        /*Confirm: <span class="keyword">function</span> (title, msg, callback) &#123;</span><br><span class="line">            GenerateHtml(<span class="string">"confirm"</span>, title, msg);  </span><br><span class="line">            btnOk(callback);  </span><br><span class="line">            btnNo();  </span><br><span class="line">        &#125; */</span><br><span class="line">    &#125;  </span><br><span class="line">    //生成Html  </span><br><span class="line">    var GenerateHtml = <span class="keyword">function</span> (<span class="built_in">type</span>, title, msg) &#123;  </span><br><span class="line">        var _html = <span class="string">""</span>;  </span><br><span class="line">        _html += <span class="string">'&lt;div id="mb_box"&gt;&lt;/div&gt;&lt;div id="mb_con"&gt;&lt;span id="mb_tit"&gt;'</span> + title + <span class="string">'&lt;/span&gt;'</span>;  </span><br><span class="line">        _html += <span class="string">'&lt;a id="mb_ico"&gt;x&lt;/a&gt;&lt;div id="mb_msg"&gt;'</span> + msg + <span class="string">'&lt;/div&gt;&lt;div id="mb_btnbox"&gt;'</span>;  </span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">type</span> == <span class="string">"alert"</span>) &#123;  </span><br><span class="line">            _html += <span class="string">'&lt;input id="mb_btn_ok" type="button" value="确定" /&gt;'</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">        /*<span class="keyword">if</span> (<span class="built_in">type</span> == <span class="string">"confirm"</span>) &#123;</span><br><span class="line">            _html += <span class="string">'&lt;input id="mb_btn_ok" type="button" value="确定" /&gt;'</span>;  </span><br><span class="line">            _html += <span class="string">'&lt;input id="mb_btn_no" type="button" value="取消" /&gt;'</span>;  </span><br><span class="line">        &#125; */</span><br><span class="line">        _html += <span class="string">'&lt;/div&gt;&lt;/div&gt;'</span>;  </span><br><span class="line">        //必须先将_html添加到body，再设置Css样式  </span><br><span class="line">        $(<span class="string">"body"</span>).append(_html);   </span><br><span class="line">        //生成Css  </span><br><span class="line">         GenerateCss();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    //生成Css  </span><br><span class="line">    var GenerateCss = <span class="function"><span class="title">function</span></span> () &#123;  </span><br><span class="line">        $(<span class="string">"#mb_box"</span>).css(&#123; width: <span class="string">'100%'</span>, height: <span class="string">'100%'</span>, zIndex: <span class="string">'99999'</span>, position: <span class="string">'fixed'</span>,  </span><br><span class="line">            filter: <span class="string">'Alpha(opacity=60)'</span>, backgroundColor: <span class="string">'black'</span>, top: <span class="string">'0'</span>, left: <span class="string">'0'</span>, opacity: <span class="string">'0.6'</span>  </span><br><span class="line">        &#125;);  </span><br><span class="line">        $(<span class="string">"#mb_con"</span>).css(&#123; zIndex: <span class="string">'999999'</span>, width: <span class="string">'400px'</span>, position: <span class="string">'fixed'</span>,  </span><br><span class="line">            backgroundColor: <span class="string">'White'</span>, borderRadius: <span class="string">'15px'</span>  </span><br><span class="line">        &#125;);  </span><br><span class="line">        $(<span class="string">"#mb_tit"</span>).css(&#123; display: <span class="string">'block'</span>, fontSize: <span class="string">'14px'</span>, color: <span class="string">'#444'</span>, padding: <span class="string">'10px 15px'</span>,  </span><br><span class="line">            backgroundColor: <span class="string">'#DDD'</span>, borderRadius: <span class="string">'15px 15px 0 0'</span>,  </span><br><span class="line">            borderBottom: <span class="string">'3px solid #009BFE'</span>, fontWeight: <span class="string">'bold'</span>  </span><br><span class="line">        &#125;);  </span><br><span class="line">        $(<span class="string">"#mb_msg"</span>).css(&#123; padding: <span class="string">'20px'</span>, lineHeight: <span class="string">'20px'</span>,  </span><br><span class="line">            borderBottom: <span class="string">'1px dashed #DDD'</span>, fontSize: <span class="string">'13px'</span>  </span><br><span class="line">        &#125;);  </span><br><span class="line">        $(<span class="string">"#mb_ico"</span>).css(&#123; display: <span class="string">'block'</span>, position: <span class="string">'absolute'</span>, right: <span class="string">'10px'</span>, top: <span class="string">'9px'</span>,  </span><br><span class="line">            border: <span class="string">'1px solid Gray'</span>, width: <span class="string">'18px'</span>, height: <span class="string">'18px'</span>, textAlign: <span class="string">'center'</span>,  </span><br><span class="line">            lineHeight: <span class="string">'16px'</span>, cursor: <span class="string">'pointer'</span>, borderRadius: <span class="string">'12px'</span>, fontFamily: <span class="string">'微软雅黑'</span>  </span><br><span class="line">        &#125;);  </span><br><span class="line">        $(<span class="string">"#mb_btnbox"</span>).css(&#123; margin: <span class="string">'15px 0 10px 0'</span>, textAlign: <span class="string">'center'</span> &#125;);  </span><br><span class="line">        $(<span class="string">"#mb_btn_ok,#mb_btn_no"</span>).css(&#123; width: <span class="string">'85px'</span>, height: <span class="string">'30px'</span>, color: <span class="string">'white'</span>, border: <span class="string">'none'</span> &#125;);  </span><br><span class="line">        $(<span class="string">"#mb_btn_ok"</span>).css(&#123; backgroundColor: <span class="string">'#168bbb'</span> &#125;);  </span><br><span class="line">        $(<span class="string">"#mb_btn_no"</span>).css(&#123; backgroundColor: <span class="string">'gray'</span>, marginLeft: <span class="string">'20px'</span> &#125;);  </span><br><span class="line">        //右上角关闭按钮hover样式  </span><br><span class="line">        $(<span class="string">"#mb_ico"</span>).hover(<span class="function"><span class="title">function</span></span> () &#123;  </span><br><span class="line">            $(this).css(&#123; backgroundColor: <span class="string">'Red'</span>, color: <span class="string">'White'</span> &#125;);  </span><br><span class="line">        &#125;, <span class="function"><span class="title">function</span></span> () &#123;  </span><br><span class="line">            $(this).css(&#123; backgroundColor: <span class="string">'#DDD'</span>, color: <span class="string">'black'</span> &#125;);  </span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        var _widht = document.documentElement.clientWidth;  //屏幕宽</span><br><span class="line">        var _height = document.documentElement.clientHeight; //屏幕高  </span><br><span class="line">        var boxWidth = $(<span class="string">"#mb_con"</span>).width();  </span><br><span class="line">        var boxHeight = $(<span class="string">"#mb_con"</span>).height();  </span><br><span class="line">        //让提示框居中  </span><br><span class="line">        $(<span class="string">"#mb_con"</span>).css(&#123; top: (_height - boxHeight) / 2 + <span class="string">"px"</span>, left: (_widht - boxWidth) / 2 + <span class="string">"px"</span> &#125;);</span><br><span class="line">    &#125;  </span><br><span class="line">    //确定按钮事件  </span><br><span class="line">    var btnOk = <span class="keyword">function</span> (callback) &#123;  </span><br><span class="line">        $(<span class="string">"#mb_btn_ok"</span>).click(<span class="function"><span class="title">function</span></span> () &#123;  </span><br><span class="line">            $(<span class="string">"#mb_box,#mb_con"</span>).remove();  </span><br><span class="line">            <span class="keyword">if</span> (typeof (callback) == <span class="string">'function'</span>) &#123;  </span><br><span class="line">                callback();  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;);  </span><br><span class="line">    &#125;  </span><br><span class="line">    //取消按钮事件  </span><br><span class="line">    var btnNo = <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        $(<span class="string">"#mb_btn_no,#mb_ico"</span>).click(<span class="function"><span class="title">function</span></span> () &#123;  </span><br><span class="line">            $(<span class="string">"#mb_box,#mb_con"</span>).remove();  </span><br><span class="line">        &#125;);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> jquery </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>php解决网站大流量与高并发</title>
      <link href="/2017/03/09/php-gbf/"/>
      <content type="html"><![CDATA[<h2 id="php解决网站大流量与高并发"><a href="#php解决网站大流量与高并发" class="headerlink" title="php解决网站大流量与高并发"></a>php解决网站大流量与高并发</h2><h3 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">确认服务器硬件是否足够支持当前的流量。</span><br><span class="line">普通的P4服务器一般最多能支持每天10万独立IP，如果访问量比这个还要大， 那么必须首先配置一台更高性能的专用服务器才能解决问题。</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">优化数据库访问。 </span><br><span class="line">前台实现完全的静态化当然最好，可以完全不用访问数据库，不过对于频繁更新的网站， 静态化往往不能满足某些功能。</span><br></pre></td></tr></table></figure><h3 id="方案三"><a href="#方案三" class="headerlink" title="方案三"></a>方案三</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">缓存技术。 </span><br><span class="line">将动态数据存储到缓存文件中，动态网页直接调用这些文件，而不必再访问数据库。无法避免对数据库的访问，那么可以尝试优化数据库的查询SQL.避免使用 Select * from这样的语句，每次查询只返回自己需要的结果，避免短时间内的大量SQL查询。</span><br></pre></td></tr></table></figure><h3 id="方案四"><a href="#方案四" class="headerlink" title="方案四"></a>方案四</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">禁止外部的盗链。</span><br><span class="line">Apache可以通过配置来禁止盗链，或者使用非技术手段来解决，比如在图片上增加水印。</span><br></pre></td></tr></table></figure><h3 id="方案五"><a href="#方案五" class="headerlink" title="方案五"></a>方案五</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">控制大文件的下载。</span><br><span class="line">大文件的下载会占用很大的流量，尽量不要提供超过2M的大文件下载，如果需要提供，建议将大文件放在另外一台服务器上。</span><br></pre></td></tr></table></figure><h3 id="方案六"><a href="#方案六" class="headerlink" title="方案六"></a>方案六</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">使用不同主机分流主要流量。</span><br><span class="line">将文件放在不同的主机上，提供不同的镜像供用户下载。比如RSS文件占用流量大，那么使用FeedBurner或者FeedSky等服务将RSS输出放在其他主机上。</span><br></pre></td></tr></table></figure><h3 id="方案七"><a href="#方案七" class="headerlink" title="方案七"></a>方案七</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">使用流量分析统计软件。</span><br><span class="line">在网站上安装一个流量分析统计软件，可以即时知道哪些地方耗费了大量流量，哪些页面需要再进行优化。</span><br></pre></td></tr></table></figure><h3 id="高并发和高负载"><a href="#高并发和高负载" class="headerlink" title="高并发和高负载"></a>高并发和高负载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">约束条件：硬件、部署、操作系统、Web 服务器、PHP、MySQL、测试</span><br><span class="line">部署：服务器分离、数据库集群和库表散列、镜像、负载均衡</span><br><span class="line">负载均衡分类：  1)、DNS轮循  2）代理服务器负载均衡   3）地址转换网关负载均衡  4）NAT负载均衡   5）反向代理负载均衡   6）混合型负载均衡</span><br></pre></td></tr></table></figure><h3 id="部署方案一"><a href="#部署方案一" class="headerlink" title="部署方案一"></a>部署方案一</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">适用范围：静态内容为主体的网站和应用系统；对系统安全要求较高的网站和应用系统。</span><br><span class="line">Main Server：主服务器</span><br><span class="line">承载程序的主体运行压力，处理网站或应用系统中的动态请求；</span><br><span class="line">将静态页面推送至多个发布服务器；</span><br><span class="line">将附件文件推送至文件服务器；</span><br><span class="line">安全要求较高，以静态为主的网站，可将服务器置于内网屏蔽外网的访问。</span><br><span class="line">DB Server：数据库服务器</span><br><span class="line">承载数据库读写压力；</span><br><span class="line">只与主服务器进行数据量交换，屏蔽外网访问。</span><br><span class="line">File/Video Server：文件/视频服务器</span><br><span class="line">承载系统中占用系统资源和带宽资源较大的数据流；</span><br><span class="line">作为大附件的存储和读写仓库；</span><br><span class="line">作为视频服务器将具备视频自动处理能力。</span><br><span class="line">发布服务器组：</span><br><span class="line">只负责静态页面的发布，承载绝大多数的Web请求；</span><br><span class="line">通过Nginx进行负载均衡部署。</span><br></pre></td></tr></table></figure><h3 id="部署方案二"><a href="#部署方案二" class="headerlink" title="部署方案二"></a>部署方案二</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">适用范围：以动态交互内容为主体的网站或应用系统；负载压力较大，且预算比较充足的网站或应用系统；</span><br><span class="line">Web服务器组：</span><br><span class="line">Web服务无主从关系，属平行冗余设计；</span><br><span class="line">通过前端负载均衡设备或Nginx反向代理实现负载均衡；</span><br><span class="line">划分专用文件服务器/视频服务器有效分离轻/重总线；</span><br><span class="line">每台Web服务器可通过DEC可实现连接所有数据库，同时划分主从。</span><br><span class="line">数据库服务器组：</span><br><span class="line">相对均衡的承载数据库读写压力；</span><br><span class="line">通过数据库物理文件的映射实现多数据库的数据同步。</span><br><span class="line">共享磁盘/磁盘阵列</span><br><span class="line">将用于数据物理文件的统一读写</span><br><span class="line">用于大型附件的存储仓库</span><br><span class="line">通过自身物理磁盘的均衡和冗余，确保整体系统的IO效率和数据安全；</span><br></pre></td></tr></table></figure><h3 id="方案特性"><a href="#方案特性" class="headerlink" title="方案特性"></a>方案特性</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">通过前端负载均衡，合理分配Web压力；</span><br><span class="line">通过文件/视频服务器与常规Web服务器的分离，合理分配轻重数据流；</span><br><span class="line">通过数据库服务器组，合理分配数据库IO压力；</span><br><span class="line">每台Web服务器通常只连接一台数据库服务器，通过DEC的心跳检测，可在极短时间内自动切换至冗余数据库服务器；</span><br><span class="line">磁盘阵列的引入，大幅提升系统IO效率的同时，极大增强了数据安全性。</span><br></pre></td></tr></table></figure><h3 id="Web服务器"><a href="#Web服务器" class="headerlink" title="Web服务器"></a>Web服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在高并发连接的情况下，Nginx(一款高性能的HTTP和反向代理服务器)是Apache服务器不错的替代品.</span><br></pre></td></tr></table></figure><h3 id="Nginx的优势"><a href="#Nginx的优势" class="headerlink" title="Nginx的优势"></a>Nginx的优势</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">高并发连接：官方测试能够支撑5万并发连接，在实际生产环境中跑到2～3万并发连接数。</span><br><span class="line">内存消耗少：在3万并发连接下，开启的10个Nginx 进程才消耗150M内存（15M*10=150M）。</span><br><span class="line">内置的健康检查功能：如果 Nginx Proxy 后端的某台Web服务器死机了，不会影响前端访问。</span><br></pre></td></tr></table></figure><h3 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">除了程序开发时需要注意建立索引、提高查询效率等软件开发技巧之外，从硬件设施的角度影响MySQL执行效率最主要来自于磁盘搜索、磁盘IO水平、CPU周期、内存带宽。</span><br><span class="line">根据服务器上的硬件和软件条件进行MySQl优化。在MySQL配置文件值得关注的参数：</span><br><span class="line">改变索引缓冲区长度(key_buffer)</span><br><span class="line">改变表长(read_buffer_size)</span><br><span class="line">设定打开表的数目的最大值(table_cache)</span><br><span class="line">对缓长查询设定一个时间限制(long_query_time)</span><br></pre></td></tr></table></figure><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">加载尽可能少的模块；</span><br><span class="line">如果是在windows平台下，尽可能使用IIS或者Nginx来替代我们平常用的Apache；</span><br><span class="line">安装加速器</span><br><span class="line">eAccelerator是一个自由开放源码php加速器，优化和动态内容缓存，提高了性能php脚本的缓存性能;</span><br><span class="line">Alternative PHP Cache（APC）是 PHP 的一个免费公开的优化代码缓存。它用来提供免费，公开并且强健的架构来缓存和优化PHP的中间代码;</span><br><span class="line">memcache：高性能的，分布式的内存对象缓存系统，用于在动态应用中减少数据库负载，提升访问速度。主要机制是通过在内存里维护一个统一的巨大的<span class="built_in">hash</span>表，Memcache能够用来存储各种格式的数据，包括图像、视频、文件以及数据库检索的结果等</span><br><span class="line">Xcache：国人开发的缓存器；</span><br><span class="line">安装Squid 反向代理服务器，能够大幅度提高服务器效率。</span><br></pre></td></tr></table></figure><h3 id="压力测试"><a href="#压力测试" class="headerlink" title="压力测试"></a>压力测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">通常要进行压力测试的资源包括内部内存、CPU 可用性、磁盘空间和网络带宽等。一般用并发来做压力测试。</span><br><span class="line">压力测试工具：webbench，ApacheBench</span><br></pre></td></tr></table></figure><h3 id="漏洞测试"><a href="#漏洞测试" class="headerlink" title="漏洞测试"></a>漏洞测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">系统中sql注入漏洞，xss跨站脚本攻击等</span><br><span class="line">安全方面还包括系统软件，如操作系统漏洞，mysql、apache等的漏洞，一般可以通过升级来解决。</span><br><span class="line">漏洞测试工具：Acunetix Web Vulnerability Scanner</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>centos6.x安装redis</title>
      <link href="/2017/02/25/centos6-x-redis-az/"/>
      <content type="html"><![CDATA[<h2 id="centos-redis"><a href="#centos-redis" class="headerlink" title="centos-redis"></a>centos-redis</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">mkdir redis</span><br><span class="line"><span class="built_in">cd</span> redis</span><br><span class="line">wget https://github.com/antirez/redis/archive/2.8.19.tar.gz -O redis-2.8.19.tar.gz (下载安装并重新命名)</span><br><span class="line">tar xzf redis-2.8.19.tar.gz</span><br><span class="line"><span class="built_in">cd</span> redis-2.8.19</span><br><span class="line">make</span><br><span class="line"><span class="built_in">cd</span> src</span><br><span class="line">redis-server (就会看到启动结果 图略)</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="将redis以服务方式运行"><a href="#将redis以服务方式运行" class="headerlink" title="将redis以服务方式运行"></a>将redis以服务方式运行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/<span class="built_in">local</span>/redis/redis-2.8.19/utils/redis_init_script /etc/rc.d/init.d/redis （复制redis_init_script到init.d目录下并重命名为redis)</span><br><span class="line">然后vim /etc/rc.d/init.d/redis</span><br><span class="line">以下是我的配置</span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># chkconfig: 2345 80 90                                      （修改添加内容）</span></span><br><span class="line"><span class="comment"># description:  Redis is a persistent key-value database     （修改添加内容）</span></span><br><span class="line"><span class="comment"># Simple Redis init.d script conceived to work on Linux systems</span></span><br><span class="line"><span class="comment"># as it does use of the /proc filesystem.</span></span><br><span class="line"></span><br><span class="line">REDISPORT=6379</span><br><span class="line">EXEC=/usr/<span class="built_in">local</span>/redis/redis-2.8.19/src/redis-server  （修改添加内容）</span><br><span class="line">CLIEXEC=/usr/<span class="built_in">local</span>/redis/redis-2.8.19/src/redis-cli  （修改添加内容）</span><br><span class="line"></span><br><span class="line">PIDFILE=/var/run/redis_6379.pid   （修改添加内容）</span><br><span class="line">CONF=<span class="string">"/etc/redis/6379.conf"</span>      （修改添加内容）</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">    start)</span><br><span class="line">        <span class="keyword">if</span> [ -f <span class="variable">$PIDFILE</span> ]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"<span class="variable">$PIDFILE</span> exists, process is already running or crashed"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"Starting Redis server..."</span></span><br><span class="line">                <span class="variable">$EXEC</span> <span class="variable">$CONF</span> &amp; （修改添加内容）</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        <span class="keyword">if</span> [ ! -f <span class="variable">$PIDFILE</span> ]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"<span class="variable">$PIDFILE</span> does not exist, process is not running"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                PID=$(cat <span class="variable">$PIDFILE</span>)</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"Stopping ..."</span></span><br><span class="line">                <span class="variable">$CLIEXEC</span> -p <span class="variable">$REDISPORT</span> shutdown</span><br><span class="line">                <span class="keyword">while</span> [ -x /proc/<span class="variable">$&#123;PID&#125;</span> ]</span><br><span class="line">                <span class="keyword">do</span></span><br><span class="line">                    <span class="built_in">echo</span> <span class="string">"Waiting for Redis to shutdown ..."</span></span><br><span class="line">                    sleep 1</span><br><span class="line">                <span class="keyword">done</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"Redis stopped"</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Please use start or stop as first argument"</span></span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">然后<span class="built_in">cd</span> /etc</span><br><span class="line">mkdir redis</span><br><span class="line">cp /usr/<span class="built_in">local</span>/redis/redis-2.8.19/redis.conf /etc/redis/6379.conf （复制redis配置文件到/etc/redis/下并重新命名，此命名根据上面配置CONF=<span class="string">"/etc/redis/6379.conf"</span>定）</span><br><span class="line">然后vim /etc/redis/6379.conf将pidfile /var/run/redis.pid 改为 pidfile /var/run/redis_6379.pid这里是根据上面配置PIDFILE=/var/run/redis_6379.pid定</span><br><span class="line">接着注册服务</span><br><span class="line">chkconfig --add redis</span><br><span class="line">然后启动redis服务</span><br><span class="line">service redis start</span><br><span class="line">将redis-server和redis-cli命令加入环境变量</span><br><span class="line">vim /etc/proflie</span><br><span class="line">在最后一行加入</span><br><span class="line"><span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/redis/redis-2.8.19/src:<span class="variable">$PATH</span></span><br><span class="line">使其立即生效</span><br><span class="line"><span class="built_in">source</span> /etc/proflie</span><br></pre></td></tr></table></figure><h3 id="php-redis扩展安装"><a href="#php-redis扩展安装" class="headerlink" title="php redis扩展安装"></a>php redis扩展安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以访问https://blog.phplbw.site/2017/01/26/php-install-maintain/<span class="comment">#more即可有两种方式</span></span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$redis</span> = new Redis();</span><br><span class="line"><span class="variable">$redis</span>-&gt;connect(<span class="string">'127.0.0.1'</span>,6379);</span><br><span class="line"><span class="variable">$redis</span>-&gt;<span class="built_in">set</span>(<span class="string">'test'</span>,<span class="string">'hello redis'</span>);</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$redis</span>-&gt;get(<span class="string">'test'</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mysql数据库优化</title>
      <link href="/2017/02/21/mysql-sjkyh-zj/"/>
      <content type="html"><![CDATA[<h2 id="mysql-sjkyh-zj"><a href="#mysql-sjkyh-zj" class="headerlink" title="mysql_sjkyh_zj"></a>mysql_sjkyh_zj</h2><h3 id="方案一-缓存"><a href="#方案一-缓存" class="headerlink" title="方案一:缓存"></a>方案一:缓存</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">通过redis或memcache,添加缓存服务器.</span><br><span class="line">原理:将经常查询的内容自动添加到缓存,访问量低的通过正常查询获得,可以让绝大多数的内容从内存中自动访问.</span><br><span class="line">redis和memcache的区别:</span><br><span class="line">a、Redis不仅仅支持简单的k/v类型的数据，同时还提供list，<span class="built_in">set</span>，<span class="built_in">hash</span>等数据结构的存储。</span><br><span class="line">b、Redis支持数据的备份，即master-slave模式的数据备份。</span><br><span class="line">c、Redis支持数据的持久化，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用。</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="方案二-添加索引"><a href="#方案二-添加索引" class="headerlink" title="方案二:添加索引"></a>方案二:添加索引</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">通过对常用字段添加索引的办法可以极大的提高查询的效率.</span><br><span class="line">注意事项:</span><br><span class="line">首先应考虑在 <span class="built_in">where</span> 及 order by 涉及的列上建立索引。</span><br><span class="line">可以在 num 上设置默认值 0,确保表中 num 列没有 null 值。</span><br><span class="line">不要写一些没有意义的查询.</span><br><span class="line">用 exists 代替 <span class="keyword">in</span> 是一个好的选择.如:select num from a <span class="built_in">where</span> num <span class="keyword">in</span>(select num from b);可以用select num from a <span class="built_in">where</span> exists(select 1 from b <span class="built_in">where</span> num=a.num);来代替.</span><br><span class="line">索引并不是越多越好，索引固然可以提高相应的 select 的效率，但同时也降低了 insert 及 update 的效率，因为 insert 或 update 时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。一个表的索引数最好不要超过 6 个，若太多则应考虑一些不常使用到的列上建的索引是否有必要。</span><br><span class="line">尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并 会增加存储开销。这是因为引擎在处理查询和连接时会逐个比较字符串中每一个字符，而对于数字型而言 只需要比较一次就够了。</span><br><span class="line">尽可能的使用 varchar/nvarchar代替 char/nchar, 因为首先变长字段存储空间小， 可以节省存储空间， 其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些。</span><br><span class="line">不要使用 select from t ,用具体的字段列表代替“”,不要返回用不到的任何字段。</span><br><span class="line">避免全表扫描:</span><br><span class="line">避免在 <span class="built_in">where</span> 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描。</span><br><span class="line">select id from t <span class="built_in">where</span> name like <span class="string">'%c%'</span>;也将导致全表扫描。</span><br><span class="line">如果在 <span class="built_in">where</span> 子句中使用参数，也会导致全表扫描.如:select id from t <span class="built_in">where</span> num=@num ;可以改为强制查询使用索引:select id from t with(index(索引名)) <span class="built_in">where</span> num=@num ;</span><br><span class="line">在 <span class="built_in">where</span> 子句中对字段进行表达式操作， 这将导致引擎放弃使用索引而进行全表扫描。如:select id from t <span class="built_in">where</span> num/2=100;</span><br><span class="line">在 <span class="built_in">where</span> 子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。如：select id from t <span class="built_in">where</span> substring(name,1,3)=<span class="string">'abc'</span>;<span class="comment">#name 以 abc 开头的 id</span></span><br></pre></td></tr></table></figure><h3 id="方案三-水平分库-分表"><a href="#方案三-水平分库-分表" class="headerlink" title="方案三:水平分库/分表"></a>方案三:水平分库/分表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">原理:一个1000多万条记录的用户表user,查询起来非常之慢，分表的做法是将其散列到100个表中，分别从user_0到user_99，然后根据userId分发记录到这些表中.</span><br></pre></td></tr></table></figure><h3 id="方案四-Sphinx工具"><a href="#方案四-Sphinx工具" class="headerlink" title="方案四:Sphinx工具"></a>方案四:Sphinx工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">原理:Sphinx工具是一个基于SQL的索引检索引擎.原理是将SQL中的数据建立索引,php通过API的方式从Sphinx中获得检索的值.php不直接通过mysql取值.</span><br></pre></td></tr></table></figure><h3 id="方案五-读写分离"><a href="#方案五-读写分离" class="headerlink" title="方案五:读写分离"></a>方案五:读写分离</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">原理:通过物理的方式来提升mysql的性能.</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>https部署</title>
      <link href="/2017/02/19/https-deploy/"/>
      <content type="html"><![CDATA[<h2 id="https-deploy"><a href="#https-deploy" class="headerlink" title="https_deploy"></a>https_deploy</h2><h3 id="获取证书"><a href="#获取证书" class="headerlink" title="获取证书"></a>获取证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">我域名原先在阿里云解析后转到https://www.dnspod.cn/console/dns/解析，首先要把阿里云那边的dns解析改为f1g1ns1.dnspod.net和f1g1ns2.dnspod.net，然后再解析域名。</span><br><span class="line">解析完后在https://www.dnspod.cn/console/user/security创建API Token得到YOUR_TOKEN_ID和YOUR_API_TOKEN</span><br><span class="line">wget https://github.com/xdtianyu/scripts/raw/master/le-dns/le-dnspod.sh</span><br><span class="line">wget https://github.com/xdtianyu/scripts/raw/master/le-dns/dnspod.conf</span><br><span class="line">chmod +x le-dnspod.sh</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="配置dnspod-conf"><a href="#配置dnspod-conf" class="headerlink" title="配置dnspod.conf"></a>配置dnspod.conf</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TOKEN=<span class="string">"YOUR_TOKEN_ID,YOUR_API_TOKEN"</span> (创建API Token的时候获取)</span><br><span class="line">RECORD_LINE=<span class="string">"默认"</span>（不需要改）</span><br><span class="line">DOMAIN=<span class="string">"example.com"</span>（改为你的域名）</span><br><span class="line">CERT_DOMAINS=<span class="string">"example.com www.example.com im.example.com"</span>（你的域名和多个二级域名用英文空格隔开）</span><br><span class="line"><span class="comment">#ECC=TRUE</span></span><br></pre></td></tr></table></figure><h3 id="运行脚本"><a href="#运行脚本" class="headerlink" title="运行脚本"></a>运行脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./le-dnspod.sh dnspod.conf 最后生成的文件在当前目录的 certs 目录下</span><br></pre></td></tr></table></figure><h3 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">以下是我的nginx配置</span><br><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        listen 443 ssl;</span><br><span class="line">        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;</span><br><span class="line">        ssl_certificate /zhenshu/certs/phplbw.site/fullchain.pem;(这里的地址是服务器上对应编译后生成的目录的路径)</span><br><span class="line">        ssl_certificate_key /zhenshu/certs/phplbw.site/privkey.pem;(这里的地址是服务器上对应编译后生成的目录的路径)</span><br><span class="line">        <span class="comment">#listen [::]:80;</span></span><br><span class="line">        server_name xxx.phplbw.site;</span><br><span class="line">        index index.html index.htm index.php default.html default.htm default.php;</span><br><span class="line">        root  /home/wwwroot/xxx.phplbw.site;</span><br><span class="line">        include none.conf;</span><br><span class="line">        <span class="comment">#error_page   404   /404.html;</span></span><br><span class="line">        include <span class="built_in">enable</span>-php.conf;</span><br><span class="line">        <span class="comment">#下面一行为开启HSTS，强制客户端（如浏览器）使用HTTPS与服务器创建连接，如子域名不需要HTTPS,请把 includeSubDomains 删掉。</span></span><br><span class="line">        add_header Strict-Transport-Security <span class="string">"max-age=63072000; includeSubDomains; preload"</span>;</span><br><span class="line">        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class="line">        &#123;</span><br><span class="line">            expires      30d;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~ .*\.(js|css)?$</span><br><span class="line">        &#123;</span><br><span class="line">            expires      12h;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~ /\.</span><br><span class="line">        &#123;</span><br><span class="line">            deny all;</span><br><span class="line">        &#125;</span><br><span class="line">        access_log off;</span><br><span class="line">    &#125;</span><br><span class="line"> <span class="comment">#301跳转，跳转到 HTTPS 的域名。</span></span><br><span class="line">server &#123;</span><br><span class="line">    server_name  xxx.phplbw.site;</span><br><span class="line">    listen 80;</span><br><span class="line">        location / &#123;</span><br><span class="line">               <span class="built_in">return</span> 301 https://xxx.phplbw.site<span class="variable">$request_uri</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">附;301重定向可以在server_name  xxx.phplbw.site;下面将</span><br><span class="line">listen 80;</span><br><span class="line">        location / &#123;</span><br><span class="line">               <span class="built_in">return</span> 301 https://xxx.phplbw.site<span class="variable">$request_uri</span>;</span><br><span class="line">    &#125;</span><br><span class="line">替换为</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$host</span> != <span class="string">'xxx.phplbw.site'</span> ) &#123;</span><br><span class="line">   rewrite ^/(.*)$ http://xxx.phplbw.site/<span class="variable">$1</span> permanent;</span><br><span class="line">&#125;</span><br><span class="line">不过上面的方式比较正规一点~~~</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> https </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>thinkphp execll导入</title>
      <link href="/2017/02/03/thinkphp-php-execll-dr/"/>
      <content type="html"><![CDATA[<p>注意:在PHP.ini里面把;extension=php_zip.dll前面的分号去掉。</p><h2 id="thinkphp-execl-dr"><a href="#thinkphp-execl-dr" class="headerlink" title="thinkphp execl_dr"></a>thinkphp execl_dr</h2><h3 id="前台页面"><a href="#前台页面" class="headerlink" title="前台页面"></a>前台页面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">"post"</span> action=<span class="string">"Excel/add"</span> enctype=<span class="string">"multipart/form-data"</span>&gt;  </span><br><span class="line">         &lt;h3&gt;导入Excel表：&lt;/h3&gt;&lt;input  <span class="built_in">type</span>=<span class="string">"file"</span> name=<span class="string">"file_stu"</span> /&gt; </span><br><span class="line">           &lt;input <span class="built_in">type</span>=<span class="string">"submit"</span>  value=<span class="string">"导入"</span> /&gt;  </span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="Excel转换数组类"><a href="#Excel转换数组类" class="headerlink" title="Excel转换数组类"></a>Excel转换数组类</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">class ExcelToArrary &#123;  </span><br><span class="line">  public <span class="keyword">function</span> <span class="function"><span class="title">__construct</span></span>() &#123;  </span><br><span class="line">        Vendor(<span class="string">"Excel.PHPExcel"</span>);//引入phpexcel类(注意你自己的路径)  </span><br><span class="line">        Vendor(<span class="string">"Excel.PHPExcel.IOFactory"</span>);       </span><br><span class="line">  &#125;  </span><br><span class="line">  public <span class="keyword">function</span> <span class="built_in">read</span>(<span class="variable">$filename</span>,<span class="variable">$encode</span>,<span class="variable">$file_type</span>)&#123;  </span><br><span class="line">            <span class="keyword">if</span>(strtolower ( <span class="variable">$file_type</span> )==<span class="string">'xls'</span>)//判断excel表类型为2003还是2007  </span><br><span class="line">            &#123;  </span><br><span class="line">                Vendor(<span class="string">"Excel.PHPExcel.Reader.Excel5"</span>);   </span><br><span class="line">                <span class="variable">$objReader</span> = PHPExcel_IOFactory::createReader(<span class="string">'Excel5'</span>);  </span><br><span class="line">            &#125;elseif(strtolower ( <span class="variable">$file_type</span> )==<span class="string">'xlsx'</span>)  </span><br><span class="line">            &#123;  </span><br><span class="line">                Vendor(<span class="string">"Excel.PHPExcel.Reader.Excel2007"</span>);   </span><br><span class="line">                <span class="variable">$objReader</span> = PHPExcel_IOFactory::createReader(<span class="string">'Excel2007'</span>);  </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="variable">$objReader</span>-&gt;setReadDataOnly(<span class="literal">true</span>);  </span><br><span class="line">            <span class="variable">$objPHPExcel</span> = <span class="variable">$objReader</span>-&gt;load(<span class="variable">$filename</span>);  </span><br><span class="line">            <span class="variable">$objWorksheet</span> = <span class="variable">$objPHPExcel</span>-&gt;getActiveSheet();  </span><br><span class="line">            <span class="variable">$highestRow</span> = <span class="variable">$objWorksheet</span>-&gt;getHighestRow();  </span><br><span class="line">            <span class="variable">$highestColumn</span> = <span class="variable">$objWorksheet</span>-&gt;getHighestColumn();  </span><br><span class="line">            <span class="variable">$highestColumnIndex</span> = PHPExcel_Cell::columnIndexFromString(<span class="variable">$highestColumn</span>);  </span><br><span class="line">            <span class="variable">$excelData</span> = array();  </span><br><span class="line">            <span class="keyword">for</span> (<span class="variable">$row</span> = 1; <span class="variable">$row</span> &lt;= <span class="variable">$highestRow</span>; <span class="variable">$row</span>++) &#123;  </span><br><span class="line">                <span class="keyword">for</span> (<span class="variable">$col</span> = 0; <span class="variable">$col</span> &lt; <span class="variable">$highestColumnIndex</span>; <span class="variable">$col</span>++) &#123;  </span><br><span class="line">                    <span class="variable">$excelData</span>[<span class="variable">$row</span>][] =(string)<span class="variable">$objWorksheet</span>-&gt;getCellByColumnAndRow(<span class="variable">$col</span>, <span class="variable">$row</span>)-&gt;getValue();  </span><br><span class="line">                    &#125;  </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="built_in">return</span> <span class="variable">$excelData</span>;  </span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h3 id="控制器文件"><a href="#控制器文件" class="headerlink" title="控制器文件"></a>控制器文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">class ExcelAction extends Action &#123;  </span><br><span class="line">    public <span class="keyword">function</span> __construct()  </span><br><span class="line">    &#123;  </span><br><span class="line">        import(<span class="string">'ORG.Util.ExcelToArrary'</span>);//导入excelToArray类  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    public <span class="keyword">function</span> index()  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="variable">$this</span>-&gt;display();  </span><br><span class="line">    &#125;  </span><br><span class="line">    public <span class="keyword">function</span> add()  </span><br><span class="line">    &#123;     </span><br><span class="line">        <span class="variable">$tmp_file</span> = <span class="variable">$_FILES</span> [<span class="string">'file_stu'</span>] [<span class="string">'tmp_name'</span>];  </span><br><span class="line">        <span class="variable">$file_types</span> = explode ( <span class="string">"."</span>, <span class="variable">$_FILES</span> [<span class="string">'file_stu'</span>] [<span class="string">'name'</span>] );  </span><br><span class="line">        <span class="variable">$file_type</span> = <span class="variable">$file_types</span> [count ( <span class="variable">$file_types</span> ) - 1];  </span><br><span class="line">      </span><br><span class="line">         /*判别是不是.xls文件，判别是不是excel文件*/  </span><br><span class="line">         <span class="keyword">if</span> (strtolower ( <span class="variable">$file_type</span> ) != <span class="string">"xlsx"</span> &amp;&amp; strtolower ( <span class="variable">$file_type</span> ) != <span class="string">"xls"</span>)                </span><br><span class="line">         &#123;  </span><br><span class="line">              <span class="variable">$this</span>-&gt;error ( <span class="string">'不是Excel文件，重新上传'</span> );  </span><br><span class="line">         &#125;  </span><br><span class="line">      </span><br><span class="line">         /*设置上传路径*/  </span><br><span class="line">         <span class="variable">$savePath</span> = C(<span class="string">'UPLOAD_DIR'</span>);  </span><br><span class="line">      </span><br><span class="line">         /*以时间来命名上传的文件*/  </span><br><span class="line">         <span class="variable">$str</span> = date ( <span class="string">'Ymdhis'</span> );   </span><br><span class="line">         <span class="variable">$file_name</span> = <span class="variable">$str</span> . <span class="string">"."</span> . <span class="variable">$file_type</span>;  </span><br><span class="line">           </span><br><span class="line">         /*是否上传成功*/  </span><br><span class="line">         <span class="keyword">if</span> (! copy ( <span class="variable">$tmp_file</span>, <span class="variable">$savePath</span> . <span class="variable">$file_name</span> ))   </span><br><span class="line">          &#123;  </span><br><span class="line">              <span class="variable">$this</span>-&gt;error ( <span class="string">'上传失败'</span> );  </span><br><span class="line">          &#125;  </span><br><span class="line">        <span class="variable">$ExcelToArrary</span>=new ExcelToArrary();//实例化  </span><br><span class="line">        <span class="variable">$res</span>=<span class="variable">$ExcelToArrary</span>-&gt;<span class="built_in">read</span>(C(<span class="string">'UPLOAD_DIR'</span>).<span class="variable">$file_name</span>,<span class="string">"UTF-8"</span>,<span class="variable">$file_type</span>);//传参,判断office2007还是office2003  </span><br><span class="line">  </span><br><span class="line">        foreach ( <span class="variable">$res</span> as <span class="variable">$k</span> =&gt; <span class="variable">$v</span> ) //循环excel表  </span><br><span class="line">           &#123;  </span><br><span class="line">               <span class="variable">$k</span>=<span class="variable">$k</span>-1;//addAll方法要求数组必须有0索引  </span><br><span class="line">               <span class="variable">$data</span>[<span class="variable">$k</span>][<span class="string">'name1'</span>] = <span class="variable">$v</span> [0];//创建二维数组  </span><br><span class="line">               <span class="variable">$data</span>[<span class="variable">$k</span>][<span class="string">'name2'</span>] = <span class="variable">$v</span> [1];  </span><br><span class="line">               <span class="variable">$data</span>[<span class="variable">$k</span>][<span class="string">'name3'</span>] = <span class="variable">$v</span> [2];       </span><br><span class="line">               <span class="variable">$data</span>[<span class="variable">$k</span>][<span class="string">'name4'</span>] = <span class="variable">$v</span> [3];  </span><br><span class="line">          &#125;  </span><br><span class="line">          <span class="variable">$kucun</span>=M(<span class="string">'kucun'</span>);//M方法  </span><br><span class="line">          <span class="variable">$result</span>=<span class="variable">$kucun</span>-&gt;addAll(<span class="variable">$data</span>);  </span><br><span class="line">          <span class="keyword">if</span>(! <span class="variable">$result</span>)  </span><br><span class="line">          &#123;  </span><br><span class="line">              <span class="variable">$this</span>-&gt;error(<span class="string">'导入数据库失败'</span>);  </span><br><span class="line">              <span class="built_in">exit</span>();  </span><br><span class="line">          &#125;  </span><br><span class="line">          <span class="keyword">else</span>  </span><br><span class="line">          &#123;  </span><br><span class="line">              <span class="variable">$this</span>-&gt;success ( <span class="string">'导入成功'</span> );   </span><br><span class="line">          &#125;  </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> thinkphp </tag>
            
            <tag> execl </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>php环境安装及维护</title>
      <link href="/2017/01/26/php-install-maintain/"/>
      <content type="html"><![CDATA[<h2 id="php环境安装及维护"><a href="#php环境安装及维护" class="headerlink" title="php环境安装及维护"></a>php环境安装及维护</h2><h3 id="openssl和curl安装"><a href="#openssl和curl安装" class="headerlink" title="openssl和curl安装"></a>openssl和curl安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">安装openssl</span><br><span class="line">下载</span><br><span class="line">wget https://www.openssl.org/<span class="built_in">source</span>/openssl-1.0.2d.tar.gz</span><br><span class="line">解压</span><br><span class="line">tar -zxvf openssl-1.0.2d.tar.gz</span><br><span class="line">进入目录</span><br><span class="line"><span class="built_in">cd</span> openssl-1.0.2d</span><br><span class="line">./config --prefix=/data/webserver/openssl</span><br><span class="line">./config -t</span><br><span class="line">make depend</span><br><span class="line">http://www.111cn.net/sys/linux/60171.htm</span><br><span class="line">安装curl</span><br><span class="line">wget http://curl.haxx.se/download/curl-7.44.0.tar.gz</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="PHP-amqp-扩展安装"><a href="#PHP-amqp-扩展安装" class="headerlink" title="PHP amqp 扩展安装"></a>PHP amqp 扩展安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/* <span class="comment">########## PHP amqp 扩展安装 S ########## */</span></span><br><span class="line">http://blog.csdn.net/linvo/article/details/7776702</span><br><span class="line">yum install libtool autoconf automake </span><br><span class="line">yum install python-simplejson -y</span><br><span class="line">上传rabbitmq-c到服务器</span><br><span class="line">进入对应目录</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/rabbitmq-c/</span><br><span class="line">autoreconf -i</span><br><span class="line">./configure &amp;&amp; make &amp;&amp; make install</span><br><span class="line">wget http://pecl.php.net/get/amqp-1.2.0.tgz</span><br><span class="line">tar -zxvf amqp-1.2.0.tgz</span><br><span class="line"><span class="built_in">cd</span>  amqp-1.2.0</span><br><span class="line">/usr/bin/phpize</span><br><span class="line">./configure --with-php-config=/usr/webserver/php/bin/php-config </span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">在php.ini加入 extension=amqp.so</span><br><span class="line">重启php</span><br><span class="line">/* <span class="comment">########## PHP amqp 扩展安装 E ########## */</span></span><br></pre></td></tr></table></figure><h3 id="PHP-redis-扩展安装"><a href="#PHP-redis-扩展安装" class="headerlink" title="PHP redis 扩展安装"></a>PHP redis 扩展安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">/* <span class="comment">########## PHP redis 扩展安装 S ########## */</span></span><br><span class="line">所有环境安装包都下载或者上传在</span><br><span class="line">/usr/webserver/src/</span><br><span class="line"><span class="built_in">cd</span> /usr/webserver/src/</span><br><span class="line">下载</span><br><span class="line">wget https://github.com/owlient/phpredis/archive/master.zip</span><br><span class="line">解压</span><br><span class="line">unzip master.zip </span><br><span class="line">进入目录</span><br><span class="line"><span class="built_in">cd</span> phpredis-master</span><br><span class="line">根据php的安装目录，下面的路径不同，默认yum安装是下面目录</span><br><span class="line">/usr/bin/phpize </span><br><span class="line">如果没有phpize</span><br><span class="line">说明没有安装这个拓展</span><br><span class="line">yum安装</span><br><span class="line">yum install php53-dev</span><br><span class="line">出现下面这样的说明是成功的</span><br><span class="line">Configuring <span class="keyword">for</span>:</span><br><span class="line">PHP Api Version:         20090626</span><br><span class="line">Zend Module Api No:      20090626</span><br><span class="line">Zend Extension Api No:   220090626</span><br><span class="line">如果php不是安装在默认目录下，请指定对应的位置</span><br><span class="line">./configure --with-php-config=/usr/bin/php-config</span><br><span class="line">如果没有php-config指令，需要执行：</span><br><span class="line">yum install php-devel</span><br><span class="line">如果是安装在默认的路径下，即是/usr/bin/</span><br><span class="line">./configure 就可以了</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">修改php.ini</span><br><span class="line">搜索extension</span><br><span class="line">在下面添加一行</span><br><span class="line">extension=/usr/lib64/php/modules/redis.so</span><br><span class="line">或者</span><br><span class="line">extension=redis.so</span><br><span class="line">保存</span><br><span class="line">重启Apache</span><br><span class="line">service httpd restart</span><br><span class="line">如果是nginx+php</span><br><span class="line">重启php-fpm就可以了</span><br><span class="line">上面安装不成功，尝试下面的这种安装方法</span><br><span class="line">wget http://pecl.php.net/get/redis-2.2.5.tgz</span><br><span class="line">tar xvf redis-2.2.5.tgz -C /usr/<span class="built_in">local</span>/src</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/redis-2.2.5</span><br><span class="line"><span class="comment">#开始编译安装</span></span><br><span class="line">phpize</span><br><span class="line">./configure --with-php-config=/usr/webserver/php/bin/php-config</span><br><span class="line">如果没有php-config指令，需要执行：</span><br><span class="line">yum install php-devel</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="comment">#把redis.so库添加到php.ini配置文件中</span></span><br><span class="line">vi /usr/<span class="built_in">local</span>/php56/etc/php.ini</span><br><span class="line">extension=/usr/<span class="built_in">local</span>/php56/lib/php/extensions/no-debug-non-zts-20131226/redis.so</span><br><span class="line">/* <span class="comment">########## PHP redis 扩展安装 E ########## */</span></span><br></pre></td></tr></table></figure><h3 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br></pre></td><td class="code"><pre><span class="line">添加nginx用户和用户组</span><br><span class="line">/usr/sbin/groupadd www</span><br><span class="line">/usr/sbin/useradd -g www www</span><br><span class="line"><span class="built_in">ulimit</span> -SHn 65535</span><br><span class="line">安装pcre</span><br><span class="line">wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.34.tar.gz</span><br><span class="line">tar zxvf pcre-8.34.tar.gz</span><br><span class="line"><span class="built_in">cd</span> pcre-8.34</span><br><span class="line">./configure --prefix=/usr/webserver/pcre</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">安装nginx</span><br><span class="line">wget http://nginx.org/download/nginx-1.5.2.tar.gz</span><br><span class="line">tar zxvf nginx-1.5.2.tar.gz</span><br><span class="line"><span class="built_in">cd</span> nginx-1.5.2</span><br><span class="line">注意：pcre的源码目录，不是安装目录</span><br><span class="line">./configure --user=www --group=www --prefix=/usr/webserver/nginx --with-http_stub_status_module --with-http_ssl_module  --with-pcre=/usr/webserver/src/pcre-8.34 --</span><br><span class="line">with-http_stub_status_module  --with-http_realip_module</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">修改配置文件</span><br><span class="line">vi /usr/webserver/nginx/conf/nginx.conf</span><br><span class="line">检查配置是否正确</span><br><span class="line">/usr/nginx/sbin/nginx -t </span><br><span class="line">启动</span><br><span class="line">/usr/webserver/nginx/sbin/nginx </span><br><span class="line">编写启动脚本</span><br><span class="line">vi /etc/init.d/nginx</span><br><span class="line"><span class="meta">#!/bin/sh </span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># nginx - this script starts and stops the nginx daemon </span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># chkconfig:   - 85 15 </span></span><br><span class="line"><span class="comment"># description: Nginx is an HTTP(S) server, HTTP(S) reverse \ </span></span><br><span class="line"><span class="comment">#               proxy and IMAP/POP3 proxy server </span></span><br><span class="line"><span class="comment"># processname: nginx </span></span><br><span class="line"><span class="comment"># config:      /etc/nginx/nginx.conf </span></span><br><span class="line"><span class="comment"># config:      /etc/sysconfig/nginx </span></span><br><span class="line"><span class="comment"># pidfile:     /var/run/nginx.pid </span></span><br><span class="line"><span class="comment"># Source function library. </span></span><br><span class="line">. /etc/rc.d/init.d/<span class="built_in">functions</span> </span><br><span class="line"><span class="comment"># Source networking configuration. </span></span><br><span class="line">. /etc/sysconfig/network </span><br><span class="line"><span class="comment"># Check that networking is up. </span></span><br><span class="line">[ <span class="string">"<span class="variable">$NETWORKING</span>"</span> = <span class="string">"no"</span> ] &amp;&amp; <span class="built_in">exit</span> 0 </span><br><span class="line">nginx=<span class="string">"/usr/webserver/nginx/sbin/nginx"</span> </span><br><span class="line">prog=$(basename <span class="variable">$nginx</span>) </span><br><span class="line">NGINX_CONF_FILE=<span class="string">"/usr/webserver/nginx/conf/nginx.conf"</span> </span><br><span class="line">[ -f /etc/sysconfig/nginx ] &amp;&amp; . /etc/sysconfig/nginx </span><br><span class="line">lockfile=/var/lock/subsys/nginx </span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123; </span><br><span class="line">    [ -x <span class="variable">$nginx</span> ] || <span class="built_in">exit</span> 5 </span><br><span class="line">    [ -f <span class="variable">$NGINX_CONF_FILE</span> ] || <span class="built_in">exit</span> 6 </span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">"Starting <span class="variable">$prog</span>: "</span> </span><br><span class="line">    daemon <span class="variable">$nginx</span> -c <span class="variable">$NGINX_CONF_FILE</span> </span><br><span class="line">    retval=$? </span><br><span class="line">    <span class="built_in">echo</span> </span><br><span class="line">    [ <span class="variable">$retval</span> -eq 0 ] &amp;&amp; touch <span class="variable">$lockfile</span> </span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$retval</span> </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123; </span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">"Stopping <span class="variable">$prog</span>: "</span> </span><br><span class="line">    killproc <span class="variable">$prog</span> -QUIT </span><br><span class="line">    retval=$? </span><br><span class="line">    <span class="built_in">echo</span> </span><br><span class="line">    [ <span class="variable">$retval</span> -eq 0 ] &amp;&amp; rm -f <span class="variable">$lockfile</span> </span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$retval</span> </span><br><span class="line">killall -9 nginx </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">restart</span></span>() &#123; </span><br><span class="line">    configtest || <span class="built_in">return</span> $? </span><br><span class="line">    stop </span><br><span class="line">    sleep 1 </span><br><span class="line">    start </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="title">reload</span></span>() &#123; </span><br><span class="line">    configtest || <span class="built_in">return</span> $? </span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">"Reloading <span class="variable">$prog</span>: "</span> </span><br><span class="line">    killproc <span class="variable">$nginx</span> -HUP </span><br><span class="line">RETVAL=$? </span><br><span class="line">    <span class="built_in">echo</span> </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="title">force_reload</span></span>() &#123; </span><br><span class="line">    restart </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">configtest</span></span>() &#123; </span><br><span class="line"><span class="variable">$nginx</span> -t -c <span class="variable">$NGINX_CONF_FILE</span> </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="title">rh_status</span></span>() &#123; </span><br><span class="line">    status <span class="variable">$prog</span> </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="title">rh_status_q</span></span>() &#123; </span><br><span class="line">    rh_status &gt;/dev/null 2&gt;&amp;1 </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span> </span><br><span class="line">    start) </span><br><span class="line">        rh_status_q &amp;&amp; <span class="built_in">exit</span> 0 </span><br><span class="line">    <span class="variable">$1</span> </span><br><span class="line">        ;; </span><br><span class="line">    stop) </span><br><span class="line">        rh_status_q || <span class="built_in">exit</span> 0 </span><br><span class="line">        <span class="variable">$1</span> </span><br><span class="line">        ;; </span><br><span class="line">    restart|configtest) </span><br><span class="line">        <span class="variable">$1</span> </span><br><span class="line">        ;; </span><br><span class="line">    reload) </span><br><span class="line">        rh_status_q || <span class="built_in">exit</span> 7 </span><br><span class="line">        <span class="variable">$1</span> </span><br><span class="line">        ;; </span><br><span class="line">    force-reload) </span><br><span class="line">        force_reload </span><br><span class="line">        ;; </span><br><span class="line">    status) </span><br><span class="line">        rh_status </span><br><span class="line">        ;; </span><br><span class="line">    condrestart|try-restart) </span><br><span class="line">        rh_status_q || <span class="built_in">exit</span> 0 </span><br><span class="line">            ;; </span><br><span class="line">    *)    </span><br><span class="line">      <span class="built_in">echo</span> $<span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest&#125;"</span> </span><br><span class="line">        <span class="built_in">exit</span> 2 </span><br><span class="line"><span class="keyword">esac</span> </span><br><span class="line">添加系统服务</span><br><span class="line">chkconfig --add nginx</span><br><span class="line">chkconfig nginx on</span><br><span class="line">// 启动</span><br><span class="line">service nginx start</span><br><span class="line">// 停止</span><br><span class="line">service nginx stop</span><br><span class="line">// 重启</span><br><span class="line">service nginx restart</span><br><span class="line">// 重载</span><br><span class="line">service nginx reload</span><br><span class="line">安装PHP依赖库</span><br><span class="line">wget http://www.ijg.org/files/jpegsrc.v9.tar.gz     </span><br><span class="line">tar zxvf jpegsrc.v9.tar.gz</span><br><span class="line"><span class="built_in">cd</span> jpeg-9/</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">cd</span> ../</span><br><span class="line">wget http://prdownloads.sourceforge.net/libpng/libpng-1.6.2.tar.gz</span><br><span class="line">tar zxvf libpng-1.6.2.tar.gz</span><br><span class="line"><span class="built_in">cd</span> libpng-1.6.2/</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">cd</span> ../</span><br><span class="line">wget http://download.savannah.gnu.org/releases/freetype/freetype-2.4.12.tar.gz</span><br><span class="line">tar zxvf freetype-2.4.12.tar.gz</span><br><span class="line"><span class="built_in">cd</span> freetype-2.4.12/</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">cd</span> ../</span><br><span class="line">wget <span class="string">"http://downloads.sourceforge.net/mhash/mhash-0.9.9.9.tar.gz?big_mirror=0"</span></span><br><span class="line">wget <span class="string">"http://downloads.sourceforge.net/mcrypt/libmcrypt-2.5.8.tar.gz?big_mirror=0"</span></span><br><span class="line">wget <span class="string">"http://downloads.sourceforge.net/mcrypt/mcrypt-2.6.8.tar.gz?big_mirror=0"</span></span><br><span class="line">tar zxvf libmcrypt-2.5.8.tar.gz</span><br><span class="line"><span class="built_in">cd</span> libmcrypt-2.5.8/</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">cd</span> libltdl/</span><br><span class="line">./configure --<span class="built_in">enable</span>-ltdl-install</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">cd</span> ../../</span><br><span class="line">tar zxvf mhash-0.9.9.9.tar.gz</span><br><span class="line"><span class="built_in">cd</span> mhash-0.9.9.9/</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">cd</span> ../</span><br><span class="line">tar zxvf mcrypt-2.6.8.tar.gz</span><br><span class="line"><span class="built_in">cd</span> mcrypt-2.6.8/</span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/usr/webserver/lib:<span class="variable">$LD_LIBRARY_PATH</span></span><br><span class="line">touch malloc.h</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">cd</span> ../</span><br><span class="line">yum install libxml2</span><br><span class="line">yum install libxml2-devel -y</span><br><span class="line">yum -y install curl-devel -y</span><br><span class="line"><span class="built_in">export</span> LDFLAGS=<span class="string">"-L/usr/webserver/libs/lib -L/usr/lib"</span></span><br><span class="line"><span class="built_in">export</span> CFLAGS=<span class="string">"-I/usr/webserver/libs/include -I/usr/include"</span></span><br><span class="line">安装php</span><br><span class="line">wget http://cn2.php.net/get/php-5.6.5.tar.gz/from/this/mirror</span><br><span class="line">tar zxvf php-5.5.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> php-5.5.1/</span><br><span class="line">./configure --prefix=/usr/webserver/php --with-config-file-path=/usr/webserver/php/etc --with-mysql --with-mysqli --with-iconv-dir --with-freetype-dir --with-jpeg-dir </span><br><span class="line">--with-png-dir --with-zlib --with-libxml-dir --<span class="built_in">enable</span>-xml --<span class="built_in">disable</span>-rpath --<span class="built_in">enable</span>-bcmath --<span class="built_in">enable</span>-shmop --<span class="built_in">enable</span>-sysvsem --<span class="built_in">enable</span>-inline-optimization --with-curl --</span><br><span class="line"><span class="built_in">enable</span>-mbregex --<span class="built_in">enable</span>-fpm --<span class="built_in">enable</span>-mbstring --with-mcrypt --with-gd --<span class="built_in">enable</span>-gd-native-ttf --with-mhash --<span class="built_in">enable</span>-pcntl --<span class="built_in">enable</span>-sockets --with-xmlrpc --<span class="built_in">enable</span>-zip </span><br><span class="line">--<span class="built_in">enable</span>-soap --<span class="built_in">enable</span>-opcache --with-pdo-mysql --<span class="built_in">enable</span>-maintainer-zts</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">cp php.ini-development /usr/webserver/php/etc/php.ini</span><br><span class="line">vi php.ini</span><br><span class="line">date.timezone = <span class="string">"Asia/Shanghai"</span></span><br><span class="line">ln -s /usr/webserver/php/bin/php /usr/<span class="built_in">local</span>/bin/php</span><br><span class="line">ln -s /usr/webserver/php/bin/phpize /usr/<span class="built_in">local</span>/bin/phpize</span><br><span class="line">复制启动脚本</span><br><span class="line">cp /usr/<span class="built_in">local</span>/src/php-5.6.5/sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm</span><br><span class="line">chmod +x /etc/init.d/php-fpm</span><br><span class="line">chkconfig --add php-fpm</span><br><span class="line">chkconfig php-fpm on</span><br><span class="line">// 启动</span><br><span class="line">service php-fpm start</span><br><span class="line">// 停止</span><br><span class="line">service php-fpm stop</span><br><span class="line">// 重启</span><br><span class="line">service php-fpm restart</span><br><span class="line">// 重载</span><br><span class="line">service php-fpm reload</span><br><span class="line">启动php</span><br><span class="line"><span class="built_in">cd</span> /usr/webserver/php/etc </span><br><span class="line">cp php-fpm.conf.default php-fpm.conf</span><br><span class="line">vi php-fpm.conf</span><br><span class="line"><span class="comment">#pid = run/php-fpm.pid</span></span><br><span class="line">改成</span><br><span class="line">pid = run/php-fpm.pid</span><br><span class="line">/usr/webserver/php/sbin/php-fpm</span><br><span class="line">停止php</span><br><span class="line">killall php-fpm</span><br><span class="line">memcache 拓展</span><br><span class="line">PHP Version 5.6.5</span><br><span class="line">要3.0.8才支持</span><br><span class="line">http://pecl.php.net/package/memcache</span><br><span class="line">wget http://pecl.php.net/get/memcache-2.2.7.tgz</span><br><span class="line">tar zxvf memcache-2.2.7.tgz</span><br><span class="line"><span class="built_in">cd</span> memcache-2.2.7</span><br><span class="line">/usr/webserver/php/bin/phpize </span><br><span class="line">./configure --with-php-config=/usr/webserver/php/bin/php-config</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">cd</span> ../</span><br><span class="line">打开 /usr/webserver/php/etc/php.ini 查找 ; extension_dir = <span class="string">"ext"</span></span><br><span class="line">在其后增加一行：</span><br><span class="line">extension = <span class="string">"memcache.so"</span></span><br><span class="line">FastDFS 拓展</span><br><span class="line">只是安装fastdfs client的话</span><br><span class="line">请先把fdfs源码目录里的conf/client.conf复制到/etc/fdfs/下，并设置好tracker的ip</span><br><span class="line">进入FastDFS安装目录</span><br><span class="line"><span class="built_in">cd</span> php_client</span><br><span class="line">/usr/webserver/php/bin/phpize </span><br><span class="line">./configure --with-php-config=/usr/webserver/php/bin/php-config</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">eaccelerator拓展</span><br><span class="line">wget https://github.com/eaccelerator/eaccelerator/tarball/master</span><br><span class="line">tar zxvf ....</span><br><span class="line"><span class="built_in">cd</span> .../</span><br><span class="line"><span class="built_in">export</span> PHP_PREFIX=<span class="string">"/usr/webserver/php"</span></span><br><span class="line"><span class="variable">$PHP_PREFIX</span>/bin/phpize</span><br><span class="line">./configure --<span class="built_in">enable</span>-eaccelerator=shared --with-php-config=<span class="variable">$PHP_PREFIX</span>/bin/php-config</span><br><span class="line">/usr/webserver/php/bin/phpize</span><br><span class="line">./configure --<span class="built_in">enable</span>-eaccelerator=shared --with-php-config=/usr/webserver/php/bin/php-config</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">APC加速器，替换eaccelerator拓展</span><br><span class="line">wget http://pecl.php.net/get/APC-3.0.19.tgz</span><br><span class="line">tar xvzf APC-3.0.19.tgz</span><br><span class="line"><span class="built_in">cd</span> APC-3.0.19/APC-3.0.19</span><br><span class="line">/usr/webserver/php/bin/phpize</span><br><span class="line">./configure --<span class="built_in">enable</span>-apc --<span class="built_in">enable</span>-apc-mmap --with-php-config=/usr/webserver/php/bin/php-config</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h3 id="php维护"><a href="#php维护" class="headerlink" title="php维护"></a>php维护</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">/* <span class="comment">###################  php维护 S ####################### */</span></span><br><span class="line">查看PHP占用内存</span><br><span class="line">/usr/bin/php  -i|grep mem</span><br><span class="line">查看php运行情况</span><br><span class="line">ps aux | grep php-fpm</span><br><span class="line">启动php</span><br><span class="line">/usr/webserver/php/sbin/php-fpm</span><br><span class="line">停止php</span><br><span class="line"><span class="built_in">kill</span> -INT `cat /var/run/php-fpm.pid`</span><br><span class="line">killall php-fpm</span><br><span class="line">看你的php-fpm.pid存放在那个路径</span><br><span class="line">重启php</span><br><span class="line"><span class="built_in">kill</span> -USR2 `cat /var/run/php-fpm.pid`</span><br><span class="line">重启php</span><br><span class="line"><span class="built_in">kill</span> -USR2 `cat /usr/webserver/php/var/run/php-fpm.pid`</span><br><span class="line">上面是没做系统服务的情况</span><br><span class="line">有做系统服务的话，用下面这些命令</span><br><span class="line">// 启动</span><br><span class="line">service php-fpm start</span><br><span class="line">// 停止</span><br><span class="line">service php-fpm stop</span><br><span class="line">// 重启</span><br><span class="line">service php-fpm restart</span><br><span class="line">// 重载</span><br><span class="line">service php-fpm reload</span><br><span class="line">/* <span class="comment">###################  php维护 E ####################### */</span></span><br></pre></td></tr></table></figure><h3 id="nginx维护"><a href="#nginx维护" class="headerlink" title="nginx维护"></a>nginx维护</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">/* <span class="comment">###################  nginx维护 S ####################### */</span></span><br><span class="line">检查配置是否正确:::修改了配置文件后，一定要检查下，没问题再重启</span><br><span class="line">/usr/webserver/nginx/sbin/nginx -t </span><br><span class="line">启动</span><br><span class="line">/usr/webserver/nginx/sbin/nginx </span><br><span class="line">停止</span><br><span class="line">/usr/webserver/nginx/sbin/nginx -s stop</span><br><span class="line">重启nginx</span><br><span class="line">/usr/webserver/nginx/sbin/nginx -s  reload</span><br><span class="line">上面是没做系统服务的情况</span><br><span class="line">有做系统服务的话，用下面这些命令</span><br><span class="line">// 启动</span><br><span class="line">service nginx start</span><br><span class="line">// 停止</span><br><span class="line">service nginx stop</span><br><span class="line">// 重启</span><br><span class="line">service nginx restart</span><br><span class="line">// 重载</span><br><span class="line">service nginx reload</span><br><span class="line">/* <span class="comment">###################  nginx维护 E ####################### */</span></span><br></pre></td></tr></table></figure><h3 id="nginx-php-性能优化"><a href="#nginx-php-性能优化" class="headerlink" title="nginx+php 性能优化"></a>nginx+php 性能优化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">/* <span class="comment">###################  nginx+php 性能优化 S ####################### */</span></span><br><span class="line">http://blog.csdn.net/dc_726/article/details/12340349</span><br><span class="line">http://blog.haohtml.com/archives/11162</span><br><span class="line">http://zyan.cc/post/375/</span><br><span class="line">nginx.conf</span><br><span class="line">listen 80后面添加 backlog=1024。</span><br><span class="line">同时配置php-fpm.conf中的listen.backlog为1024，默认为128。</span><br><span class="line">php-fpm初始/空闲/最大worker进程数</span><br><span class="line">pm.max_children = 300</span><br><span class="line">pm.start_servers = 20</span><br><span class="line">pm.min_spare_servers = 5</span><br><span class="line">pm.max_spare_servers = 35</span><br><span class="line">最大处理请求数是指一个php-fpm的worker进程在处理多少个请求后就终止掉，master进程会重新respawn一个新的。</span><br><span class="line">这个配置的主要目的是避免php解释器或程序引用的第三方库造成的内存泄露。</span><br><span class="line">pm.max_requests = 10240</span><br><span class="line">最大执行时间在php.ini和php-fpm.conf里都可以配置，配置项分别为max_execution_time和request_terminate_timeout。</span><br><span class="line">配置输出php-fpm慢日志，阀值为2秒：</span><br><span class="line">request_slowlog_timeout = 2</span><br><span class="line">slowlog = <span class="built_in">log</span>/<span class="variable">$pool</span>.log.slow</span><br><span class="line">/* <span class="comment">###################  nginx+php 性能优化 E ####################### */</span></span><br></pre></td></tr></table></figure><h3 id="压力测试"><a href="#压力测试" class="headerlink" title="压力测试"></a>压力测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ab -kc 1000 -n 1000 http://域名:端口/main/ab</span><br><span class="line">ab -kc 1000 -n 1000 http://域名/main/ab</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>php设计模式</title>
      <link href="/2016/12/06/php-design-patterns/"/>
      <content type="html"><![CDATA[<h2 id="php-design-patterns"><a href="#php-design-patterns" class="headerlink" title="php_design_patterns"></a>php_design_patterns</h2><p>当实例化一个了类的时候，里面的方法执行顺序是:静态方法-&gt;代码块-&gt;构造方法-&gt;普通方法</p><h3 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">特点：</span><br><span class="line">某个类只能有一个实例；</span><br><span class="line">必须自行创建这个实例；</span><br><span class="line">必须自行向整个系统提供这个实例。</span><br><span class="line">例子：</span><br><span class="line">/**</span><br><span class="line"> * 设计模式之单例模式</span><br><span class="line"> * <span class="variable">$_instance</span>必须声明为静态的私有变量</span><br><span class="line"> * 构造函数必须声明为私有,防止外部程序new类从而失去单例模式的意义</span><br><span class="line"> * getInstance()方法必须设置为公有的,必须调用此方法以返回实例的一个引用</span><br><span class="line"> * ::操作符只能访问静态变量和静态函数</span><br><span class="line"> * new对象都会消耗内存</span><br><span class="line"> * 使用场景:最常用的地方是数据库连接。</span><br><span class="line"> * 使用单例模式生成一个对象后，该对象可以被其它众多对象所使用。</span><br><span class="line"> */</span><br><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line">* 设计模式之单例模式</span><br><span class="line">* <span class="variable">$_instance</span>必须声明为静态的私有变量</span><br><span class="line">* 构造函数和析构函数必须声明为私有,防止外部程序new</span><br><span class="line">* 类从而失去单例模式的意义</span><br><span class="line">* getInstance()方法必须设置为公有的,必须调用此方法</span><br><span class="line">* 以返回实例的一个引用</span><br><span class="line">* ::操作符只能访问静态变量和静态函数</span><br><span class="line">* new对象都会消耗内存</span><br><span class="line">* 使用场景:最常用的地方是数据库连接。 </span><br><span class="line">* 使用单例模式生成一个对象后，</span><br><span class="line">* 该对象可以被其它众多对象所使用。 </span><br><span class="line">*/</span><br><span class="line">class Danli &#123;</span><br><span class="line">    //保存类实例的静态成员变量</span><br><span class="line">    private static <span class="variable">$_instance</span>;</span><br><span class="line">    //private标记的构造方法</span><br><span class="line">    private <span class="keyword">function</span> <span class="function"><span class="title">__construct</span></span>()&#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'This is a Constructed method;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    //创建__clone方法防止对象被复制克隆</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">__clone</span></span>()&#123;</span><br><span class="line">        trigger_error(<span class="string">'Clone is not allow!'</span>,E_USER_ERROR);</span><br><span class="line">    &#125;</span><br><span class="line">    //单例方法,用于访问实例的公共的静态方法</span><br><span class="line">    public static <span class="keyword">function</span> <span class="function"><span class="title">getInstance</span></span>()&#123;</span><br><span class="line">        <span class="keyword">if</span>(!(self::<span class="variable">$_instance</span> instanceof self))&#123;</span><br><span class="line">        self::<span class="variable">$_instance</span> = new self;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> self::<span class="variable">$_instance</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">test</span></span>()&#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'调用方法成功'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">//用new实例化private标记构造函数的类会报错</span><br><span class="line">//<span class="variable">$danli</span> = new Danli();</span><br><span class="line">//正确方法,用双冒号::操作符访问静态方法获取实例</span><br><span class="line"><span class="variable">$danli</span> = Danli::getInstance();</span><br><span class="line"><span class="variable">$danli</span>-&gt;<span class="built_in">test</span>();</span><br><span class="line">//复制(克隆)对象将导致一个E_USER_ERROR</span><br><span class="line"><span class="variable">$danli_clone</span> = <span class="built_in">clone</span> <span class="variable">$danli</span>;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="简单工厂模式"><a href="#简单工厂模式" class="headerlink" title="简单工厂模式"></a>简单工厂模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">抽象基类：类中定义抽象一些方法，用以在子类中实现;</span><br><span class="line">继承自抽象基类的子类：实现基类中的抽象方法;</span><br><span class="line">工厂类：用以实例化所有相对应的子类.</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">/**</span><br><span class="line"> * </span><br><span class="line"> * 定义个抽象的类，让子类去继承实现它</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line"> abstract class Operation&#123;</span><br><span class="line">     //抽象方法不能包含函数体</span><br><span class="line">     abstract public <span class="keyword">function</span> getValue(<span class="variable">$num1</span>,<span class="variable">$num2</span>);//强烈要求子类必须实现该功能函数</span><br><span class="line"> &#125;</span><br><span class="line"> /**</span><br><span class="line">  * 加法类</span><br><span class="line">  */</span><br><span class="line"> class OperationAdd extends Operation &#123;</span><br><span class="line">     public <span class="keyword">function</span> getValue(<span class="variable">$num1</span>,<span class="variable">$num2</span>)&#123;</span><br><span class="line">         <span class="built_in">return</span> <span class="variable">$num1</span>+<span class="variable">$num2</span>;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> /**</span><br><span class="line">  * 减法类</span><br><span class="line">  */</span><br><span class="line"> class OperationSub extends Operation &#123;</span><br><span class="line">     public <span class="keyword">function</span> getValue(<span class="variable">$num1</span>,<span class="variable">$num2</span>)&#123;</span><br><span class="line">         <span class="built_in">return</span> <span class="variable">$num1</span>-<span class="variable">$num2</span>;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> /**</span><br><span class="line">  * 乘法类</span><br><span class="line">  */</span><br><span class="line"> class OperationMul extends Operation &#123;</span><br><span class="line">     public <span class="keyword">function</span> getValue(<span class="variable">$num1</span>,<span class="variable">$num2</span>)&#123;</span><br><span class="line">         <span class="built_in">return</span> <span class="variable">$num1</span>*<span class="variable">$num2</span>;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> /**</span><br><span class="line">  * 除法类</span><br><span class="line">  */</span><br><span class="line"> class OperationDiv extends Operation &#123;</span><br><span class="line">     public <span class="keyword">function</span> getValue(<span class="variable">$num1</span>,<span class="variable">$num2</span>)&#123;</span><br><span class="line">         try &#123;</span><br><span class="line">             <span class="keyword">if</span> (<span class="variable">$num2</span>==0)&#123;</span><br><span class="line">                 throw new Exception(<span class="string">"除数不能为0"</span>);</span><br><span class="line">             &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                 <span class="built_in">return</span> <span class="variable">$num1</span>/<span class="variable">$num2</span>;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;catch (Exception <span class="variable">$e</span>)&#123;</span><br><span class="line">             <span class="built_in">echo</span> <span class="string">"错误信息："</span>.<span class="variable">$e</span>-&gt;getMessage();</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> /**</span><br><span class="line">  * 工程类，主要用来创建对象</span><br><span class="line">  * 功能：根据输入的运算符号，工厂就能实例化出合适的对象</span><br><span class="line">  *</span><br><span class="line">  */</span><br><span class="line"> class Factory&#123;</span><br><span class="line">     public static <span class="keyword">function</span> createObj(<span class="variable">$operate</span>)&#123;</span><br><span class="line">         switch (<span class="variable">$operate</span>)&#123;</span><br><span class="line">             <span class="keyword">case</span> <span class="string">'+'</span>:</span><br><span class="line">                 <span class="built_in">return</span> new OperationAdd();</span><br><span class="line">                 <span class="built_in">break</span>;</span><br><span class="line">             <span class="keyword">case</span> <span class="string">'-'</span>:</span><br><span class="line">                 <span class="built_in">return</span> new OperationSub();</span><br><span class="line">                 <span class="built_in">break</span>;</span><br><span class="line">             <span class="keyword">case</span> <span class="string">'*'</span>:</span><br><span class="line">                 <span class="built_in">return</span> new OperationSub();</span><br><span class="line">                 <span class="built_in">break</span>;</span><br><span class="line">             <span class="keyword">case</span> <span class="string">'/'</span>:</span><br><span class="line">                 <span class="built_in">return</span> new OperationDiv();</span><br><span class="line">                 <span class="built_in">break</span>;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="variable">$test</span>=Factory::createObj(<span class="string">'/'</span>);</span><br><span class="line"> <span class="variable">$result</span>=<span class="variable">$test</span>-&gt;getValue(23,0);</span><br><span class="line"> <span class="built_in">echo</span> <span class="variable">$result</span>;</span><br></pre></td></tr></table></figure><h3 id="观察者模式"><a href="#观察者模式" class="headerlink" title="观察者模式"></a>观察者模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">观察者模式属于行为模式，是定义对象间的一种一对多的依赖关系，以便当一个对象的状态发生改变时，所有依 赖于它的对象都得到通知并自动刷新。它完美的将观察者对象和被观察者对象分离。可以在独立的对象（主体）中维护一个对主体感兴趣的依赖项（观察器）列表。 让所有观察器各自实现公共的 Observer 接口，以取消主体和依赖性对象之间的直接依赖关系。</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">class MyObserver1 implements SplObserver &#123;</span><br><span class="line">    public <span class="keyword">function</span> update(SplSubject <span class="variable">$subject</span>) &#123;</span><br><span class="line">        <span class="built_in">echo</span> __CLASS__ . <span class="string">' - '</span> . <span class="variable">$subject</span>-&gt;getName();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class MyObserver2 implements SplObserver &#123;</span><br><span class="line">    public <span class="keyword">function</span> update(SplSubject <span class="variable">$subject</span>) &#123;</span><br><span class="line">        <span class="built_in">echo</span> __CLASS__ . <span class="string">' - '</span> . <span class="variable">$subject</span>-&gt;getName();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class MySubject implements SplSubject &#123;</span><br><span class="line">    private <span class="variable">$_observers</span>;</span><br><span class="line">    private <span class="variable">$_name</span>;</span><br><span class="line">    public <span class="keyword">function</span> __construct(<span class="variable">$name</span>) &#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;_observers = new SplObjectStorage();</span><br><span class="line">        <span class="variable">$this</span>-&gt;_name = <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> attach(SplObserver <span class="variable">$observer</span>) &#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;_observers-&gt;attach(<span class="variable">$observer</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> detach(SplObserver <span class="variable">$observer</span>) &#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;_observers-&gt;detach(<span class="variable">$observer</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">notify</span></span>() &#123;</span><br><span class="line">        foreach (<span class="variable">$this</span>-&gt;_observers as <span class="variable">$observer</span>) &#123;</span><br><span class="line">            <span class="variable">$observer</span>-&gt;update(<span class="variable">$this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">getName</span></span>() &#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$this</span>-&gt;_name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$observer1</span> = new MyObserver1();</span><br><span class="line"><span class="variable">$observer2</span> = new MyObserver2();</span><br><span class="line"><span class="variable">$subject</span> = new MySubject(<span class="string">"test"</span>);</span><br><span class="line"><span class="variable">$subject</span>-&gt;attach(<span class="variable">$observer1</span>);</span><br><span class="line"><span class="variable">$subject</span>-&gt;attach(<span class="variable">$observer2</span>);</span><br><span class="line"><span class="variable">$subject</span>-&gt;notify();</span><br></pre></td></tr></table></figure><h3 id="策略模式"><a href="#策略模式" class="headerlink" title="策略模式"></a>策略模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">如果要更改搜索引擎中排列页的方法，则可选择策略模式；</span><br><span class="line">适合复杂数据管理系统或数据处理系统。</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">//定义接口</span><br><span class="line">interface IStrategy &#123;</span><br><span class="line">    <span class="keyword">function</span> filter(<span class="variable">$record</span>);</span><br><span class="line">&#125;</span><br><span class="line">//实现接口方式1</span><br><span class="line">class FindAfterStrategy implements IStrategy &#123;</span><br><span class="line">    private <span class="variable">$_name</span>;</span><br><span class="line">    public <span class="keyword">function</span> __construct(<span class="variable">$name</span>) &#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;_name = <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> filter(<span class="variable">$record</span>) &#123;</span><br><span class="line">        <span class="built_in">return</span> strcmp ( <span class="variable">$this</span>-&gt;_name, <span class="variable">$record</span> ) &lt;= 0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">//实现接口方式1</span><br><span class="line">class RandomStrategy implements IStrategy &#123;</span><br><span class="line">    public <span class="keyword">function</span> filter(<span class="variable">$record</span>) &#123;</span><br><span class="line">        <span class="built_in">return</span> rand ( 0, 1 ) &gt;= 0.5;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">//主类</span><br><span class="line">class UserList &#123;</span><br><span class="line">    private <span class="variable">$_list</span> = array ();</span><br><span class="line">    public <span class="keyword">function</span> __construct(<span class="variable">$names</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$names</span> != null) &#123;</span><br><span class="line">            foreach ( <span class="variable">$names</span> as <span class="variable">$name</span> ) &#123;</span><br><span class="line">                <span class="variable">$this</span>-&gt;_list [] = <span class="variable">$name</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> add(<span class="variable">$name</span>) &#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;_list [] = <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> find(<span class="variable">$filter</span>) &#123;</span><br><span class="line">        <span class="variable">$recs</span> = array ();</span><br><span class="line">        foreach ( <span class="variable">$this</span>-&gt;_list as <span class="variable">$user</span> ) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$filter</span>-&gt;filter ( <span class="variable">$user</span> ))</span><br><span class="line">                <span class="variable">$recs</span> [] = <span class="variable">$user</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$recs</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ul</span> = new UserList ( array (</span><br><span class="line">        <span class="string">"Andy"</span>,</span><br><span class="line">        <span class="string">"Jack"</span>,</span><br><span class="line">        <span class="string">"Lori"</span>,</span><br><span class="line">        <span class="string">"Megan"</span> </span><br><span class="line">) );</span><br><span class="line"><span class="variable">$f1</span> = <span class="variable">$ul</span>-&gt;find ( new FindAfterStrategy ( <span class="string">"J"</span> ) );</span><br><span class="line">print_r ( <span class="variable">$f1</span> );</span><br><span class="line"><span class="variable">$f2</span> = <span class="variable">$ul</span>-&gt;find ( new RandomStrategy () );</span><br><span class="line">print_r ( <span class="variable">$f2</span> );</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>php redis消息队列</title>
      <link href="/2016/11/17/php-redis-duilie/"/>
      <content type="html"><![CDATA[<h2 id="redis-message-queuing"><a href="#redis-message-queuing" class="headerlink" title="redis-message-queuing"></a>redis-message-queuing</h2><h3 id="redis消息队列使用"><a href="#redis消息队列使用" class="headerlink" title="redis消息队列使用"></a>redis消息队列使用</h3><p><a href="http://www.redis.net.cn/" target="_blank" rel="noopener">参考网址</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">引入文件</span><br><span class="line">use Redis；</span><br><span class="line">运行原始命令</span><br><span class="line">Redis::<span class="built_in">command</span>(命令，参数数组);</span><br><span class="line">连接指定服务器</span><br><span class="line"><span class="variable">$redis</span> = Redis::connection(<span class="variable">$host</span>);默认连接默认的服务器。</span><br><span class="line">字符</span><br><span class="line">Redis::<span class="built_in">command</span>(<span class="string">'setnx'</span>,[<span class="variable">$key</span>,<span class="variable">$val</span>]);当<span class="variable">$key</span>没有时插入。</span><br><span class="line">Redis::<span class="built_in">set</span>(<span class="variable">$key</span>，<span class="variable">$val</span>);设置key值得val值。</span><br><span class="line">Redis::get(<span class="variable">$key</span>);获取key值得val值。</span><br><span class="line">Redis::del(<span class="variable">$key</span>);删除键值；</span><br><span class="line">Redis::<span class="built_in">command</span>(<span class="string">'Expire'</span>,[<span class="variable">$key</span>,秒]);过期时间。</span><br><span class="line">队列：</span><br><span class="line">Redis::lpush(<span class="variable">$key</span>,<span class="variable">$val</span>);往队列左侧插入一个val值，rpush右侧插入。</span><br><span class="line">Redis::lpop(<span class="variable">$key</span>);弹出队列左侧一个val值并返回val值，rpush右侧。</span><br><span class="line">集合：</span><br><span class="line">Redis::sAdd(<span class="variable">$key</span>,<span class="variable">$val</span>)；插入集合；</span><br><span class="line">Redis::sismember(<span class="variable">$key</span>,<span class="variable">$val</span>)；判断<span class="variable">$val</span>是否在集合内；</span><br><span class="line">Redis::Smembers(<span class="variable">$key</span>)；查询所有成员。</span><br><span class="line">有序集合：</span><br><span class="line">Redis::zAdd(<span class="string">'test'</span>,time(),<span class="string">'a'</span>,time(),<span class="string">'b'</span>);插入数据<span class="variable">$key</span>,索引，<span class="variable">$val</span>。</span><br><span class="line">Redis::zrevrange(<span class="string">'test'</span>,0,10000)；查询指定范围内的成员。</span><br></pre></td></tr></table></figure></p><a id="more"></a><h3 id="demo实现"><a href="#demo实现" class="headerlink" title="demo实现"></a>demo实现</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">     namespace App\Http\Controllers;</span><br><span class="line">      use App\Models\Goods;</span><br><span class="line">      use App\Models\Test;</span><br><span class="line">      use Illuminate\Http\Request;</span><br><span class="line">      use Redis;</span><br><span class="line">     //秒杀控制器</span><br><span class="line">    class MiaoshaController extends Controller</span><br><span class="line">   &#123;</span><br><span class="line"> /**</span><br><span class="line"> * 秒杀，使用redis缓存</span><br><span class="line"> * @param Request <span class="variable">$req</span></span><br><span class="line"> */</span><br><span class="line">public <span class="keyword">function</span> index(Request <span class="variable">$req</span>)&#123;</span><br><span class="line">    <span class="variable">$userId</span>=<span class="variable">$req</span>-&gt;user_id;//用户id</span><br><span class="line">    <span class="variable">$goodsId</span>=1;//商品id</span><br><span class="line">    //判断该商品在redis中是否有库存，将库存数量存入redis</span><br><span class="line">    <span class="keyword">if</span>(!Redis::<span class="built_in">command</span>(<span class="string">'EXISTS'</span>,[<span class="string">'goods_num_'</span>.<span class="variable">$goodsId</span>]))&#123;</span><br><span class="line">        <span class="variable">$num</span>=Goods::getOne([<span class="string">'id'</span>=&gt;<span class="variable">$goodsId</span>])-&gt;num;//通过数据库查询得到；</span><br><span class="line">        Redis::<span class="built_in">set</span>(<span class="string">'goods_num_'</span>.<span class="variable">$goodsId</span>,<span class="variable">$num</span>);//设置库存</span><br><span class="line">        Redis::<span class="built_in">command</span>(<span class="string">'Expire'</span>,[<span class="string">'goods_num_'</span>.<span class="variable">$goodsId</span>,600]);//设置过期时间</span><br><span class="line">    &#125;</span><br><span class="line">    //如果还有库存就提示抢购成功</span><br><span class="line">    <span class="keyword">while</span>(1)&#123;</span><br><span class="line">        //判断该用户是否抢购过该商品了</span><br><span class="line">        <span class="keyword">if</span>(!Redis::sismember(<span class="string">'zige_list_'</span> . <span class="variable">$goodsId</span>,<span class="variable">$userId</span>))&#123;</span><br><span class="line">            //用户购买该商品，把该商品加入redis的队列中，</span><br><span class="line">            Redis::lpush(<span class="string">'list_'</span>.<span class="variable">$goodsId</span>,<span class="variable">$userId</span>);//存入用户请求入队列</span><br><span class="line">            Redis::lpush(<span class="string">'zige_list_'</span>.<span class="variable">$goodsId</span>,<span class="variable">$userId</span>);//长期存放在redis中做判断</span><br><span class="line">    Redis::Decrby(<span class="string">'goods_num_'</span> . <span class="variable">$goodsId</span>, 1);//商品加入redis中redis库存减少</span><br><span class="line">            <span class="built_in">echo</span>(<span class="string">'抢购成功'</span> . <span class="string">'&lt;br&gt;'</span>);</span><br><span class="line">            <span class="built_in">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">            //如果库存为0了，就说明这里的商品抢玩了</span><br><span class="line">        <span class="keyword">if</span>(Redis::get(<span class="string">'goods_num_'</span> . <span class="variable">$goodsId</span>)==0)&#123;</span><br><span class="line">            <span class="built_in">echo</span>(<span class="string">'已经卖完了'</span> . <span class="string">'&lt;br&gt;'</span>);</span><br><span class="line">            <span class="built_in">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * 取出redis中的商品秒杀的消息队列存入mysql中</span><br><span class="line"> * @param <span class="variable">$goodsId</span></span><br><span class="line"> * @param <span class="variable">$fp</span></span><br><span class="line"> */</span><br><span class="line">public <span class="keyword">function</span> SecKill(<span class="variable">$goodsId</span>,<span class="variable">$fp</span>)&#123;</span><br><span class="line">    //处理队列</span><br><span class="line">    //取出队列的头部</span><br><span class="line">    <span class="variable">$tmp</span> = Redis::lpop(<span class="string">'list_'</span> . <span class="variable">$goodsId</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="variable">$tmp</span>)&#123;</span><br><span class="line">        //把取出的数据加入到mysql中</span><br><span class="line">        Order::edit([<span class="variable">$where</span>],<span class="variable">$info</span>);</span><br><span class="line">        <span class="variable">$tmp</span> = Redis::lpop(<span class="string">'list_'</span> . <span class="variable">$goodsId</span>);//取出队列的头部</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            //队列中没有数据，停止</span><br><span class="line">            <span class="built_in">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mysql统计分析语句</title>
      <link href="/2016/10/19/mysql-statistics/"/>
      <content type="html"><![CDATA[<h2 id="mysql-statistics"><a href="#mysql-statistics" class="headerlink" title="mysql-statistics"></a>mysql-statistics</h2><h3 id="数据表格式"><a href="#数据表格式" class="headerlink" title="数据表格式"></a>数据表格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">表Student</span><br><span class="line">(S<span class="comment">#,Sname,Sage,Ssex) 学生表</span></span><br><span class="line">S<span class="comment">#    学号</span></span><br><span class="line">Sage  年龄</span><br><span class="line">Ssex  性别</span><br><span class="line">表Course</span><br><span class="line">(C<span class="comment">#,Cname,T#) 课程表</span></span><br><span class="line">C<span class="comment">#      课程号</span></span><br><span class="line">Cname   课程名</span><br><span class="line">T<span class="comment">#      教师号</span></span><br><span class="line">表SC（学生与课程的分数制图表）</span><br><span class="line">(S<span class="comment">#,C#,score) 成绩表</span></span><br><span class="line">S<span class="comment">#       学号</span></span><br><span class="line">C<span class="comment">#       课程号</span></span><br><span class="line">score    分数</span><br><span class="line">表Teacher</span><br><span class="line">(T<span class="comment">#,Tname) 教师表</span></span><br><span class="line">T<span class="comment">#         教师号</span></span><br><span class="line">Tname      教师名</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="sql语句"><a href="#sql语句" class="headerlink" title="sql语句"></a>sql语句</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">查询“001”课程比“002”课程成绩高的所有学生的学号</span><br><span class="line">select a.S<span class="comment"># from (select S#,score from SC where C#='001') a,(select S#,score from SC where C#='002') b where a.score&gt;b.score and a.S#=b.S#;</span></span><br><span class="line">查询平均成绩大于60分的同学的学号和平均成绩</span><br><span class="line">select S<span class="comment">#,avg(score) from sc group by S# having avg(score) &gt;60;</span></span><br><span class="line">查询所有同学的学号、姓名、选课数、总成绩</span><br><span class="line">select Student.S<span class="comment">#,Student.Sname,count(SC.C#),sum(score) from Student left Outer join SC on Student.S#=SC.S# group by Student.S#,Sname;</span></span><br><span class="line">查询姓“李”的老师的个数</span><br><span class="line">select count(distinct(Tname)) from Teacher <span class="built_in">where</span> Tname like <span class="string">'李%'</span>;</span><br><span class="line">查询没学过“aaa”老师课的同学的学号、姓名</span><br><span class="line">select Student.S<span class="comment">#,Student.Sname from Student where S# not in (select distinct( SC.S#) from SC,Course,Teacher where  SC.C#=Course.C#and Teacher.T#=Course.T# and Teacher.Tname='aaa');</span></span><br><span class="line">查询学过“001”并且也学过编号“002”课程的同学的学号、姓名</span><br><span class="line">select Student.S<span class="comment">#,Student.Sname from Student,SC where Student.S#=SC.S# and SC.C#='001'and exists( Select * from SC as SC_2 where SC_2.S#=SC.S# and SC_2.C#='002');</span></span><br><span class="line">查询学过“aaa”老师所教的所有课的同学的学号、姓名</span><br><span class="line">select S<span class="comment">#,Sname from Student where S# in (select S# from SC,Course ,Teacher where SC.C#=Course.C# and Teacher.T#=Course.T# and Teacher.Tname='aaa'group by S# having count(SC.C#)=(select count(C#) from Course,Teacher  where Teacher.T#=Course.T# and Tname='aaa'));</span></span><br><span class="line">查询课程编号“002”的成绩比课程编号“001”课程低的所有同学的学号、姓名</span><br><span class="line">Select S<span class="comment">#,Sname from (select Student.S#,Student.Sname,score ,(select score from SC SC_2 where SC_2 .S#=Student.S# and SC_2.C#='002') score2 from Student,SC where Student.S#=SC.S# and C#='001') S_2 where score2 &lt;score;</span></span><br><span class="line">查询所有课程成绩小于60分的同学的学号、姓名</span><br><span class="line">select S<span class="comment">#,Sname from Student where S# not in (select Student.S# from Student,SC where S.S#=SC.S# and score&gt;60);</span></span><br><span class="line">查询没有学全所有课的同学的学号、姓名</span><br><span class="line">select Student.S<span class="comment">#,Student.Sname from Student,SC where Student.S#=SC.S# group by Student.S#,Student.Sname having count(C#)&lt;(select count(C#) from Course);</span></span><br><span class="line">查询至少有一门课与学号为“1001”的同学所学相同的同学的学号和姓名</span><br><span class="line">select S<span class="comment">#,Sname from Student,SC where Student.S#=SC.S# and C# in (select C# from SC where S#='1001');</span></span><br><span class="line">查询至少学过学号为“001”同学所有一门课的其他同学学号和姓名</span><br><span class="line">select distinct SC.S<span class="comment">#,Sname from Student,SC where Student.S#=SC.S# and C# in (select C# from SC where S#='001');</span></span><br><span class="line">把“SC”表中“aaa”老师教的课的成绩都更改为此课程的平均成绩</span><br><span class="line">update SC <span class="built_in">set</span> score=(select avg(SC_2.score) from SC SC_2 <span class="built_in">where</span> SC_2.C<span class="comment">#=SC.C# ) from Course,Teacher where Course.C#=SC.C# and Course.T#=Teacher.T# and Teacher.Tname='aaa');</span></span><br><span class="line">查询和“1002”号的同学学习的课程完全相同的其他同学学号和姓名</span><br><span class="line">select S<span class="comment"># from SC where C# in (select C# from SC where S#='1002') group by S# having count(*)=(select count(*) from SC where S#='1002');</span></span><br><span class="line">删除学习“aaa”老师课的SC表记录(联合其他表)</span><br><span class="line">Delete from(此处from可省略) SC from course ,Teacher <span class="built_in">where</span> Course.C<span class="comment">#=SC.C# and Course.T#=Teacher.T# and Tname='aaa';</span></span><br><span class="line">向SC表中插入一些记录，这些记录要求符合以下条件：没有上过编号“003”课程的同学学号、2号课的平均成绩</span><br><span class="line">Insert SC select S<span class="comment">#,'002',(Select avg(score) from SC where C#='002') from Student where S# not in (Select S# from SC where C#='002');</span></span><br><span class="line">按平均成绩从高到低显示所有学生的“数据库”、“企业管理”、“英语”三门的课程成绩，按如下形式显示：学生ID,</span><br><span class="line">数据库,企业管理,英语,有效课程数,有效平均分</span><br><span class="line">SELECT S<span class="comment"># as 学生ID,(SELECT score FROM SC WHERE SC.S#=t.S# AND C#='004') AS 数据库,(SELECT score FROM SC WHERE SC.S#=t.S# AND C#='001') AS 企业管理,(SELECT score FROM SC WHERE SC.S#=t.S# AND C#='006') AS 英语,COUNT(*) AS 有效课程数, AVG(t.score) AS 平均成绩 FROM SC AS t GROUP BY S# ORDER BY avg(t.score);</span></span><br><span class="line">查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分</span><br><span class="line">SELECT L.C<span class="comment"># As 课程ID,L.score AS 最高分,R.score AS 最低分 FROM SC L ,SC AS R WHERE L.C# = R.C# and L.score = (SELECT MAX(IL.score) FROM SC ASIL,Student AS IM WHERE L.C# =IL.C# and IM.S#=IL.S# GROUP BYIL.C#) AND R.Score= (SELECT MIN(IR.score) FROM SC AS IR WHERE R.C# =IR.C# GROUP BY IR.C#);</span></span><br><span class="line">按各科平均成绩从低到高和及格率的百分数从高到低顺序</span><br><span class="line">SELECT t.C<span class="comment"># AS 课程号,max(course.Cname)AS 课程名,isnull(AVG(score),0) AS平均成绩,100 * SUM(CASE WHEN isnull(score,0)&gt;=60 THEN 1 ELSE 0 END)/COUNT(*) AS 及格百分数 FROM SC T,Course where t.C#=course.C# GROUP BY t.C# ORDER BY 100* SUM(CASE WHEN  isnull(score,0)&gt;=60 THEN 1 ELSE 0 END)/COUNT(*) DESC;</span></span><br><span class="line">查询如下课程平均成绩和及格率的百分数(用<span class="string">"1行"</span>显示):</span><br><span class="line">企业管理（001），xxx（002），OO&amp;UML （003），数据库（004）</span><br><span class="line">SELECT SUM(CASE WHEN C<span class="comment"># ='001' THEN score ELSE 0 END)/SUM(CASE C# WHEN '001' THEN 1 ELSE 0 END) AS 企业管理平均分,100 * SUM(CASE WHEN C# = '001' AND score &gt;= 60 THEN 1 ELSE 0 END)/SUM(CASE WHEN C# = '001' THEN 1 ELSE 0 END) AS 企业管理及格百分数,SUM(CASE WHEN C# = '002' THEN score ELSE 0 END)/SUM(CASE C# WHEN '002' THEN 1 ELSE 0 END) AS xxx平均分,100 * SUM(CASE WHEN C# = '002' AND score &gt;= 60 THEN 1 ELSE 0 END)/SUM(CASE WHEN C# = '002' THEN 1 ELSE 0 END) AS xxx及格百分数,SUM(CASE WHEN C# = '003' THEN score ELSE 0 END)/SUM(CASE C# WHEN '003' THEN 1 ELSE 0 END) AS UML平均分,100* SUM(CASE WHEN C# = '003' AND score &gt;= 60 THEN 1 ELSE 0 END)/SUM(CASE WHEN C# = '003' THEN 1 ELSE 0 END) AS UML及格百分数,SUM(CASE WHEN C# = '004' THEN score ELSE 0 END)/SUM(CASE C# WHEN '004' THEN 1 ELSE 0 END) AS 数据库平均分,100 * SUM(CASE WHEN C# = '004' AND score &gt;= 60 THEN 1 ELSE 0 END)/SUM(CASE WHEN C# = '004' THEN 1 ELSE 0 END) AS 数据库及格百分数 FROM SC</span></span><br><span class="line">查询不同老师所教不同课程平均分从高到低显示</span><br><span class="line">SELECT max(Z.T<span class="comment">#) AS 教师ID,MAX(Z.Tname) AS 教师姓名,C.C# AS 课程ＩＤ,MAX(C.Cname) AS 课程名称,AVG(Score) AS 平均成绩 FROM SC AS T,Course AS C ,Teacher AS Z where T.C#=C.C# and C.T#=Z.T# GROUP BY C.C# ORDER BY AVG(Score) DESC;</span></span><br><span class="line">查询如下课程成绩第 3 名到第 6 名的学生成绩单：</span><br><span class="line">企业管理（001），xxxx（002），UML （003），数据库（004）</span><br><span class="line">[学生ID],[学生姓名],企业管理,xxxx,UML,数据库,平均成绩</span><br><span class="line">SELECT  DISTINCT top 3 SC.S<span class="comment"># As 学生学号,Student.Sname AS 学生姓名,T1.score AS 企业管理,T2.score AS xxxx, T3.score AS UML,T4.score AS 数据库,ISNULL(T1.score,0) + ISNULL(T2.score,0) + ISNULL(T3.score,0) + ISNULL(T4.score,0) as 总分 FROM Student,SC  LEFT JOIN SC AS T1 ON SC.S# = T1.S# AND T1.C# = '001' LEFT JOIN SC AS T2 ON SC.S# = T2.S# AND T2.C# = '002' LEFT JOIN SC AS T3 ON SC.S# = T3.S# AND T3.C# = '003' LEFT JOIN SC AS T4 ON SC.S# = T4.S# AND T4.C# = '004' WHERE student.S#=SC.S# and ISNULL(T1.score,0) + ISNULL(T2.score,0) + ISNULL(T3.score,0) + ISNULL(T4.score,0) NOT IN (SELECT DISTINCT TOP 15 WITH TIES ISNULL(T1.score,0) + ISNULL(T2.score,0) + ISNULL(T3.score,0) + ISNULL(T4.score,0) FROM sc LEFT JOIN sc AS T1 ON sc.S# = T1.S# AND T1.C# = 'k1' LEFT JOIN sc AS T2 ON sc.S# = T2.S# AND T2.C# = 'k2' LEFT JOIN sc AS T3 ON sc.S# = T3.S# AND T3.C# = 'k3' LEFT JOIN sc AS T4 ON sc.S# = T4.S# AND T4.C# = 'k4' ORDER BY ISNULL(T1.score,0) + ISNULL(T2.score,0) + ISNULL(T3.score,0) + ISNULL(T4.score,0) DESC);</span></span><br><span class="line">统计列印各科成绩,各分数段人数:课程ID,课程名称,[100-85],[85-70],[70-60],[ &lt;60]</span><br><span class="line">SELECT SC.C<span class="comment"># as 课程ID, Cname as 课程名称,SUM(CASE WHEN score BETWEEN 85 AND 100 THEN 1 ELSE 0 END) AS [100 - 85],SUM(CASE WHEN score BETWEEN 70 AND 85 THEN 1 ELSE 0 END) AS [85 - 70],SUM(CASE WHEN score BETWEEN 60 AND 70 THEN 1 ELSE 0 END) AS [70 - 60],SUM(CASE WHEN score &lt; 60 THEN 1 ELSE 0 END) AS [60 -] FROM SC,Course where SC.C#=Course.C# GROUP BY SC.C#,Cname;</span></span><br><span class="line">查询学生平均成绩及其名次</span><br><span class="line">SELECT 1+(SELECT COUNT( distinct 平均成绩) FROM (SELECT S<span class="comment">#,AVG(score) AS 平均成绩 FROM SC GROUP BY S#</span></span><br><span class="line">) AS T1 WHERE 平均成绩 &gt; T2.平均成绩) as 名次,S<span class="comment"># as 学生学号,平均成绩 FROM (SELECT S#,AVG(score) 平均成绩 FROM SC GROUP BY S#) AS T2 ORDER BY 平均成绩 desc;</span></span><br><span class="line">查询各科成绩前三名的记录:(不考虑成绩并列情况)</span><br><span class="line">SELECT t1.S<span class="comment"># as 学生ID,t1.C# as 课程ID,Score as 分数 FROM SC t1 WHERE score IN (SELECT TOP 3 score FROM SC WHERE t1.C#= C# ORDER BY score DESC) ORDER BY t1.C#;</span></span><br><span class="line">查询每门课程被选修的学生数</span><br><span class="line">select c<span class="comment">#,count(S#) from sc group by C#;</span></span><br><span class="line">查询出只选修了一门课程的全部学生的学号和姓名</span><br><span class="line">select SC.S<span class="comment">#,Student.Sname,count(C#) AS 选课数 from SC ,Student where SC.S#=Student.S# group by SC.S#,Student.Sname having count(C#)=1;</span></span><br><span class="line">查询男生、女生人数</span><br><span class="line">Select count(Ssex) as 男生人数 from Student group by Ssex having Ssex=<span class="string">'男'</span>;</span><br><span class="line">Select count(Ssex) as 女生人数 from Student group by Ssex having Ssex=<span class="string">'女'</span>；</span><br><span class="line">查询姓“张”的学生名单</span><br><span class="line">SELECT Sname FROM Student WHERE Sname like <span class="string">'张%'</span>;</span><br><span class="line">查询同名同性学生名单，并统计同名人数</span><br><span class="line">select Sname,count(*) from Student group by Sname having  count(*)&gt;1;</span><br><span class="line">1981年出生的学生名单(注：Student表中Sage列的类型是datetime)</span><br><span class="line">select Sname,  CONVERT(char (11),DATEPART(year,Sage)) as age from student <span class="built_in">where</span>  CONVERT(char(11),DATEPART(year,Sage))=<span class="string">'1981'</span>;</span><br><span class="line">查询每门课程的平均成绩，结果按平均成绩升序排列，平均成绩相同时，按课程号降序排列</span><br><span class="line">Select C<span class="comment">#,Avg(score) from SC group by C# order by Avg(score),C# DESC ;</span></span><br><span class="line">查询平均成绩大于85的所有学生的学号、姓名和平均成绩</span><br><span class="line">select Sname,SC.S<span class="comment"># ,avg(score)from Student,SC where Student.S#=SC.S# group by SC.S#,Sname having avg(score)&gt;85;</span></span><br><span class="line">查询课程名称为“数据库”，且分数低于60的学生姓名和分数</span><br><span class="line">Select Sname,isnull(score,0) from Student,SC,Course <span class="built_in">where</span> SC.S<span class="comment">#=Student.S# and SC.C#=Course.C# and Course.Cname='数据库'and score &lt;60;</span></span><br><span class="line">查询所有学生的选课情况；</span><br><span class="line">SELECT SC.S<span class="comment">#,SC.C#,Sname,Cname FROM SC,Student,Course where SC.S#=Student.S# and SC.C#=Course.C#;</span></span><br><span class="line">查询任何一门课程成绩在70分以上的姓名、课程名称和分数</span><br><span class="line">SELECT  distinct student.S<span class="comment">#,student.Sname,SC.C#,SC.score FROM student,SC WHERE SC.score&gt;=70 AND SC.S#=student.S#;</span></span><br><span class="line">查询不及格的课程，并按课程号从大到小排列</span><br><span class="line">select c<span class="comment"># from sc where scor e &lt;60 order by C# ;</span></span><br><span class="line">查询课程编号为003且课程成绩在80分以上的学生的学号和姓名</span><br><span class="line">select SC.S<span class="comment">#,Student.Sname from SC,Student where SC.S#=Student.S# and Score&gt;80 and C#='003';</span></span><br><span class="line">求选了课程的学生人数</span><br><span class="line">select count(*) from sc;</span><br><span class="line">查询选修“aaa”老师所授课程的学生中，成绩最高的学生姓名及其成绩</span><br><span class="line">select Student.Sname,score from Student,SC,Course C,Teacher <span class="built_in">where</span> Student.S<span class="comment">#=SC.S# and SC.C#=C.C# and C.T#=Teacher.T# and Teacher.Tname='aaa' and SC.score=(select max(score)from SC where C#=C.C# );</span></span><br><span class="line">查询各个课程及相应的选修人数</span><br><span class="line">select count(*) from sc group by C<span class="comment">#;</span></span><br><span class="line">查询不同课程成绩相同的学生的学号、课程号、学生成绩</span><br><span class="line">select distinct  A.S<span class="comment">#,B.score from SC A  ,SC B where A.Score=B.Score and A.C#&lt;&gt;B.C#;</span></span><br><span class="line">查询每门功成绩最好的前两名;</span><br><span class="line">SELECT t1.S<span class="comment"># as 学生ID,t1.C# as 课程ID,Score as 分数 FROM SC t1 WHERE score IN (SELECT TOP 2 score FROM SC WHERE t1.C#= C# ORDER BY score DESC) ORDER BY t1.C#;</span></span><br><span class="line">统计每门课程的学生选修人数（超过10人的课程才统计）。要求输出课程号和选修人数，查询结果按人数降序排列，</span><br><span class="line">查询结果按人数降序排列，若人数相同，按课程号升序排列</span><br><span class="line">select  C<span class="comment"># as 课程号,count(*) as 人数 from  sc group  by  C# order  by  count(*) desc,c#;</span></span><br><span class="line">检索至少选修两门课程的学生学号</span><br><span class="line">select  S<span class="comment"># from  sc group by s# having count(*)&gt;=2;</span></span><br><span class="line">查询全部学生都选修的课程的课程号和课程名</span><br><span class="line">select  C<span class="comment">#,Cname from  Course where C# in (select c# from sc group by c#);</span></span><br><span class="line">查询没学过“aaa”老师讲授的任一门课程的学生姓名</span><br><span class="line">select Sname from Student <span class="built_in">where</span> S<span class="comment"># not in (select S# from Course,Teacher,SC where Course.T#=Teacher.T# and SC.C#=course.C# and Tname='aaa');</span></span><br><span class="line">查询两门以上不及格课程的同学的学号及其平均成绩</span><br><span class="line">select S<span class="comment">#,avg(isnull(score,0)) from SC where S# in (select S# from SC where score &lt;60 group by S# having count(*)&gt;2)group by S#;</span></span><br><span class="line">检索“004”课程分数小于60，按分数降序排列的同学学号</span><br><span class="line">select S<span class="comment"># from SC where C#='004'and score &lt;60 order by score desc;</span></span><br><span class="line">删除“002”同学的“001”课程的成绩</span><br><span class="line">delete from Sc <span class="built_in">where</span> S<span class="comment">#='001'and C#='001';</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>php代码规范</title>
      <link href="/2016/10/13/php-PSR/"/>
      <content type="html"><![CDATA[<h2 id="PHP-PSR"><a href="#PHP-PSR" class="headerlink" title="PHP-PSR"></a>PHP-PSR</h2><h3 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h3><p><a href="https://segmentfault.com/a/1190000000443795" target="_blank" rel="noopener">最流行的php代码规范一</a><br><a href="https://github.com/hfcorriez/fig-standards/blob/zh_CN/%E6%8E%A5%E5%8F%97/PSR-2-coding-style-guide.md" target="_blank" rel="noopener">最流行的php代码规范二</a><br><a href="http://overapi.com/" target="_blank" rel="noopener">在线手册</a><br><a id="more"></a></p>]]></content>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>memcache和memcached区别</title>
      <link href="/2016/10/08/php-memcache-memcached/"/>
      <content type="html"><![CDATA[<h2 id="php-memcache-memcached"><a href="#php-memcache-memcached" class="headerlink" title="php-memcache-memcached"></a>php-memcache-memcached</h2><h3 id="memcache"><a href="#memcache" class="headerlink" title="memcache"></a>memcache</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">memcache是php的一个扩展，用于php管理memcached(服务端)，php-memcache.dll。</span><br><span class="line">如果安装了memcached(服务端)不安装扩展，那么php无法操控memcached，但是命令行使用起来没有问题。</span><br><span class="line">如果安装了PHP memcache客户端(php memcache和php memcached)。但是没有安装memcached(服务端)服务，那么这个就无法使用。</span><br><span class="line">只有同时安装了memcached(服务端)和PHP memcache客户端扩展才可以提高动态网站性能。</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
      
      
        <tags>
            
            <tag> memcache </tag>
            
            <tag> memcached </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>window安装redis和php-redis扩展</title>
      <link href="/2016/10/08/php-redis-windows/"/>
      <content type="html"><![CDATA[<p>下载window-redis<br><a href="https://github.com/dmajkic/redis/downloads" target="_blank" rel="noopener">window-redis下载</a></p><h2 id="php-redis-windows"><a href="#php-redis-windows" class="headerlink" title="php_redis_windows"></a>php_redis_windows</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">解压下载包得到以下文件：</span><br><span class="line">cygwin1.dll redis-benchmark.exe //性能测试，用以模拟同时N个客户端发送M个sets/gets查询</span><br><span class="line">redis-check-aof.exe //更新日志检查</span><br><span class="line">redis-check-dump.exe //本地数据库检查</span><br><span class="line">redis-cli.exe</span><br><span class="line">redis-server.exe 服务程序</span><br><span class="line">redis.conf 配置文件</span><br><span class="line">解压好的安装文件放到D盘目录后，文件夹改名为redis(名字自定义)，配置redis.conf,(先不做配置，默认就好)</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="启动redis-开启cmd窗口，输入命令，成功如下图："><a href="#启动redis-开启cmd窗口，输入命令，成功如下图：" class="headerlink" title="启动redis 开启cmd窗口，输入命令，成功如下图："></a>启动redis 开启cmd窗口，输入命令，成功如下图：</h3><p>d:<br>cd redis<br>redis-server.exe redis.conf<br><img src="redis.png" alt="redis"></p><h3 id="另起新cmd窗口（不能关闭之前的cmd窗口，运行redis必须一直开着窗口）输入命令："><a href="#另起新cmd窗口（不能关闭之前的cmd窗口，运行redis必须一直开着窗口）输入命令：" class="headerlink" title="另起新cmd窗口（不能关闭之前的cmd窗口，运行redis必须一直开着窗口）输入命令："></a>另起新cmd窗口（不能关闭之前的cmd窗口，运行redis必须一直开着窗口）输入命令：</h3><p>redis-cli.exe -h 127.0.0.1 -p 6379<br>set key1 HelloWorld<br>get key1<br>如果输出：HelloWorld 表示redis已经安装成功了<br><img src="redis2.png" alt="redis"></p><h3 id="安装php-redis扩展"><a href="#安装php-redis扩展" class="headerlink" title="安装php-redis扩展"></a>安装php-redis扩展</h3><p>运行phpinfo()查看以下内容：PHP版本号、TS or NTS、VC版本<br><img src="php_version.png" alt="php_version"><br>下载对应的php-redis扩展文件，下载地址：<a href="http://windows.php.net/downloads/pecl/snaps/redis/2.2.5/" target="_blank" rel="noopener">php-redis扩展下载</a><br>将下载的php_igbinary.dll（可能没有）、php_redis.dll放在php扩展目录中（ext），并修改配置文件php.ini，在文件相应位置添加<br>extension=php_igbinary.dll<br>extension=php_redis.dll<br>如下图<br><img src="redis_pz.png" alt="redis_pz"><br>重新启动服务，查看phpinfo(),找到以下内容表示成功<br>redis Redis Support enabled<br>Redis Version 2.2.3<br><img src="redis_ceshi.png" alt="redis_ceshi"></p><h3 id="php简单测试"><a href="#php简单测试" class="headerlink" title="php简单测试"></a>php简单测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?</span><br><span class="line">php phpinfo(); </span><br><span class="line"><span class="variable">$redis</span> = new Redis();</span><br><span class="line"><span class="variable">$redis</span>-&gt;connect(<span class="string">"127.0.0.1"</span>,<span class="string">"6379"</span>); </span><br><span class="line"><span class="variable">$redis</span>-&gt;<span class="built_in">set</span>(<span class="string">"ceshi"</span>,<span class="string">"hello"</span>); </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$redis</span>-&gt;get(<span class="string">"ceshi"</span>); </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="redis管理工具"><a href="#redis管理工具" class="headerlink" title="redis管理工具"></a>redis管理工具</h3><p>下载地址：<a href="https://redisdesktop.com/download" target="_blank" rel="noopener">redis管理工具下载</a><br><img src="redis_gz.png" alt="redis_gz"></p>]]></content>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>php json 数组</title>
      <link href="/2016/10/03/php-json-array/"/>
      <content type="html"><![CDATA[<p>json_encode()和json_decode()函数，前者用于编码，后者用于解码。</p><h2 id="php-json-array"><a href="#php-json-array" class="headerlink" title="php_json_array"></a>php_json_array</h2><h3 id="json-encode"><a href="#json-encode" class="headerlink" title="json_encode()"></a>json_encode()</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">该函数主要用来将数组和对象，转换为json格式。</span><br><span class="line">关联数组eg:</span><br><span class="line"><span class="variable">$arr</span> = array (<span class="string">'a'</span>=&gt;1,<span class="string">'b'</span>=&gt;2,<span class="string">'c'</span>=&gt;3,<span class="string">'d'</span>=&gt;4,<span class="string">'e'</span>=&gt;5);</span><br><span class="line"><span class="built_in">echo</span> json_encode(<span class="variable">$arr</span>);</span><br><span class="line">结果为 &#123;<span class="string">"a"</span>:1,<span class="string">"b"</span>:2,<span class="string">"c"</span>:3,<span class="string">"d"</span>:4,<span class="string">"e"</span>:5&#125;</span><br><span class="line">对象转换eg:</span><br><span class="line"><span class="variable">$obj</span>-&gt;body           = <span class="string">'another post'</span>;　</span><br><span class="line"><span class="variable">$obj</span>-&gt;id             = 21;　</span><br><span class="line"><span class="variable">$obj</span>-&gt;approved       = <span class="literal">true</span>;</span><br><span class="line"><span class="variable">$obj</span>-&gt;favorite_count = 1;　</span><br><span class="line"><span class="variable">$obj</span>-&gt;status         = NULL;</span><br><span class="line"><span class="built_in">echo</span> json_encode(<span class="variable">$obj</span>);</span><br><span class="line">结果为</span><br><span class="line">&#123;</span><br><span class="line">    　　<span class="string">"body"</span>:<span class="string">"another post"</span>,</span><br><span class="line">    　　<span class="string">"id"</span>:21,</span><br><span class="line">    　　<span class="string">"approved"</span>:<span class="literal">true</span>,</span><br><span class="line">    　　<span class="string">"favorite_count"</span>:1,</span><br><span class="line">    　　<span class="string">"status"</span>:null</span><br><span class="line">　　&#125; </span><br><span class="line">注：json_encode()的参数必须是utf-8编码，否则会得到空字符或者null。</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="索引数组和关联数组"><a href="#索引数组和关联数组" class="headerlink" title="索引数组和关联数组"></a>索引数组和关联数组</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">javascript不支持关联数组,所以json_encode()只将索引数组转为数组格式，而将关联数组转为对象格式。</span><br><span class="line">eg:</span><br><span class="line"><span class="variable">$arr</span> = Array(<span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three'</span>);</span><br><span class="line"><span class="built_in">echo</span> json_encode(<span class="variable">$arr</span>);</span><br><span class="line">结果为：</span><br><span class="line">[<span class="string">"one"</span>,<span class="string">"two"</span>,<span class="string">"three"</span>]</span><br><span class="line">如果将它改为关联数组：</span><br><span class="line"><span class="variable">$arr</span> = Array(<span class="string">'1'</span>=&gt;<span class="string">'one'</span>, <span class="string">'2'</span>=&gt;<span class="string">'two'</span>, <span class="string">'3'</span>=&gt;<span class="string">'three'</span>);</span><br><span class="line"><span class="built_in">echo</span> json_encode(<span class="variable">$arr</span>);</span><br><span class="line">结果为:</span><br><span class="line">&#123;<span class="string">"1"</span>:<span class="string">"one"</span>,<span class="string">"2"</span>:<span class="string">"two"</span>,<span class="string">"3"</span>:<span class="string">"three"</span>&#125;</span><br><span class="line">需要将<span class="string">"索引数组"</span>强制转化成<span class="string">"对象"</span>，可以这样写json_encode( (object)<span class="variable">$arr</span> );或者json_encode ( <span class="variable">$arr</span>, JSON_FORCE_OBJECT );</span><br></pre></td></tr></table></figure><h3 id="类的转换"><a href="#类的转换" class="headerlink" title="类的转换"></a>类的转换</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">eg:</span><br><span class="line">class Foo &#123;　</span><br><span class="line">　　　　const     ERROR_CODE = <span class="string">'404'</span>;</span><br><span class="line">　　　　public    <span class="variable">$public_ex</span> = <span class="string">'this is public'</span>;</span><br><span class="line">　　　　private   <span class="variable">$private_ex</span> = <span class="string">'this is private!'</span>;</span><br><span class="line">　　　　protected <span class="variable">$protected_ex</span> = <span class="string">'this should be protected'</span>; </span><br><span class="line">　　　　public <span class="keyword">function</span> <span class="function"><span class="title">getErrorCode</span></span>() &#123;</span><br><span class="line">　　　　　　<span class="built_in">return</span> self::ERROR_CODE;</span><br><span class="line">　　　　&#125;　</span><br><span class="line">　　&#125;</span><br><span class="line">进行json转换</span><br><span class="line"><span class="variable">$foo</span> = new Foo;</span><br><span class="line"><span class="variable">$foo_json</span> = json_encode(<span class="variable">$foo</span>);　</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$foo_json</span>;</span><br><span class="line">结果为：</span><br><span class="line">&#123;<span class="string">"public_ex"</span>:<span class="string">"this is public"</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="json-decode"><a href="#json-decode" class="headerlink" title="json_decode()"></a>json_decode()</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">用于将json文本转换为相应的PHP数据结构.</span><br><span class="line">eg:</span><br><span class="line"><span class="variable">$json</span> = <span class="string">'&#123;"foo": 12345&#125;'</span>;　　</span><br><span class="line"><span class="variable">$obj</span> = json_decode(<span class="variable">$json</span>);</span><br><span class="line"><span class="built_in">print</span> <span class="variable">$obj</span>-&gt;&#123;<span class="string">'foo'</span>&#125;; // 12345</span><br><span class="line">通常情况下，json_decode()总是返回一个PHP对象</span><br><span class="line">eg:</span><br><span class="line"><span class="variable">$json</span> = <span class="string">'&#123;"a":1,"b":2,"c":3,"d":4,"e":5&#125;'</span>;</span><br><span class="line">var_dump(json_decode(<span class="variable">$json</span>));</span><br><span class="line">结果为</span><br><span class="line">object(stdClass)<span class="comment">#1 (5) &#123;</span></span><br><span class="line">　　　　[<span class="string">"a"</span>] =&gt; int(1)</span><br><span class="line">　　　　[<span class="string">"b"</span>] =&gt; int(2)</span><br><span class="line">　　　　[<span class="string">"c"</span>] =&gt; int(3)</span><br><span class="line">　　　　[<span class="string">"d"</span>] =&gt; int(4)</span><br><span class="line">　　　　[<span class="string">"e"</span>] =&gt; int(5)　</span><br><span class="line">　　&#125;</span><br><span class="line">想要强制生成PHP关联数组，json_decode()需要加一个参数<span class="literal">true</span></span><br><span class="line">eg:</span><br><span class="line"><span class="variable">$json</span> = <span class="string">'&#123;"a":1,"b":2,"c":3,"d":4,"e":5&#125;'</span>;</span><br><span class="line">var_dump(json_decode(<span class="variable">$json</span>,<span class="literal">true</span>));</span><br><span class="line">结果为：</span><br><span class="line">array(5) &#123;</span><br><span class="line">　　 　　[<span class="string">"a"</span>] =&gt; int(1)</span><br><span class="line">　　 　　[<span class="string">"b"</span>] =&gt; int(2)</span><br><span class="line">　　 　　[<span class="string">"c"</span>] =&gt; int(3)</span><br><span class="line">　　 　　[<span class="string">"d"</span>] =&gt; int(4)</span><br><span class="line">　　 　　[<span class="string">"e"</span>] =&gt; int(5)</span><br><span class="line">　　&#125;</span><br></pre></td></tr></table></figure><h3 id="json-decode-的常见错误"><a href="#json-decode-的常见错误" class="headerlink" title="json_decode()的常见错误"></a>json_decode()的常见错误</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">json的分隔符只允许使用双引号，不能使用单引号</span><br><span class="line">json名值对的<span class="string">"名"</span>（冒号左边的部分），任何情况下都必须使用双引号</span><br><span class="line">最后一个值之后不能添加逗号</span><br><span class="line">eg:</span><br><span class="line"><span class="variable">$good_json</span> = <span class="string">"&#123; "</span>bar<span class="string">": "</span>baz<span class="string">" &#125;"</span>;</span><br><span class="line"><span class="variable">$good_json</span> = <span class="string">'&#123; "bar": "baz" &#125;'</span>;</span><br><span class="line">json只能用来表示对象和数组,如果对一个字符串或数值使用json_decode()，将会返回null。</span><br><span class="line">eg:</span><br><span class="line">var_dump(json_decode(<span class="string">"Hello World"</span>)); //null</span><br></pre></td></tr></table></figure><h3 id="json-encode、serialize、json-decode、unserialize"><a href="#json-encode、serialize、json-decode、unserialize" class="headerlink" title="json_encode、serialize、json_decode、unserialize"></a>json_encode、serialize、json_decode、unserialize</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">json_encode要比serialize所占的空间要小</span><br><span class="line">在json_decode的时候耗费时间要比unserialize要多</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> json </tag>
            
            <tag> array </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mysql单表、多表查询</title>
      <link href="/2016/09/27/mysql-multi-table-query/"/>
      <content type="html"><![CDATA[<h2 id="mysql-multi-table-query"><a href="#mysql-multi-table-query" class="headerlink" title="mysql-multi-table-query"></a>mysql-multi-table-query</h2><h3 id="表结构与数据"><a href="#表结构与数据" class="headerlink" title="表结构与数据"></a>表结构与数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; desc department;</span><br><span class="line">+-----------+--------------+------+-----+---------+-------+</span><br><span class="line">| Field     | Type         | Null | Key | Default | Extra |</span><br><span class="line">+-----------+--------------+------+-----+---------+-------+</span><br><span class="line">| dept_id   | int(11)      | YES  |     | NULL    |       |</span><br><span class="line">| dept_name | varchar(100) | YES  |     | NULL    |       |</span><br><span class="line">+-----------+--------------+------+-----+---------+-------+</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; desc employee;</span><br><span class="line">+----------+-------------+------+-----+---------+----------------+</span><br><span class="line">| Field    | Type        | Null | Key | Default | Extra          |</span><br><span class="line">+----------+-------------+------+-----+---------+----------------+</span><br><span class="line">| emp_id   | int(11)     | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| emp_name | varchar(50) | YES  |     | NULL    |                |</span><br><span class="line">| age      | int(11)     | YES  |     | NULL    |                |</span><br><span class="line">| dept_id  | int(11)     | YES  |     | NULL    |                |</span><br><span class="line">+----------+-------------+------+-----+---------+----------------+</span><br><span class="line">4 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line">mysql&gt; select * from department;</span><br><span class="line">+---------+-----------+</span><br><span class="line">| dept_id | dept_name |</span><br><span class="line">+---------+-----------+</span><br><span class="line">|     200 | hr        |</span><br><span class="line">|     201 | it        |</span><br><span class="line">|     202 | sale      |</span><br><span class="line">|     203 | fd        |</span><br><span class="line">+---------+-----------+</span><br><span class="line">4 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line">mysql&gt; select * from employee;</span><br><span class="line">+--------+----------+------+---------+</span><br><span class="line">| emp_id | emp_name | age  | dept_id |</span><br><span class="line">+--------+----------+------+---------+</span><br><span class="line">|      1 | tianyun  |   26 |     200 |</span><br><span class="line">|      2 | tom      |   30 |     201 |</span><br><span class="line">|      3 | jack     |   24 |     201 |</span><br><span class="line">|      4 | alice    |   24 |     202 |</span><br><span class="line">|      5 | robin    |   40 |     204 |</span><br><span class="line">|      6 | natasha  |   28 |     204 |</span><br><span class="line">+--------+----------+------+---------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="交叉连接"><a href="#交叉连接" class="headerlink" title="交叉连接"></a>交叉连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select employee.emp_id, employee.emp_name, department.dept_name</span><br><span class="line">    -&gt; from employee, department;</span><br><span class="line">+--------+----------+-----------+</span><br><span class="line">| emp_id | emp_name | dept_name |</span><br><span class="line">+--------+----------+-----------+</span><br><span class="line">|      1 | tianyun  | hr        |</span><br><span class="line">|      1 | tianyun  | it        |</span><br><span class="line">|      1 | tianyun  | sale      |</span><br><span class="line">|      1 | tianyun  | fd        |</span><br><span class="line">|      2 | tom      | hr        |</span><br><span class="line">|      2 | tom      | it        |</span><br><span class="line">|      2 | tom      | sale      |</span><br><span class="line">|      2 | tom      | fd        |</span><br><span class="line">|      3 | jack     | hr        |</span><br><span class="line">|      3 | jack     | it        |</span><br><span class="line">|      3 | jack     | sale      |</span><br><span class="line">|      3 | jack     | fd        |</span><br><span class="line">|      4 | alice    | hr        |</span><br><span class="line">|      4 | alice    | it        |</span><br><span class="line">|      4 | alice    | sale      |</span><br><span class="line">|      4 | alice    | fd        |</span><br><span class="line">|      5 | robin    | hr        |</span><br><span class="line">|      5 | robin    | it        |</span><br><span class="line">|      5 | robin    | sale      |</span><br><span class="line">|      5 | robin    | fd        |</span><br><span class="line">|      6 | natasha  | hr        |</span><br><span class="line">|      6 | natasha  | it        |</span><br><span class="line">|      6 | natasha  | sale      |</span><br><span class="line">|      6 | natasha  | fd        |</span><br><span class="line">+--------+----------+-----------+</span><br><span class="line">24 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br><span class="line">-- 两个表连接产生了笛卡尔积(即两个集合内的元素全部相乘)</span><br></pre></td></tr></table></figure><h3 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-- 这是一个内连接，只连接匹配的行</span><br><span class="line">显式内连接写法</span><br><span class="line">mysql&gt; select employee.emp_id, employee.emp_name, department.dept_name from employee inner join department on employee.dept_id = department.dept_id;</span><br><span class="line">隐式内连接写法</span><br><span class="line">mysql&gt; select employee.emp_id, employee.emp_name, department.dept_name from employee, department <span class="built_in">where</span> employee.dept_id = department.dept_id;</span><br><span class="line">+--------+----------+-----------+</span><br><span class="line">| emp_id | emp_name | dept_name |</span><br><span class="line">+--------+----------+-----------+</span><br><span class="line">|      1 | tianyun  | hr        |</span><br><span class="line">|      2 | tom      | it        |</span><br><span class="line">|      3 | jack     | it        |</span><br><span class="line">|      4 | alice    | sale      |</span><br><span class="line">+--------+----------+-----------+</span><br><span class="line">4 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.03 sec)</span><br></pre></td></tr></table></figure><h3 id="左外连接"><a href="#左外连接" class="headerlink" title="左外连接"></a>左外连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-- from 那一句表示employee去左连接department表</span><br><span class="line">-- on 那一句表示条件</span><br><span class="line">-- 左连接即是左边表中的所有字段都会显示出来，不管条件有没有匹配上</span><br><span class="line"></span><br><span class="line">mysql&gt; select employee.emp_id, employee.emp_name, department.dept_name from employee left join department on employee.dept_id = department.dept_id;</span><br><span class="line">+--------+----------+-----------+</span><br><span class="line">| emp_id | emp_name | dept_name |</span><br><span class="line">+--------+----------+-----------+</span><br><span class="line">|      1 | tianyun  | hr        |</span><br><span class="line">|      2 | tom      | it        |</span><br><span class="line">|      3 | jack     | it        |</span><br><span class="line">|      4 | alice    | sale      |</span><br><span class="line">|      5 | robin    | NULL      |</span><br><span class="line">|      6 | natasha  | NULL      |</span><br><span class="line">+--------+----------+-----------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br></pre></td></tr></table></figure><h3 id="右外连接"><a href="#右外连接" class="headerlink" title="右外连接"></a>右外连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-- from 那一句表示employee去右连接department表</span><br><span class="line">-- on 那一句表示条件</span><br><span class="line">-- 右连接即是右边表中的所有字段都会显示出来，不管条件有没有匹配上</span><br><span class="line"></span><br><span class="line">mysql&gt; select employee.emp_id, employee.emp_name, department.dept_name from employee right join department on employee.dept_id = department.dept_id;</span><br><span class="line">+--------+----------+-----------+</span><br><span class="line">| emp_id | emp_name | dept_name |</span><br><span class="line">+--------+----------+-----------+</span><br><span class="line">|      1 | tianyun  | hr        |</span><br><span class="line">|      2 | tom      | it        |</span><br><span class="line">|      3 | jack     | it        |</span><br><span class="line">|      4 | alice    | sale      |</span><br><span class="line">|   NULL | NULL     | fd        |</span><br><span class="line">+--------+----------+-----------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="全外连接"><a href="#全外连接" class="headerlink" title="全外连接"></a>全外连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">-- 这是一个全外连接，包含左右两个表的所有行</span><br><span class="line">mysql&gt; select * from employee full join department;</span><br><span class="line">+--------+----------+------+---------+---------+-----------+</span><br><span class="line">| emp_id | emp_name | age  | dept_id | dept_id | dept_name |</span><br><span class="line">+--------+----------+------+---------+---------+-----------+</span><br><span class="line">|      1 | tianyun  |   26 |     200 |     200 | hr        |</span><br><span class="line">|      1 | tianyun  |   26 |     200 |     201 | it        |</span><br><span class="line">|      1 | tianyun  |   26 |     200 |     202 | sale      |</span><br><span class="line">|      1 | tianyun  |   26 |     200 |     203 | fd        |</span><br><span class="line">|      2 | tom      |   30 |     201 |     200 | hr        |</span><br><span class="line">|      2 | tom      |   30 |     201 |     201 | it        |</span><br><span class="line">|      2 | tom      |   30 |     201 |     202 | sale      |</span><br><span class="line">|      2 | tom      |   30 |     201 |     203 | fd        |</span><br><span class="line">|      3 | jack     |   24 |     201 |     200 | hr        |</span><br><span class="line">|      3 | jack     |   24 |     201 |     201 | it        |</span><br><span class="line">|      3 | jack     |   24 |     201 |     202 | sale      |</span><br><span class="line">|      3 | jack     |   24 |     201 |     203 | fd        |</span><br><span class="line">|      4 | alice    |   24 |     202 |     200 | hr        |</span><br><span class="line">|      4 | alice    |   24 |     202 |     201 | it        |</span><br><span class="line">|      4 | alice    |   24 |     202 |     202 | sale      |</span><br><span class="line">|      4 | alice    |   24 |     202 |     203 | fd        |</span><br><span class="line">|      5 | robin    |   40 |     204 |     200 | hr        |</span><br><span class="line">|      5 | robin    |   40 |     204 |     201 | it        |</span><br><span class="line">|      5 | robin    |   40 |     204 |     202 | sale      |</span><br><span class="line">|      5 | robin    |   40 |     204 |     203 | fd        |</span><br><span class="line">|      6 | natasha  |   28 |     204 |     200 | hr        |</span><br><span class="line">|      6 | natasha  |   28 |     204 |     201 | it        |</span><br><span class="line">|      6 | natasha  |   28 |     204 |     202 | sale      |</span><br><span class="line">|      6 | natasha  |   28 |     204 |     203 | fd        |</span><br><span class="line">+--------+----------+------+---------+---------+-----------+</span><br><span class="line">24 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="mysql单表"><a href="#mysql单表" class="headerlink" title="mysql单表"></a>mysql单表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">学生成绩表tb_grade：学号，姓名，科目号，科目名，分数。</span><br><span class="line">select * from tb_grade order by Sno,Cno; </span><br><span class="line">+------+-------+-----+-------+-------+</span><br><span class="line">| Sno  | Sname | Cno | Cname | score |</span><br><span class="line">+------+-------+-----+-------+-------+</span><br><span class="line">| 1001 | 李菲  |   1 | 语文  |    86 |</span><br><span class="line">| 1001 | 李菲  |   2 | 数学  |    56 |</span><br><span class="line">| 1001 | 李菲  |   3 | 物理  |    48 |</span><br><span class="line">| 1001 | 李菲  |   4 | 化学  |    90 |</span><br><span class="line">| 1001 | 李菲  |   5 | 英语  |    57 |</span><br><span class="line">| 1002 | 王琪  |   1 | 语文  |    90 |</span><br><span class="line">| 1002 | 王琪  |   2 | 数学  |    68 |</span><br><span class="line">| 1002 | 王琪  |   3 | 物理  |    87 |</span><br><span class="line">| 1002 | 王琪  |   4 | 化学  |    68 |</span><br><span class="line">| 1002 | 王琪  |   5 | 英语  |    45 |</span><br><span class="line">| 1003 | 杨阳  |   1 | 语文  |    86 |</span><br><span class="line">| 1003 | 杨阳  |   2 | 数学  |    56 |</span><br><span class="line">| 1003 | 杨阳  |   3 | 物理  |    48 |</span><br><span class="line">| 1003 | 杨阳  |   4 | 化学  |    90 |</span><br><span class="line">| 1003 | 杨阳  |   5 | 英语  |    52 |</span><br><span class="line">| 1004 | 和树  |   1 | 语文  |    82 |</span><br><span class="line">| 1004 | 和树  |   2 | 数学  |    56 |</span><br><span class="line">| 1004 | 和树  |   3 | 物理  |    67 |</span><br><span class="line">| 1004 | 和树  |   4 | 化学  |    30 |</span><br><span class="line">| 1004 | 和树  |   5 | 英语  |    68 |</span><br><span class="line">+------+-------+-----+-------+-------+</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">查询不及格科目数大于等于2的学生学号和不及格科目数量：</span><br><span class="line">MySQL&gt; select Sno,count(score) as <span class="string">'不及格科目数'</span> from tb_grade <span class="built_in">where</span> score&lt;60 group by Sno having count(score)&gt;=2;</span><br><span class="line">+------+--------------+</span><br><span class="line">| Sno  | 不及格科目数 |</span><br><span class="line">+------+--------------+</span><br><span class="line">| 1001 |            3 |</span><br><span class="line">| 1003 |            3 |</span><br><span class="line">| 1004 |            2 |</span><br><span class="line">+------+--------------+</span><br><span class="line">查询不及格科目数大于等于2的学生学号和不及格科目数量：</span><br><span class="line">MySQL&gt; select Sno,count(score) as <span class="string">'不及格科目数'</span> from tb_grade <span class="built_in">where</span> score&lt;60 group by Sno having count(score)&gt;=2;</span><br><span class="line">+------+--------------+</span><br><span class="line">| Sno  | 不及格科目数 |</span><br><span class="line">+------+--------------+</span><br><span class="line">| 1001 |            3 |</span><br><span class="line">| 1003 |            3 |</span><br><span class="line">| 1004 |            2 |</span><br><span class="line">+------+--------------+</span><br><span class="line">查询不及格科目数大于等于2的学生学号、学生姓名、科目号、科目名称和分数，并按学号降序、科目号升序排序：</span><br><span class="line">MySQL&gt;  select * from tb_grade <span class="built_in">where</span> score&lt;60 and Sno <span class="keyword">in</span>( select  Sno  from tb_grade <span class="built_in">where</span> score&lt;60  group by  Sno having count(score)&gt;=2 ) order by Sno desc,Cno asc;</span><br><span class="line">+------+-------+-----+-------+-------+</span><br><span class="line">| Sno  | Sname | Cno | Cname | score |</span><br><span class="line">+------+-------+-----+-------+-------+</span><br><span class="line">| 1004 | 和树  |   2 | 数学  |    56 |</span><br><span class="line">| 1004 | 和树  |   4 | 化学  |    30 |</span><br><span class="line">| 1003 | 杨阳  |   2 | 数学  |    56 |</span><br><span class="line">| 1003 | 杨阳  |   3 | 物理  |    48 |</span><br><span class="line">| 1003 | 杨阳  |   5 | 英语  |    52 |</span><br><span class="line">| 1001 | 李菲  |   2 | 数学  |    56 |</span><br><span class="line">| 1001 | 李菲  |   3 | 物理  |    48 |</span><br><span class="line">| 1001 | 李菲  |   5 | 英语  |    57 |</span><br><span class="line">+------+-------+-----+-------+-------+</span><br></pre></td></tr></table></figure><h3 id="mysql多表查询"><a href="#mysql多表查询" class="headerlink" title="mysql多表查询"></a>mysql多表查询</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">有三张表：class、student、score</span><br><span class="line">班级表 class：                                                           </span><br><span class="line">+-------+---------+---------+</span><br><span class="line">| classID | className |</span><br><span class="line">+---------+-----------+</span><br><span class="line">|       1 | 一班      |</span><br><span class="line">|       2 | 二班      |</span><br><span class="line">|       3 | 三班      |</span><br><span class="line">+---------+-----------+</span><br><span class="line">学生表 student：</span><br><span class="line">+-------+---------+---------+</span><br><span class="line">| stuID | classID | stuName |</span><br><span class="line">+-------+---------+---------+</span><br><span class="line">|  1001 |       1 | 张三    |</span><br><span class="line">|  1002 |       1 | 李丽    |</span><br><span class="line">|  1003 |       1 | 钱封    |</span><br><span class="line">|  1004 |       2 | 杨国    |</span><br><span class="line">|  1005 |       2 | 小样    |</span><br><span class="line">|  1006 |       2 | 区天    |</span><br><span class="line">|  1007 |       3 | 李三宅  |</span><br><span class="line">|  1008 |       3 | 黄武    |</span><br><span class="line">|  1009 |       3 | 赵六    |</span><br><span class="line">+-------+---------+---------+</span><br><span class="line">分数表 score：</span><br><span class="line">+----------+-------+--------+-------+</span><br><span class="line">| courseID | stuID | course | score |</span><br><span class="line">+----------+-------+--------+-------+</span><br><span class="line">|        2 |  1001 | 数学   |    73 |</span><br><span class="line">|        3 |  1001 | 英语   |    79 |</span><br><span class="line">|        1 |  1001 | 语文   |    81 |</span><br><span class="line">|        3 |  1002 | 英语   |    87 |</span><br><span class="line">|        2 |  1002 | 数学   |    83 |</span><br><span class="line">|        1 |  1002 | 语文   |    79 |</span><br><span class="line">|        1 |  1003 | 语文   |    65 |</span><br><span class="line">|        3 |  1003 | 英语   |    65 |</span><br><span class="line">|        2 |  1003 | 数学   |    97 |</span><br><span class="line">|        1 |  1004 | 语文   |    78 |</span><br><span class="line">|        3 |  1004 | 英语   |    78 |</span><br><span class="line">|        2 |  1004 | 数学   |    86 |</span><br><span class="line">|        1 |  1005 | 语文   |    67 |</span><br><span class="line">|        3 |  1005 | 英语   |    88 |</span><br><span class="line">|        2 |  1005 | 数学   |    89 |</span><br><span class="line">|        2 |  1006 | 数学   |    90 |</span><br><span class="line">|        3 |  1006 | 英语   |    92 |</span><br><span class="line">|        1 |  1006 | 语文   |    98 |</span><br><span class="line">|        1 |  1007 | 语文   |    85 |</span><br><span class="line">|        2 |  1007 | 数学   |    78 |</span><br><span class="line">|        3 |  1007 | 英语   |    72 |</span><br><span class="line">|        1 |  1008 | 语文   |    78 |</span><br><span class="line">|        3 |  1008 | 英语   |    77 |</span><br><span class="line">|        2 |  1008 | 数学   |    85 |</span><br><span class="line">|        3 |  1009 | 英语   |    94 |</span><br><span class="line">|        2 |  1009 | 数学   |    91 |</span><br><span class="line">|        1 |  1009 | 语文   |    68 |</span><br><span class="line">+----------+-------+--------+-------+</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">查询各班各科分数最高的学生学号，姓名，班级名称，科目名称，分数：</span><br><span class="line">MySQL&gt;select stu.stuID,stu.stuName,c.classID,c.className, sc.score from class c,student stu,score sc <span class="built_in">where</span> c.classID=stu.classID and stu.stuID=sc.stuID order by c.classID,stu.stuID;</span><br><span class="line">等价于</span><br><span class="line">MySQL&gt;SELECT stu.stuID,stu.stuName,c.classID,c.className, sc.score from score sc LEFT JOIN (student stu LEFT JOIN class c ON stu.classID=c.classID) ON sc.stuID=stu.stuID order by c.classID,stu.stuID;</span><br><span class="line"></span><br><span class="line">MySQL&gt;select stu.stuID,stu.stuName,c.classID,c.className, MAX(sc.score) from class c,student stu,score sc <span class="built_in">where</span> c.classID=stu.classID and stu.stuID=sc.stuID group by stu.stuID having MAX(sc.score) order by c.classID,stu.stuID;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">sql文件如下</span><br><span class="line">/*</span><br><span class="line">Navicat MySQL Data Transfer</span><br><span class="line">Source Server         : lbw</span><br><span class="line">Source Server Version : 50540</span><br><span class="line">Source Host           : localhost:3306</span><br><span class="line">Source Database       : students</span><br><span class="line">Target Server Type    : MYSQL</span><br><span class="line">Target Server Version : 50540</span><br><span class="line">File Encoding         : 65001</span><br><span class="line">Date: 2016-09-27 16:08:13</span><br><span class="line">*/</span><br><span class="line">SET FOREIGN_KEY_CHECKS=0;</span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure <span class="keyword">for</span> `class`</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `class`;</span><br><span class="line">CREATE TABLE `class` (</span><br><span class="line">  `classID` int(10) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `className` varchar(50) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`classID`)</span><br><span class="line">) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;</span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of class</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `class` VALUES (<span class="string">'1'</span>, <span class="string">'一班'</span>);</span><br><span class="line">INSERT INTO `class` VALUES (<span class="string">'2'</span>, <span class="string">'二班'</span>);</span><br><span class="line">INSERT INTO `class` VALUES (<span class="string">'3'</span>, <span class="string">'三班'</span>);</span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure <span class="keyword">for</span> `score`</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `score`;</span><br><span class="line">CREATE TABLE `score` (</span><br><span class="line">  `scoreID` int(11) NOT NULL,</span><br><span class="line">  `stuID` int(11) DEFAULT NULL,</span><br><span class="line">  `course` varchar(50) DEFAULT NULL,</span><br><span class="line">  `score` int(11) DEFAULT NULL</span><br><span class="line">) ENGINE=MyISAM DEFAULT CHARSET=utf8;</span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of score</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'2'</span>, <span class="string">'1001'</span>, <span class="string">'数学'</span>, <span class="string">'73'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'3'</span>, <span class="string">'1001'</span>, <span class="string">'英语'</span>, <span class="string">'79'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'1'</span>, <span class="string">'1001'</span>, <span class="string">'语文'</span>, <span class="string">'81'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'3'</span>, <span class="string">'1002'</span>, <span class="string">'英语'</span>, <span class="string">'87'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'2'</span>, <span class="string">'1002'</span>, <span class="string">'数学'</span>, <span class="string">'83'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'1'</span>, <span class="string">'1002'</span>, <span class="string">'语文'</span>, <span class="string">'79'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'1'</span>, <span class="string">'1003'</span>, <span class="string">'语文'</span>, <span class="string">'65'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'3'</span>, <span class="string">'1003'</span>, <span class="string">'英语'</span>, <span class="string">'65'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'2'</span>, <span class="string">'1003'</span>, <span class="string">'数学'</span>, <span class="string">'97'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'1'</span>, <span class="string">'1004'</span>, <span class="string">'语文'</span>, <span class="string">'78'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'3'</span>, <span class="string">'1004'</span>, <span class="string">'英语'</span>, <span class="string">'78'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'2'</span>, <span class="string">'1004'</span>, <span class="string">'数学'</span>, <span class="string">'86'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'1'</span>, <span class="string">'1005'</span>, <span class="string">'语文'</span>, <span class="string">'67'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'3'</span>, <span class="string">'1005'</span>, <span class="string">'英语'</span>, <span class="string">'88'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'2'</span>, <span class="string">'1005'</span>, <span class="string">'数学'</span>, <span class="string">'89'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'2'</span>, <span class="string">'1006'</span>, <span class="string">'数学'</span>, <span class="string">'90'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'3'</span>, <span class="string">'1006'</span>, <span class="string">'英语'</span>, <span class="string">'92'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'1'</span>, <span class="string">'1006'</span>, <span class="string">'语文'</span>, <span class="string">'98'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'1'</span>, <span class="string">'1007'</span>, <span class="string">'语文'</span>, <span class="string">'85'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'2'</span>, <span class="string">'1007'</span>, <span class="string">'数学'</span>, <span class="string">'78'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'3'</span>, <span class="string">'1007'</span>, <span class="string">'英语'</span>, <span class="string">'72'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'1'</span>, <span class="string">'1008'</span>, <span class="string">'语文'</span>, <span class="string">'78'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'3'</span>, <span class="string">'1008'</span>, <span class="string">'英语'</span>, <span class="string">'77'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'2'</span>, <span class="string">'1008'</span>, <span class="string">'数学'</span>, <span class="string">'85'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'3'</span>, <span class="string">'1009'</span>, <span class="string">'英语'</span>, <span class="string">'94'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'2'</span>, <span class="string">'1009'</span>, <span class="string">'数学'</span>, <span class="string">'91'</span>);</span><br><span class="line">INSERT INTO `score` VALUES (<span class="string">'1'</span>, <span class="string">'1009'</span>, <span class="string">'语文'</span>, <span class="string">'68'</span>);</span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure <span class="keyword">for</span> `student`</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `student`;</span><br><span class="line">CREATE TABLE `student` (</span><br><span class="line">  `stuID` int(11) NOT NULL,</span><br><span class="line">  `classID` int(11) DEFAULT NULL,</span><br><span class="line">  `stuName` varchar(50) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`stuID`)</span><br><span class="line">) ENGINE=MyISAM DEFAULT CHARSET=utf8;</span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of student</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `student` VALUES (<span class="string">'1001'</span>, <span class="string">'1'</span>, <span class="string">'张三'</span>);</span><br><span class="line">INSERT INTO `student` VALUES (<span class="string">'1002'</span>, <span class="string">'1'</span>, <span class="string">'李丽'</span>);</span><br><span class="line">INSERT INTO `student` VALUES (<span class="string">'1003'</span>, <span class="string">'1'</span>, <span class="string">'钱封'</span>);</span><br><span class="line">INSERT INTO `student` VALUES (<span class="string">'1004'</span>, <span class="string">'2'</span>, <span class="string">'杨国'</span>);</span><br><span class="line">INSERT INTO `student` VALUES (<span class="string">'1005'</span>, <span class="string">'2'</span>, <span class="string">'小样'</span>);</span><br><span class="line">INSERT INTO `student` VALUES (<span class="string">'1006'</span>, <span class="string">'2'</span>, <span class="string">'区天'</span>);</span><br><span class="line">INSERT INTO `student` VALUES (<span class="string">'1007'</span>, <span class="string">'3'</span>, <span class="string">'李三宅'</span>);</span><br><span class="line">INSERT INTO `student` VALUES (<span class="string">'1008'</span>, <span class="string">'3'</span>, <span class="string">'黄武'</span>);</span><br><span class="line">INSERT INTO `student` VALUES (<span class="string">'1009'</span>, <span class="string">'3'</span>, <span class="string">'赵六'</span>);</span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure <span class="keyword">for</span> `tb_grade`</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `tb_grade`;</span><br><span class="line">CREATE TABLE `tb_grade` (</span><br><span class="line">  `Sno` varchar(100) NOT NULL,</span><br><span class="line">  `Sname` varchar(50) DEFAULT NULL,</span><br><span class="line">  `Cno` int(11) DEFAULT NULL,</span><br><span class="line">  `Cname` varchar(50) DEFAULT NULL,</span><br><span class="line">  `score` int(50) DEFAULT NULL</span><br><span class="line">) ENGINE=MyISAM AUTO_INCREMENT=1002 DEFAULT CHARSET=utf8;</span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of tb_grade</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `tb_grade` VALUES (<span class="string">'1001'</span>, <span class="string">'李菲'</span>, <span class="string">'2'</span>, <span class="string">'数学'</span>, <span class="string">'56'</span>);</span><br><span class="line">INSERT INTO `tb_grade` VALUES (<span class="string">'1001'</span>, <span class="string">'李菲'</span>, <span class="string">'3'</span>, <span class="string">'物理'</span>, <span class="string">'48'</span>);</span><br><span class="line">INSERT INTO `tb_grade` VALUES (<span class="string">'1001'</span>, <span class="string">'李菲'</span>, <span class="string">'4'</span>, <span class="string">'化学'</span>, <span class="string">'90'</span>);</span><br><span class="line">INSERT INTO `tb_grade` VALUES (<span class="string">'1001'</span>, <span class="string">'李菲'</span>, <span class="string">'5'</span>, <span class="string">'英语'</span>, <span class="string">'57'</span>);</span><br><span class="line">INSERT INTO `tb_grade` VALUES (<span class="string">'1001'</span>, <span class="string">'李菲'</span>, <span class="string">'1'</span>, <span class="string">'语文'</span>, <span class="string">'86'</span>);</span><br><span class="line">INSERT INTO `tb_grade` VALUES (<span class="string">'1002'</span>, <span class="string">'王琪'</span>, <span class="string">'2'</span>, <span class="string">'数学'</span>, <span class="string">'68'</span>);</span><br><span class="line">INSERT INTO `tb_grade` VALUES (<span class="string">'1002'</span>, <span class="string">'王琪'</span>, <span class="string">'3'</span>, <span class="string">'物理'</span>, <span class="string">'87'</span>);</span><br><span class="line">INSERT INTO `tb_grade` VALUES (<span class="string">'1002'</span>, <span class="string">'王琪'</span>, <span class="string">'4'</span>, <span class="string">'化学'</span>, <span class="string">'68'</span>);</span><br><span class="line">INSERT INTO `tb_grade` VALUES (<span class="string">'1002'</span>, <span class="string">'王琪'</span>, <span class="string">'5'</span>, <span class="string">'英语'</span>, <span class="string">'45'</span>);</span><br><span class="line">INSERT INTO `tb_grade` VALUES (<span class="string">'1002'</span>, <span class="string">'王琪'</span>, <span class="string">'1'</span>, <span class="string">'语文'</span>, <span class="string">'90'</span>);</span><br><span class="line">INSERT INTO `tb_grade` VALUES (<span class="string">'1003'</span>, <span class="string">'杨阳'</span>, <span class="string">'2'</span>, <span class="string">'数学'</span>, <span class="string">'56'</span>);</span><br><span class="line">INSERT INTO `tb_grade` VALUES (<span class="string">'1003'</span>, <span class="string">'杨阳'</span>, <span class="string">'3'</span>, <span class="string">'物理'</span>, <span class="string">'48'</span>);</span><br><span class="line">INSERT INTO `tb_grade` VALUES (<span class="string">'1003'</span>, <span class="string">'杨阳'</span>, <span class="string">'4'</span>, <span class="string">'化学'</span>, <span class="string">'90'</span>);</span><br><span class="line">INSERT INTO `tb_grade` VALUES (<span class="string">'1003'</span>, <span class="string">'杨阳'</span>, <span class="string">'5'</span>, <span class="string">'英语'</span>, <span class="string">'52'</span>);</span><br><span class="line">INSERT INTO `tb_grade` VALUES (<span class="string">'1003'</span>, <span class="string">'杨阳'</span>, <span class="string">'1'</span>, <span class="string">'语文'</span>, <span class="string">'86'</span>);</span><br><span class="line">INSERT INTO `tb_grade` VALUES (<span class="string">'1004'</span>, <span class="string">'和树'</span>, <span class="string">'2'</span>, <span class="string">'数学'</span>, <span class="string">'56'</span>);</span><br><span class="line">INSERT INTO `tb_grade` VALUES (<span class="string">'1004'</span>, <span class="string">'和树'</span>, <span class="string">'3'</span>, <span class="string">'物理'</span>, <span class="string">'67'</span>);</span><br><span class="line">INSERT INTO `tb_grade` VALUES (<span class="string">'1004'</span>, <span class="string">'和树'</span>, <span class="string">'4'</span>, <span class="string">'化学'</span>, <span class="string">'30'</span>);</span><br><span class="line">INSERT INTO `tb_grade` VALUES (<span class="string">'1004'</span>, <span class="string">'和树'</span>, <span class="string">'5'</span>, <span class="string">'英语'</span>, <span class="string">'68'</span>);</span><br><span class="line">INSERT INTO `tb_grade` VALUES (<span class="string">'1004'</span>, <span class="string">'和树'</span>, <span class="string">'1'</span>, <span class="string">'语文'</span>, <span class="string">'82'</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mysql存储过程</title>
      <link href="/2016/09/17/mysql-stored-procedure/"/>
      <content type="html"><![CDATA[<h2 id="mysql-stored-procedure"><a href="#mysql-stored-procedure" class="headerlink" title="mysql_stored_procedure"></a>mysql_stored_procedure</h2><h3 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">create procedure 存储过程名字()   </span><br><span class="line">(   </span><br><span class="line">[<span class="keyword">in</span>|out|inout] 参数 datatype   </span><br><span class="line">)   </span><br><span class="line">begin   </span><br><span class="line">MySQL 语句;   </span><br><span class="line">end;</span><br><span class="line">MySQL 存储过程参数如果不显式指定“<span class="keyword">in</span>”、“out”、“inout”，则默认为“<span class="keyword">in</span>”。习惯上，对于是“<span class="keyword">in</span>” 的参数，都不会显式指定。</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">规则：</span><br><span class="line">输入参数例子，选择会话变量@x证明成功的将参数传入了改变量</span><br><span class="line">mysql&gt; CREATE PROCEDURE p2(p INT) SET @x = p ;//</span><br><span class="line">Query OK, 0 rows affected (0.02 sec)  </span><br><span class="line">mysql&gt; CALL p2(123)//</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)  </span><br><span class="line">mysql&gt; SELECT @x//  </span><br><span class="line">+------+  </span><br><span class="line">| @x   |  </span><br><span class="line">+------+  </span><br><span class="line">|  123 |  </span><br><span class="line">+------+  </span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br><span class="line">输出参数的例子，选择会话变量@y去接收存储过程p3</span><br><span class="line">mysql&gt; CREATE PROCEDURE p3(OUT p INT)  </span><br><span class="line">    -&gt; SET p = -5;//  </span><br><span class="line">Query OK, 0 rows affected (0.00 sec)  </span><br><span class="line">mysql&gt; CALL p3(@y)//  </span><br><span class="line">Query OK, 0 rows affected (0.01 sec)  </span><br><span class="line">mysql&gt; SELECT @y//  </span><br><span class="line">+------+  </span><br><span class="line">| @y   |  </span><br><span class="line">+------+  </span><br><span class="line">|   -5 |  </span><br><span class="line">+------+  </span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">MySQL存储过程名字后面的“()”是必须的，即使没有一个参数，也需要“()”</span><br><span class="line">MySQL存储过程参数，不能在参数名称前加“@”，如：“@a int”。该创建存储过程语法在 MySQL中是错误的（在 SQL Server 中是正确的）。 MySQL 存储过程中的变量，不需要在变量名字前加“@”，虽然 MySQL 客户端用户变量要加个“@”。</span><br><span class="line">MySQL 存储过程的参数不能指定默认值。</span><br><span class="line">如果MySQL存储过程中包含多条MySQL语句，则需要 begin end 关键字。</span><br><span class="line">MySQL 存储过程中的每条语句的末尾，都要加上分号 “;”</span><br><span class="line">MySQL 存储过程中的注释：</span><br><span class="line">/*   </span><br><span class="line">这是个   </span><br><span class="line">多行 MySQL 注释。   </span><br><span class="line">*/</span><br><span class="line"><span class="built_in">declare</span> c int; -- 这是单行MySQL注释 （注意 -- 后至少要有一个空格）   </span><br><span class="line"><span class="keyword">if</span> a is null <span class="keyword">then</span> <span class="comment"># 这也是个单行MySQL注释   </span></span><br><span class="line"><span class="built_in">set</span> a = 0;   </span><br><span class="line">end <span class="keyword">if</span>;   </span><br><span class="line">...   </span><br><span class="line">end;</span><br><span class="line">不能在 MySQL 存储过程中使用“<span class="built_in">return</span>”关键字：</span><br><span class="line"><span class="built_in">set</span> c = a + b;   </span><br><span class="line">select c as sum;   </span><br><span class="line">/*   </span><br><span class="line"><span class="built_in">return</span> c; -- 不能在 MySQL 存储过程中使用。<span class="built_in">return</span>只能出现在函数中。   </span><br><span class="line">*/   </span><br><span class="line">end;</span><br><span class="line">调用 MySQL 存储过程时候，需要在过程名字后面加“()”，即使没有一个参数，也需要“()”</span><br><span class="line">call pr_no_param();</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">实例：批量添加数据（预制原始劵）</span><br><span class="line">/*</span><br><span class="line">* 预制原始券</span><br><span class="line">-- @author: lbw</span><br><span class="line">-- @date  : 2016-09-17</span><br><span class="line">-- @param : int - @ticketCount  - 要预制的券数量</span><br><span class="line">-- @<span class="built_in">return</span>: 成功返回:成功预制数量, 失败:返回具体信息</span><br><span class="line">-- @php调用: mysql_fetch_assoc(mysql_query(<span class="string">"CALL initTicket(100)"</span>));</span><br><span class="line">*/</span><br><span class="line">DELIMITER $$</span><br><span class="line">DROP PROCEDURE IF EXISTS `initTicket` $$</span><br><span class="line">CREATE PROCEDURE initTicket( IN ticketCount INT ) </span><br><span class="line">    BEGIN </span><br><span class="line">    DECLARE i INT DEFAULT 0;                  -- 计数器</span><br><span class="line">    DECLARE returnMsg VARCHAR(50) DEFAULT <span class="string">''</span>;   -- 返回值信息</span><br><span class="line">    DECLARE rowCount int DEFAULT 0;             -- 操作sql的时候影响行数</span><br><span class="line">    IF ticketCount &gt;= 10000 || ticketCount=0 THEN</span><br><span class="line">      SET returnMsg = <span class="string">'paramError'</span>;</span><br><span class="line">          SELECT returnMsg;</span><br><span class="line">    ELSE</span><br><span class="line">      outer_label:BEGIN</span><br><span class="line">      START TRANSACTION;</span><br><span class="line">      WHILE i &lt; ticketCount DO</span><br><span class="line">        SET i=i+1;</span><br><span class="line">        INSERT INTO `ticket_main`   (`ticket_status`,`ticket_add_time`) VALUES (0,now());</span><br><span class="line">        SELECT row_count() INTO rowCount;</span><br><span class="line">        IF rowCount&lt;=0 THEN</span><br><span class="line">            LEAVE outer_label;            </span><br><span class="line">        END IF;                 </span><br><span class="line">      END WHILE;</span><br><span class="line">      END outer_label;  -- 只要是在outer_label代码块内 任意位置 Leave outer_label,那么Leave后的代码将不再执行 </span><br><span class="line">      IF i=ticketCount THEN</span><br><span class="line">        COMMIT;</span><br><span class="line">        SET returnMsg = i;</span><br><span class="line">          ELSE</span><br><span class="line">        ROLLBACK;</span><br><span class="line">        SET returnMsg = <span class="string">'error'</span>;</span><br><span class="line">         END IF;</span><br><span class="line">      SELECT returnMsg;</span><br><span class="line">    END IF;</span><br><span class="line">END $$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line">--</span><br><span class="line">-- 存储过程-获取软装券</span><br><span class="line">-- @author: lbw</span><br><span class="line">-- @date  : 2016-09-17</span><br><span class="line">-- @param : varchar [oid]     - 微信用户唯一标识，从微信服务器获取</span><br><span class="line">-- @param : varchar [nickName]- 微信用户昵称</span><br><span class="line">-- @<span class="built_in">return</span>: 返回结果如果是return_number，代表成功抢购，如果是return_error代表抢购失败，事务已回滚</span><br><span class="line">-- @php调用: mysql_fetch_assoc(mysql_query(<span class="string">"CALL get_rzq('liangxifeng','梁胖')"</span>));</span><br><span class="line">--</span><br><span class="line">DELIMITER $$ </span><br><span class="line">DROP PROCEDURE IF EXISTS `get_rzq`$$</span><br><span class="line">CREATE PROCEDURE `get_rzq` (<span class="keyword">in</span> oid varchar(50), <span class="keyword">in</span> nickName varchar(50) CHARACTER SET utf8) -- character <span class="built_in">set</span> utf8 很重要，否则中文会乱码</span><br><span class="line">label_pro:BEGIN                                 -- label_pro自定义的，当在以下程序中需要<span class="built_in">exit</span>的时候，可以 LEAVE label_pro;</span><br><span class="line"><span class="built_in">declare</span> id int default 0;                       -- 软装券表主键id </span><br><span class="line"><span class="built_in">declare</span> userid int default 0;                   -- 微信用户表主键id</span><br><span class="line"><span class="built_in">declare</span> row_count int default 0;                -- 操作sql的时候影响行数</span><br><span class="line"><span class="built_in">declare</span> return_number varchar(50) default <span class="string">''</span>;   -- 抢购成功返回的券编号</span><br><span class="line"><span class="built_in">declare</span> sign int default 1;                     -- 回滚标识符，0：回滚</span><br><span class="line"><span class="built_in">declare</span> return_error int default 1;             -- 回滚后返回信息，如果是1</span><br><span class="line">START TRANSACTION;  </span><br><span class="line">SELECT rzq_id,rzq_number INTO id,return_number  FROM ecm_tmp_wechat_rzq WHERE rzq_status=0 ORDER BY rzq_id ASC LIMIT 1 FOR UPDATE;</span><br><span class="line">UPDATE ecm_tmp_wechat_rzq SET user_openid=oid,rzq_status=1,rzq_update_time=now() WHERE rzq_id=id;</span><br><span class="line"><span class="built_in">set</span> row_count = 0;</span><br><span class="line">SELECT ROW_COUNT() INTO row_count;</span><br><span class="line"><span class="keyword">if</span> row_count &gt; 0 <span class="keyword">then</span></span><br><span class="line">    SELECT user_id INTO userid FROM ecm_tmp_wechat_rzq_user WHERE user_openid=oid; </span><br><span class="line">    <span class="built_in">set</span> row_count=0;</span><br><span class="line">    <span class="built_in">set</span> names utf8;</span><br><span class="line">    -- 判断该用户今天是否成功抢购过券，如果没有則新加入到用户表一条记录，否则修改购买数量</span><br><span class="line">    <span class="keyword">if</span> userid = 0 <span class="keyword">then</span></span><br><span class="line">        INSERT INTO ecm_tmp_wechat_rzq_user (`user_openid`,`user_nickname`,`user_order_count`,`user_add_time`) VALUES (oid,nickName,1,now());</span><br><span class="line">        SELECT row_count() INTO row_count;</span><br><span class="line">        <span class="keyword">if</span> row_count != 1 <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">set</span> sign=0;</span><br><span class="line">        end <span class="keyword">if</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        UPDATE ecm_tmp_wechat_rzq_user SET user_order_count=user_order_count+1 WHERE user_openid=oid;</span><br><span class="line">        SELECT row_count() INTO row_count;</span><br><span class="line">        <span class="keyword">if</span> row_count &lt;= 0 <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">set</span> sign=0;</span><br><span class="line">        end <span class="keyword">if</span>;</span><br><span class="line">    end <span class="keyword">if</span>;   </span><br><span class="line">    -- 抢购成功，提交事务，返回编号</span><br><span class="line">    <span class="keyword">if</span> sign=1 <span class="keyword">then</span> </span><br><span class="line">        COMMIT;</span><br><span class="line">        SELECT return_number;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        ROLLBACK;</span><br><span class="line">        SELECT return_error;</span><br><span class="line">    end <span class="keyword">if</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    ROLLBACK;</span><br><span class="line">    SELECT return_error;</span><br><span class="line">end <span class="keyword">if</span>;</span><br><span class="line">END $$</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>饿了么接口——php</title>
      <link href="/2016/09/07/php-elm-interface/"/>
      <content type="html"><![CDATA[<h2 id="php-interface"><a href="#php-interface" class="headerlink" title="php_interface"></a>php_interface</h2><h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">首先要拿到两个参数</span><br><span class="line">consumer_key 对接饿了么开放平台的基本凭证，它代表的是一个品牌或个人实体。该品牌或个人的所有餐厅会关联在此key之下</span><br><span class="line">consumer_secret eleme分配给APP的consumer_key</span><br><span class="line">制作签名，直接看代码——makeSig2()</span><br><span class="line">发送http请求——sendHttp2();</span><br><span class="line">制作接口——提供了餐厅接口和订单接口的例子</span><br><span class="line">调接口——自己百度或谷歌去</span><br><span class="line">商家测试</span><br><span class="line">饿了么提供了以下体验店信息以供接口开发测试:</span><br><span class="line">consumer_key: 0170804777</span><br><span class="line">consumer_secret: 87217cb263701f90316236c4df00d9352fb1da76</span><br><span class="line">restaurant_id: 62028381</span><br><span class="line">restaurant_name: 饿了么开放平台测试</span><br><span class="line">餐厅下单测试地址: http://r.ele.me/openapi-test</span><br><span class="line">注意：如遇到 <span class="string">"测试餐厅必须与测试帐号一起使用"</span> 的错误提示，请清理cookie</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line">饿了吗接口,参考文档http://merchant.openapi.eleme.io/quickstart.html</span><br><span class="line">*/</span><br><span class="line">class ElemeAPI</span><br><span class="line">&#123;</span><br><span class="line">    const BASE_URL = <span class="string">'http://v2.openapi.ele.me/'</span>;</span><br><span class="line">    private <span class="variable">$consumer_key</span>;</span><br><span class="line">    private <span class="variable">$consumer_secret</span>;</span><br><span class="line">    /**</span><br><span class="line">     * 初始化接口类，必须两个参数，consumer_key,consumer_secret</span><br><span class="line">     * ElemeAPI constructor.</span><br><span class="line">     * @param <span class="variable">$sy_param</span>            [<span class="string">'consumer_key'</span>=&gt;<span class="string">''</span>,<span class="string">'consumer_secret'</span>=&gt;<span class="string">''</span>]</span><br><span class="line">     */</span><br><span class="line">    public <span class="keyword">function</span> __construct(<span class="variable">$sy_param</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;consumer_key = <span class="variable">$sy_param</span>[<span class="string">'consumer_key'</span>];</span><br><span class="line">        <span class="variable">$this</span>-&gt;consumer_secret=<span class="variable">$sy_param</span>[<span class="string">'consumer_secret'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">####################餐厅接口</span></span><br><span class="line">    /**</span><br><span class="line">     * 查询所属餐厅</span><br><span class="line">     * @<span class="built_in">return</span> mixed</span><br><span class="line">     */</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">getAllRestaurants</span></span>()&#123;</span><br><span class="line">        <span class="variable">$api_url</span>=<span class="string">'restaurant/own/'</span>;</span><br><span class="line">        <span class="variable">$sys_request</span> =[<span class="string">'consumer_key'</span>=&gt;<span class="variable">$this</span>-&gt;consumer_key,<span class="string">'timestamp'</span>=&gt;time()];</span><br><span class="line">        <span class="built_in">return</span> self::sendHttp2(<span class="variable">$api_url</span>,<span class="string">'GET'</span>,<span class="variable">$sys_request</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">function</span> getRestaurant(<span class="variable">$restaurant_id</span>)&#123;</span><br><span class="line">        <span class="variable">$api_url</span> = <span class="string">'restaurant/'</span>.<span class="variable">$restaurant_id</span>.<span class="string">'/'</span>;</span><br><span class="line">        <span class="variable">$sys_request</span> =[<span class="string">'consumer_key'</span>=&gt;<span class="variable">$this</span>-&gt;consumer_key,<span class="string">'timestamp'</span>=&gt;time()];</span><br><span class="line">        <span class="variable">$api_request</span> = array();</span><br><span class="line">        <span class="variable">$api_request</span>[<span class="string">'restaurant_id'</span>] = <span class="variable">$restaurant_id</span>;</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$this</span>-&gt;sendHttp2(<span class="variable">$api_url</span>,<span class="string">'GET'</span>,<span class="variable">$sys_request</span>,<span class="variable">$api_request</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">#################订单接口</span></span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * 获取订单详情</span><br><span class="line">     * @param <span class="variable">$eleme_order_id</span>        订单编号</span><br><span class="line">     * @param <span class="variable">$tp_id</span>                0=不显示第三方ID，1=显示第三方ID</span><br><span class="line">     * @<span class="built_in">return</span> mixed</span><br><span class="line">     */</span><br><span class="line">    <span class="keyword">function</span> getOrderDetail(<span class="variable">$eleme_order_id</span>,<span class="variable">$tp_id</span>=null)&#123;</span><br><span class="line">        <span class="variable">$api_url</span> = <span class="string">'order/'</span>.<span class="variable">$eleme_order_id</span>.<span class="string">'/'</span>;</span><br><span class="line">        <span class="variable">$sys_request</span> =[<span class="string">'consumer_key'</span>=&gt;<span class="variable">$this</span>-&gt;consumer_key,<span class="string">'timestamp'</span>=&gt;time()];</span><br><span class="line">        <span class="variable">$api_request</span> = array();</span><br><span class="line">        <span class="variable">$api_request</span>[<span class="string">'tp_id'</span>] = <span class="variable">$tp_id</span>;</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$this</span>-&gt;sendHttp2(<span class="variable">$api_url</span>,<span class="string">'GET'</span>,<span class="variable">$sys_request</span>,<span class="variable">$api_request</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * 取消订单</span><br><span class="line">     * @param <span class="variable">$eleme_order_id</span></span><br><span class="line">     * @param <span class="variable">$reason</span></span><br><span class="line">     * @<span class="built_in">return</span> mixed</span><br><span class="line">     */</span><br><span class="line">    <span class="keyword">function</span> cancelOrder(<span class="variable">$eleme_order_id</span>,<span class="variable">$reason</span>)&#123;</span><br><span class="line">        <span class="variable">$api_url</span> = <span class="string">'order/'</span>.<span class="variable">$eleme_order_id</span>.<span class="string">'/status/'</span>;</span><br><span class="line">        <span class="variable">$sys_request</span> =[<span class="string">'consumer_key'</span>=&gt;<span class="variable">$this</span>-&gt;consumer_key,<span class="string">'timestamp'</span>=&gt;time()];</span><br><span class="line">        <span class="variable">$api_request</span> =array();</span><br><span class="line">        <span class="variable">$api_request</span>[<span class="string">'status'</span>]=-1;</span><br><span class="line">        <span class="variable">$api_request</span>[<span class="string">'reason'</span>] = <span class="variable">$reason</span>;</span><br><span class="line">        <span class="variable">$res</span> = <span class="variable">$this</span>-&gt;sendHttp2(<span class="variable">$api_url</span>,<span class="string">'PUT'</span>,<span class="variable">$sys_request</span>,<span class="variable">$api_request</span>);</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$res</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * 确认订单</span><br><span class="line">     * @param <span class="variable">$eleme_order_id</span></span><br><span class="line">     * @<span class="built_in">return</span> mixed</span><br><span class="line">     */</span><br><span class="line">    <span class="keyword">function</span> confirmOrder(<span class="variable">$eleme_order_id</span>)&#123;</span><br><span class="line">        <span class="variable">$api_url</span> = <span class="string">'order/'</span>.<span class="variable">$eleme_order_id</span>.<span class="string">'/status/'</span>;</span><br><span class="line">        <span class="variable">$sys_request</span> =[<span class="string">'consumer_key'</span>=&gt;<span class="variable">$this</span>-&gt;consumer_key,<span class="string">'timestamp'</span>=&gt;time()];</span><br><span class="line">        <span class="variable">$api_request</span> =array();</span><br><span class="line">        <span class="variable">$api_request</span>[<span class="string">'status'</span>]=2;</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$this</span>-&gt;sendHttp2(<span class="variable">$api_url</span>,<span class="string">'PUT'</span>,<span class="variable">$sys_request</span>,<span class="variable">$api_request</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * 同意退单</span><br><span class="line">     * @param <span class="variable">$eleme_order_id</span></span><br><span class="line">     * @<span class="built_in">return</span> mixed</span><br><span class="line">     */</span><br><span class="line">    <span class="keyword">function</span> agreeRefund(<span class="variable">$eleme_order_id</span>)&#123;</span><br><span class="line">        <span class="variable">$api_url</span> = <span class="string">'order/'</span>.<span class="variable">$eleme_order_id</span>.<span class="string">'/agree_refund/'</span>;</span><br><span class="line">        <span class="variable">$sys_request</span> =[<span class="string">'consumer_key'</span>=&gt;<span class="variable">$this</span>-&gt;consumer_key,<span class="string">'timestamp'</span>=&gt;time()];</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$this</span>-&gt;sendHttp2(<span class="variable">$api_url</span>,<span class="string">'POST'</span>,<span class="variable">$sys_request</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * 不同意退单</span><br><span class="line">     * @param <span class="variable">$eleme_order_id</span></span><br><span class="line">     * @param null <span class="variable">$reason</span></span><br><span class="line">     * @<span class="built_in">return</span> mixed</span><br><span class="line">     */</span><br><span class="line">    <span class="keyword">function</span> disagreeRefund(<span class="variable">$eleme_order_id</span>,<span class="variable">$reason</span>=null)&#123;</span><br><span class="line">        <span class="variable">$api_url</span> = <span class="string">'order/'</span>.<span class="variable">$eleme_order_id</span>.<span class="string">'/disagree_refund/'</span>;</span><br><span class="line">        <span class="variable">$sys_request</span> =[<span class="string">'consumer_key'</span>=&gt;<span class="variable">$this</span>-&gt;consumer_key,<span class="string">'timestamp'</span>=&gt;time()];</span><br><span class="line">        <span class="variable">$api_request</span> =array();</span><br><span class="line">        <span class="variable">$api_request</span>[<span class="string">'reason'</span>]=<span class="variable">$reason</span>;</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$this</span>-&gt;sendHttp2(<span class="variable">$api_url</span>,<span class="string">'POST'</span>,<span class="variable">$sys_request</span>,<span class="variable">$api_request</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * 计算签名</span><br><span class="line">     * @param <span class="variable">$api_url</span>            指定接口url</span><br><span class="line">     * @param array <span class="variable">$params</span>        参数</span><br><span class="line">     * @<span class="built_in">return</span> string            返回签名</span><br><span class="line">     *</span><br><span class="line">     */</span><br><span class="line">    private <span class="keyword">function</span> makeSig(<span class="variable">$api_url</span>,<span class="variable">$params</span>=[])&#123;</span><br><span class="line">        //将所有参数（sig除外）按照参数名的字母顺序排序，并用 &amp; 连接:</span><br><span class="line">        <span class="keyword">if</span>(count(<span class="variable">$params</span>))&#123;</span><br><span class="line">            ksort(<span class="variable">$params</span>);</span><br><span class="line">            <span class="variable">$str_a</span> = http_build_query(<span class="variable">$params</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        var_dump(<span class="variable">$str_a</span>);</span><br><span class="line">        //按照请求url + ? + 字符串A + consumer_secret的顺序进行连接，得到 字符串B</span><br><span class="line">        <span class="variable">$str_b</span> = self::BASE_URL.<span class="variable">$api_url</span>.<span class="string">'?'</span>.<span class="variable">$str_a</span>.<span class="variable">$this</span>-&gt;consumer_secret;</span><br><span class="line">        var_dump(<span class="variable">$str_b</span>);</span><br><span class="line">        //对``字符串B``用UTF-8 Encode之后计算HEX值字符串（用HEX Encode），得到 字符串C:</span><br><span class="line">        <span class="variable">$str_c</span> =bin2hex(utf8_encode(<span class="variable">$str_b</span>));</span><br><span class="line">        var_dump(<span class="variable">$str_c</span>);</span><br><span class="line">        //对 字符串C 计算SHA1哈希，得到签名:</span><br><span class="line">        <span class="variable">$sig</span> = sha1(<span class="variable">$str_c</span>);</span><br><span class="line">        var_dump(<span class="variable">$sig</span>);</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$sig</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * @param <span class="variable">$api_url</span></span><br><span class="line">     * @param array <span class="variable">$params</span></span><br><span class="line">     * @<span class="built_in">return</span> string</span><br><span class="line">     */</span><br><span class="line">    private <span class="keyword">function</span> makeSig2(<span class="variable">$api_url</span>,<span class="variable">$params</span>=[])&#123;</span><br><span class="line">        ksort(<span class="variable">$params</span>);</span><br><span class="line">        <span class="variable">$pairs</span> = array();</span><br><span class="line">        foreach(<span class="variable">$params</span> as <span class="variable">$key</span>=&gt;<span class="variable">$val</span>) &#123;</span><br><span class="line">            array_push(<span class="variable">$pairs</span>, <span class="variable">$key</span> . <span class="string">'='</span> . urlencode(<span class="variable">$val</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$params</span> = join(<span class="string">'&amp;'</span>, <span class="variable">$pairs</span>);</span><br><span class="line">        //var_dump(<span class="variable">$params</span>);</span><br><span class="line">        <span class="variable">$str</span> = self::BASE_URL.<span class="variable">$api_url</span>.<span class="string">'?'</span>.<span class="variable">$params</span>.<span class="variable">$this</span>-&gt;consumer_secret;</span><br><span class="line">        <span class="variable">$sig</span> = sha1(bin2hex(<span class="variable">$str</span>));</span><br><span class="line">        //var_dump(<span class="variable">$sig</span>);</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$sig</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * @param <span class="variable">$api_url</span></span><br><span class="line">     * @param <span class="variable">$method</span></span><br><span class="line">     * @param array <span class="variable">$sys_request</span>                系统级参数</span><br><span class="line">     * @param array <span class="variable">$api_request</span>                API级参数 可以为空</span><br><span class="line">     * @<span class="built_in">return</span> mixed</span><br><span class="line">     */</span><br><span class="line">    private <span class="keyword">function</span> sendHttp2(<span class="variable">$api_url</span>,<span class="variable">$method</span>,<span class="variable">$sys_request</span>=[],<span class="variable">$api_request</span>=null)&#123;</span><br><span class="line">        <span class="keyword">if</span>(count(<span class="variable">$api_request</span>))&#123;</span><br><span class="line">            //如果有API级参数</span><br><span class="line">            <span class="variable">$api_request</span> = array_filter(<span class="variable">$api_request</span>);            //删除数组中的空值</span><br><span class="line">            <span class="variable">$params</span> = array_merge(<span class="variable">$sys_request</span>,<span class="variable">$api_request</span>);    //API级参数与系统及参数合并得到完整的参数</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$params</span> = <span class="variable">$sys_request</span>;                                //系统级参数就是完整参数</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$sig</span> = <span class="variable">$this</span>-&gt;makeSig2(<span class="variable">$api_url</span>,<span class="variable">$params</span>);</span><br><span class="line">        <span class="variable">$method</span> = strtoupper(<span class="variable">$method</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$method</span>==<span class="string">'GET'</span>)&#123;</span><br><span class="line">            //如果是get方式传参</span><br><span class="line">            <span class="variable">$params</span>[<span class="string">'sig'</span>] = <span class="variable">$sig</span>;</span><br><span class="line">            <span class="variable">$url</span> = self::BASE_URL.<span class="variable">$api_url</span>.<span class="string">'?'</span>.http_build_query(<span class="variable">$params</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            //如果是其他方式传参，将系统级参数和签名sig，加入到url中即可</span><br><span class="line">            <span class="variable">$sys_request</span>[<span class="string">'sig'</span>] = <span class="variable">$sig</span>;</span><br><span class="line">            <span class="variable">$url</span> = self::BASE_URL.<span class="variable">$api_url</span>.<span class="string">'?'</span>.http_build_query(<span class="variable">$sys_request</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        //var_dump(<span class="variable">$url</span>);</span><br><span class="line">        <span class="variable">$ch</span> = curl_init();</span><br><span class="line">        <span class="variable">$header</span> = array(</span><br><span class="line">                <span class="string">"Content-Type:application/x-www-form-urlencoded; charset=UTF-8"</span></span><br><span class="line">        );</span><br><span class="line">        // 添加apikey到header</span><br><span class="line">        <span class="variable">$api_request</span> = count(<span class="variable">$api_request</span>)&gt;0? http_build_query(<span class="variable">$api_request</span>) :<span class="variable">$api_request</span>;</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_HTTPHEADER  , <span class="variable">$header</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, 1);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span> , CURLOPT_URL , <span class="variable">$url</span>);</span><br><span class="line">        switch(<span class="variable">$method</span>)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'GET'</span>:</span><br><span class="line">                curl_setopt(<span class="variable">$ch</span>,CURLOPT_HTTPGET,<span class="literal">true</span>);</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'POST'</span>:</span><br><span class="line">                curl_setopt(<span class="variable">$ch</span>,CURLOPT_POST,<span class="literal">true</span>);</span><br><span class="line">                curl_setopt(<span class="variable">$ch</span>,CURLOPT_POSTFIELDS,<span class="variable">$api_request</span>);</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'PUT'</span>:</span><br><span class="line">                curl_setopt(<span class="variable">$ch</span>,CURLOPT_CUSTOMREQUEST,<span class="string">'PUT'</span>);</span><br><span class="line">                curl_setopt(<span class="variable">$ch</span>,CURLOPT_POSTFIELDS,<span class="variable">$api_request</span>);</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'DELETE'</span>:</span><br><span class="line">                curl_setopt(<span class="variable">$ch</span>,CURLOPT_CUSTOMREQUEST,<span class="string">'DELETE'</span>);</span><br><span class="line">                curl_setopt(<span class="variable">$ch</span>,CURLOPT_POSTFIELDS,<span class="variable">$api_request</span>);</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        // 执行HTTP请求</span><br><span class="line">        <span class="variable">$res</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">    </span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$res</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> interface </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>thinkphp数据库操作</title>
      <link href="/2016/09/07/thinkphp-db-cz/"/>
      <content type="html"><![CDATA[<h2 id="Database-Operations"><a href="#Database-Operations" class="headerlink" title="Database Operations"></a>Database Operations</h2><h3 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">按照系统的规范来命名模型类的话，大多数情况下是可以用模型的名字自动对应数据表</span><br><span class="line">模型类的命名规则是除去表前缀的数据表名称，采用驼峰法命名，并且首字母大写，然后加上模型层的名称（默认定义是Model），例如：</span><br><span class="line">模型名           约定对应数据表（假设数据库的前缀定义是 think_）</span><br><span class="line">UserModel        think_user</span><br><span class="line">UserTypeModel    think_user_type</span><br><span class="line">如果规则和上面的系统约定不符合，那么需要设置Model类对应的数据表名称，可以通过模型对象调用table方法指定数据库表名，以确保能够找到对应的数据表。</span><br><span class="line">thinkphp是通过数据模型实例化对象来操作对应的数据表的，对于模型类并非必须要创建对应的类，只有当存在独立的业务逻辑或者属性的时候才需要定义。</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="直接实例化"><a href="#直接实例化" class="headerlink" title="直接实例化"></a>直接实例化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">可以和实例化其他类库一样实例化模型类，例如：</span><br><span class="line"><span class="variable">$User</span> = new \Home\Model\UserModel();</span><br><span class="line"><span class="variable">$Info</span> = new \Admin\Model\InfoModel();</span><br><span class="line">// 带参数实例化</span><br><span class="line"><span class="variable">$New</span>  = new \Home\Model\NewModel(<span class="string">'blog'</span>,<span class="string">'think_'</span>,<span class="variable">$connection</span>)</span><br></pre></td></tr></table></figure><h3 id="快速实例化"><a href="#快速实例化" class="headerlink" title="快速实例化"></a>快速实例化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">M(<span class="string">'[基础模型名:]模型名'</span>,[<span class="string">'数据表前缀'</span>],[<span class="string">'数据库连接信息'</span>])</span><br><span class="line">一般只需要传第一个参数，后两个参数基本上不写，因为会在配置文件中写</span><br><span class="line">D方法实例化模型类的时候通常是实例化某个具体的模型类，如果仅仅是对数据表进行基本的CURD操作的话，使用M方法实例化的话，由于不需要加载具体的模型类，所以性能会更高。</span><br><span class="line">eg:</span><br><span class="line">// 使用M方法实例化</span><br><span class="line">//参数：数据表名，不包括数据表前缀</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">'User'</span>);</span><br><span class="line">// 和用法 <span class="variable">$User</span> = new \Think\Model(<span class="string">'User'</span>); 等效</span><br><span class="line">// 执行其他的数据操作</span><br><span class="line"><span class="variable">$User</span>-&gt;select();</span><br><span class="line">M方法也可以支持跨库操作，eg：</span><br><span class="line">// 使用M方法实例化 操作db_name数据库的ot_user表</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">'db_name.User'</span>,<span class="string">'ot_'</span>);</span><br><span class="line">// 执行其他的数据操作</span><br><span class="line"><span class="variable">$User</span>-&gt;select();</span><br><span class="line">如果模型类有自己的业务逻辑，M方法是无法支持的，就算是已经定义了具体的模型类，M方法实例化的时候是会直接忽略。</span><br><span class="line">D方法</span><br><span class="line">D(<span class="string">'[项目://][分组/]模型'</span>,<span class="string">'模型层名称'</span>)</span><br><span class="line">方法的返回值是实例化的模型对象</span><br><span class="line">//实例化模型</span><br><span class="line"><span class="variable">$User</span> = D(<span class="string">'User'</span>);</span><br><span class="line">// 相当于 <span class="variable">$User</span> = new \Home\Model\UserModel();</span><br><span class="line">// 执行具体的数据操作</span><br><span class="line"><span class="variable">$User</span>-&gt;select();</span><br><span class="line">//D方法还可以支持跨模块调用，需要使用：</span><br><span class="line">//实例化Admin模块的User模型(admin是默认的home目录等级的)</span><br><span class="line">D(<span class="string">'Admin/User'</span>);</span><br></pre></td></tr></table></figure><h3 id="实例化空模型类"><a href="#实例化空模型类" class="headerlink" title="实例化空模型类"></a>实例化空模型类</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">如果仅仅是使用原生SQL查询的话，不需要使用额外的模型类，实例化一个空模型类即可进行操作了，eg：</span><br><span class="line">//实例化空模型，Model是TP框架提供Model基类</span><br><span class="line"><span class="variable">$Model</span> = new Model();</span><br><span class="line">//或者使用M快捷方法是等效的</span><br><span class="line"><span class="variable">$Model</span> = M();</span><br><span class="line">//进行原生的SQL查询</span><br><span class="line"><span class="variable">$Model</span>-&gt;query(<span class="string">'SELECT * FROM think_user WHERE status = 1'</span>);</span><br><span class="line">实例化空模型类后还可以用table方法切换到具体的数据表进行操作</span><br></pre></td></tr></table></figure><h3 id="数据的写入"><a href="#数据的写入" class="headerlink" title="数据的写入"></a>数据的写入</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">向user数据表中写入一条数据</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象,user是表名</span><br><span class="line"><span class="variable">$data</span>[<span class="string">'name'</span>] = <span class="string">'ThinkPHP'</span>;</span><br><span class="line"><span class="variable">$data</span>[<span class="string">'email'</span>] = <span class="string">'ThinkPHP@gmail.com'</span>;</span><br><span class="line"><span class="variable">$User</span>-&gt;add(<span class="variable">$data</span>);</span><br></pre></td></tr></table></figure><h3 id="数据的查询"><a href="#数据的查询" class="headerlink" title="数据的查询"></a>数据的查询</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">读取数据集一</span><br><span class="line">读取数据表中的一行数据（或者关联数据），主要通过find方法完成，eg：</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line">// 查找status值为1 name值为think的用户数据 </span><br><span class="line">//<span class="built_in">where</span>方法的参数可以是数组、字符串、对象，建议用数组形式</span><br><span class="line"><span class="variable">$data</span> = <span class="variable">$User</span>-&gt;<span class="built_in">where</span>(<span class="string">'status=1 AND name="thinkphp"'</span>)-&gt;find();</span><br><span class="line">dump(<span class="variable">$data</span>);</span><br><span class="line">find方法查询数据的时候可以配合相关的连贯操作方法，其中最关键的则是<span class="built_in">where</span>方法。</span><br><span class="line">如果查询出错，find方法返回<span class="literal">false</span>，如果查询结果为空返回NULL，查询成功则返回一个关联数组（键值是字段名或者别名）。</span><br><span class="line">即使满足条件的数据不止一个，find方法也只会返回第一条记录（可以通过order方法排序后查询）。</span><br><span class="line">还可以用data方法获取查询后的数据对象（查询成功后）</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line">// 查找status值为1name值为think的用户数据 </span><br><span class="line"><span class="variable">$User</span>-&gt;<span class="built_in">where</span>(<span class="string">'status=1 AND name="thinkphp"'</span>)-&gt;find();</span><br><span class="line">dump(<span class="variable">$User</span>-&gt;data());</span><br><span class="line">读取数据集二</span><br><span class="line">读取数据集其实就是获取数据表中的多行记录（以及关联数据），使用select方法，eg：</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line">// 查找status值为1的用户数据 以创建时间排序 返回10条数据</span><br><span class="line"><span class="variable">$list</span> = <span class="variable">$User</span>-&gt;<span class="built_in">where</span>(<span class="string">'status=1'</span>)-&gt;order(<span class="string">'create_time'</span>)-&gt;<span class="built_in">limit</span>(10)-&gt;select();</span><br><span class="line">如果查询出错，select的返回值是<span class="literal">false</span>，如果查询结果为空，则返回NULL，否则返回二维数组。</span><br><span class="line">读取数据集三</span><br><span class="line">读取字段值其实就是获取数据表中的某个列的多个或者单个数据，最常用的方法是 getField方法。</span><br><span class="line">eg：</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line">// 获取ID为3的用户的昵称 </span><br><span class="line"><span class="variable">$nickname</span> = <span class="variable">$User</span>-&gt;<span class="built_in">where</span>(<span class="string">'id=3'</span>)-&gt;getField(<span class="string">'nickname'</span>);</span><br><span class="line">默认情况下：当只有一个字段的时候，返回数据表中满足条件的数据集的第一行的该字段的值。</span><br><span class="line">如果需要返回整个列的数据，可以用：</span><br><span class="line"><span class="variable">$User</span>-&gt;getField(<span class="string">'id'</span>,<span class="literal">true</span>); // 获取id数组</span><br><span class="line">//返回数据格式如array(1,2,3,4,5)一维数组，其中value就是id列的每行的值</span><br><span class="line">如果传入多个字段的话，默认返回一个关联数组：</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line">// 获取所有用户的ID和昵称列表 </span><br><span class="line"><span class="variable">$list</span> = <span class="variable">$User</span>-&gt;getField(<span class="string">'id,nickname'</span>);</span><br><span class="line">//两个字段的情况下返回的是array(`id`=&gt;`nickname`)的关联数组，以id的值为key，nickname字段值为value</span><br><span class="line">这样返回的list是一个数组，键名是用户的id字段的值，键值是用户的昵称nickname。</span><br><span class="line">如果传入多个字段的名称，eg：</span><br><span class="line"><span class="variable">$list</span> = <span class="variable">$User</span>-&gt;getField(<span class="string">'id,nickname,email'</span>);</span><br><span class="line">//返回的数组格式是array(id=&gt;array(id=&gt;value,nickname=&gt;value,email=&gt;value))是一个二维数组，key还是id字段的值，但value是整行的array数组，类似于select()方法的结果遍历将id的值设为数组key（准确的说是getField方法的第一个字段名）。</span><br><span class="line">如果传入一个字符串分隔符：<span class="variable">$list</span> = <span class="variable">$User</span>-&gt;getField(<span class="string">'id,nickname,email'</span>,<span class="string">':'</span>);</span><br><span class="line">那么返回的结果就是一个数组，键名是用户id，键值是 nickname:email的输出字符串。</span><br><span class="line">getField方法还可以支持限制数量，eg：</span><br><span class="line"><span class="variable">$this</span>-&gt;getField(<span class="string">'id,name'</span>,5); // 限制返回5条记录</span><br><span class="line"><span class="variable">$this</span>-&gt;getField(<span class="string">'id'</span>,3); // 获取id数组 限制3条记录</span><br><span class="line">可以配合使用order方法使用。</span><br></pre></td></tr></table></figure><h3 id="数据的更新"><a href="#数据的更新" class="headerlink" title="数据的更新"></a>数据的更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">更新一条或多条记录用save</span><br><span class="line">更新数据使用save方法，eg：</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line">// 要修改的数据对象属性赋值</span><br><span class="line"><span class="variable">$data</span>[<span class="string">'name'</span>] = <span class="string">'ThinkPHP'</span>;</span><br><span class="line"><span class="variable">$data</span>[<span class="string">'email'</span>] = <span class="string">'ThinkPHP@gmail.com'</span>;</span><br><span class="line"><span class="variable">$User</span>-&gt;<span class="built_in">where</span>(<span class="string">'id=5'</span>)-&gt;save(<span class="variable">$data</span>); // 根据条件更新记录</span><br><span class="line">也可以改成对象方式来操作：</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line">// 要修改的数据对象属性赋值</span><br><span class="line"><span class="variable">$User</span>-&gt;name = <span class="string">'ThinkPHP'</span>;</span><br><span class="line"><span class="variable">$User</span>-&gt;email = <span class="string">'ThinkPHP@gmail.com'</span>;</span><br><span class="line"><span class="variable">$User</span>-&gt;<span class="built_in">where</span>(<span class="string">'id=5'</span>)-&gt;save(); // 根据条件更新记录</span><br><span class="line">数据对象赋值的方式，save方法无需传入数据，会自动识别</span><br><span class="line">注意：save方法的返回值是影响的记录数，如果返回<span class="literal">false</span>则表示更新出错，因此一定要用恒等来判断是否更新失败</span><br><span class="line">为了保证数据库的安全，避免出错更新整个数据表，如果没有任何更新条件或者数据对象本身也不包含主键字段的话，save方法不会更新任何数据库的记录</span><br><span class="line">因此下面的代码不会更改数据库的任何记录</span><br><span class="line"><span class="variable">$User</span>-&gt;save(<span class="variable">$data</span>);</span><br><span class="line">要修改的数据必须要有条件或者主键</span><br><span class="line">除非使用下面的方式（假如id字段是主键）：</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line">// 要修改的数据对象属性赋值</span><br><span class="line"><span class="variable">$data</span>[<span class="string">'id'</span>] = 5;  //要修改的数据必须要有条件或者主键</span><br><span class="line"><span class="variable">$data</span>[<span class="string">'name'</span>] = <span class="string">'ThinkPHP'</span>;</span><br><span class="line"><span class="variable">$data</span>[<span class="string">'email'</span>] = <span class="string">'ThinkPHP@gmail.com'</span>;</span><br><span class="line"><span class="variable">$User</span>-&gt;save(<span class="variable">$data</span>); // 根据条件保存修改的数据</span><br><span class="line">字段和数据过滤</span><br><span class="line">和add方法一样，save方法支持使用field方法过滤字段和filter方法过滤数据，eg：</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line">// 要修改的数据对象属性赋值</span><br><span class="line"><span class="variable">$data</span>[<span class="string">'name'</span>] = <span class="string">'test'</span>;</span><br><span class="line"><span class="variable">$data</span>[<span class="string">'email'</span>] = <span class="string">'&lt;b&gt;test@gmail.com&lt;/b&gt;'</span>;</span><br><span class="line">//field方法用于指定要修改的的字段</span><br><span class="line">//strip_tags：过滤HTML标签</span><br><span class="line"><span class="variable">$User</span>-&gt;<span class="built_in">where</span>(<span class="string">'id=5'</span>)-&gt;field(<span class="string">'email'</span>)-&gt;filter(<span class="string">'strip_tags'</span>)-&gt;save(<span class="variable">$data</span>); // 根据条件保存修改的数据</span><br><span class="line">当使用field(<span class="string">'email'</span>)的时候，只允许更新email字段的值（采用strip_tags方法过滤），name字段的值将不会被修改。</span><br><span class="line">还有一种方法是通过create或者data方法创建要更新的数据对象，然后进行保存操作，这样save方法的参数可以不需要传入。</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line">// 要修改的数据对象属性赋值</span><br><span class="line"><span class="variable">$data</span>[<span class="string">'name'</span>] = <span class="string">'ThinkPHP'</span>;</span><br><span class="line"><span class="variable">$data</span>[<span class="string">'email'</span>] = <span class="string">'ThinkPHP@gmail.com'</span>;</span><br><span class="line"><span class="variable">$User</span>-&gt;<span class="built_in">where</span>(<span class="string">'id=5'</span>)-&gt;data(<span class="variable">$data</span>)-&gt;save(); // 根据条件保存修改的数据</span><br><span class="line">使用create方法的例子：</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line">// 根据表单提交的POST数据创建数据对象</span><br><span class="line"><span class="variable">$User</span>-&gt;create();</span><br><span class="line"><span class="variable">$User</span>-&gt;save(); // 根据条件保存修改的数据</span><br><span class="line">更新字段</span><br><span class="line">如果只是更新个别字段的值，可以使用setField方法。</span><br><span class="line">使用示例：</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line">// 更改用户的name值</span><br><span class="line"><span class="variable">$User</span>-&gt; <span class="built_in">where</span>(<span class="string">'id=5'</span>)-&gt;setField(<span class="string">'name'</span>,<span class="string">'ThinkPHP'</span>);</span><br><span class="line">setField方法支持同时更新多个字段，只需要传入数组即可，eg：</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line">// 更改用户的name和email的值</span><br><span class="line"><span class="variable">$data</span> = array(<span class="string">'name'</span>=&gt;<span class="string">'ThinkPHP'</span>,<span class="string">'email'</span>=&gt;<span class="string">'ThinkPHP@gmail.com'</span>);</span><br><span class="line"><span class="variable">$User</span>-&gt; <span class="built_in">where</span>(<span class="string">'id=5'</span>)-&gt;setField(<span class="variable">$data</span>);</span><br><span class="line">而对于统计字段（通常指的是数字类型）的更新，系统还提供了setInc和setDec方法</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line"><span class="variable">$User</span>-&gt;<span class="built_in">where</span>(<span class="string">'id=5'</span>)-&gt;setInc(<span class="string">'score'</span>,3); // 用户的积分加3</span><br><span class="line"><span class="variable">$User</span>-&gt;<span class="built_in">where</span>(<span class="string">'id=5'</span>)-&gt;setInc(<span class="string">'score'</span>); // 用户的积分加1</span><br><span class="line"><span class="variable">$User</span>-&gt;<span class="built_in">where</span>(<span class="string">'id=5'</span>)-&gt;setDec(<span class="string">'score'</span>,5); // 用户的积分减5</span><br><span class="line"><span class="variable">$User</span>-&gt;<span class="built_in">where</span>(<span class="string">'id=5'</span>)-&gt;setDec(<span class="string">'score'</span>); // 用户的积分减1</span><br><span class="line">3.2.3版本开始，setInc和setDec方法支持延迟更新，用法如下：</span><br><span class="line"><span class="variable">$Article</span> = M(<span class="string">"Article"</span>); // 实例化Article对象</span><br><span class="line"><span class="variable">$Article</span>-&gt;<span class="built_in">where</span>(<span class="string">'id=5'</span>)-&gt;setInc(<span class="string">'view'</span>,1); // 文章阅读数加1</span><br><span class="line"><span class="variable">$Article</span>-&gt;<span class="built_in">where</span>(<span class="string">'id=5'</span>)-&gt;setInc(<span class="string">'view'</span>,1,60); // 文章阅读数加1，并且延迟60秒更新（写入）</span><br></pre></td></tr></table></figure><h3 id="数据的删除"><a href="#数据的删除" class="headerlink" title="数据的删除"></a>数据的删除</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">删除数据使用delete方法，eg：</span><br><span class="line"><span class="variable">$Form</span> = M(<span class="string">'Form'</span>);</span><br><span class="line"><span class="variable">$Form</span>-&gt;delete(5);</span><br><span class="line">表示删除主键为5的数据，delete方法可以删除单个数据，也可以删除多个数据，这取决于删除条件，eg：</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line"><span class="variable">$User</span>-&gt;<span class="built_in">where</span>(<span class="string">'id=5'</span>)-&gt;delete(); // 删除id为5的用户数据</span><br><span class="line"><span class="variable">$User</span>-&gt;delete(<span class="string">'1,2,5'</span>); // 删除主键为1,2和5的用户数据</span><br><span class="line"><span class="variable">$User</span>-&gt;<span class="built_in">where</span>(<span class="string">'status=0'</span>)-&gt;delete(); // 删除所有状态为0的用户数据</span><br><span class="line">delete方法的返回值是删除的记录数，如果返回值是<span class="literal">false</span>则表示SQL出错，返回值如果为0表示没有删除任何数据。</span><br><span class="line">也可以用order和<span class="built_in">limit</span>方法来限制要删除的个数，eg：</span><br><span class="line">// 删除所有状态为0的5 个用户数据 按照创建时间排序</span><br><span class="line"><span class="variable">$User</span>-&gt;<span class="built_in">where</span>(<span class="string">'status=0'</span>)-&gt;order(<span class="string">'create_time'</span>)-&gt;<span class="built_in">limit</span>(<span class="string">'5'</span>)-&gt;delete();</span><br><span class="line">为了避免错删数据，如果没有传入任何条件进行删除操作的话，不会执行删除操作，eg：</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line"><span class="variable">$User</span>-&gt;delete();</span><br><span class="line">不会删除任何数据，如果确实要删除所有的记录，除非使用下面的方式：</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line"><span class="variable">$User</span>-&gt;<span class="built_in">where</span>(<span class="string">'1'</span>)-&gt;delete();</span><br></pre></td></tr></table></figure><h3 id="经典函数用法"><a href="#经典函数用法" class="headerlink" title="经典函数用法"></a>经典函数用法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">A 函数：实例化控制器</span><br><span class="line">R 函数：直接调用控制器的操作方法</span><br><span class="line">C 函数：设置和获取配置参数</span><br><span class="line">L 函数：设置和获取语言变量</span><br><span class="line">D 函数：实例化模型</span><br><span class="line">M 函数：实例化模型（无需定义模型类）</span><br><span class="line">N 函数：计数器</span><br><span class="line">G 函数：调试统计</span><br><span class="line">U 函数：URL地址生成</span><br><span class="line">I 函数：安全获取系统输入变量</span><br><span class="line">S 函数：缓存设置和存取</span><br><span class="line">F 函数：快速缓存设置和存取</span><br><span class="line">session函数：Session操作</span><br><span class="line">cookie函数：Cookie操作</span><br><span class="line">import函数：类库导入</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> thinkphp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>thinkphp笔记</title>
      <link href="/2016/09/07/thinkphp-bj/"/>
      <content type="html"><![CDATA[<h2 id="thinkphp-notes"><a href="#thinkphp-notes" class="headerlink" title="thinkphp notes"></a>thinkphp notes</h2><h3 id="模块化设计"><a href="#模块化设计" class="headerlink" title="模块化设计"></a>模块化设计</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">应用:基于同一个入口文件访问的项目我们称之为一个应用</span><br><span class="line">模块:一个应用下面可以包含多个模块，每个模块在应用目录下面都是一个独立的子目录</span><br><span class="line">控制器:每个模块可以包含多个控制器，一个控制器通常体现为一个控制器类</span><br><span class="line">操作:每个控制器类可以包含多个操作方法，也可能是绑定的某个操作类，每个操作是URL访问的最小单元</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="应用目录"><a href="#应用目录" class="headerlink" title="应用目录"></a>应用目录</h3><p><img src="thinkphp_ml.png" alt="thinkphp_ml"></p><h3 id="URL模式"><a href="#URL模式" class="headerlink" title="URL模式"></a>URL模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">普通模式 0 eg:http://localhost/?m=home&amp;c=user&amp;a=login&amp;var=value m参数表示模块，c参数表示控制器，a参数表示操作（当然这些参数都是可以配置的），后面的表示其他GET参数</span><br><span class="line">PATHINFO模式 1 eg:http://localhost/index.php/home/user/login/var/value/PATHINFO地址的前三个参数分别表示模块/控制器/操作   // 更改PATHINFO参数分隔符<span class="string">'URL_PATHINFO_DEPR'</span>=&gt;<span class="string">'-'</span>,</span><br><span class="line">REWRITE模式 2</span><br><span class="line">兼容模式 3</span><br></pre></td></tr></table></figure><h3 id="前置和后置操作-类似高级语言面向对象中的构造函数（前置）与析构函数（后置）"><a href="#前置和后置操作-类似高级语言面向对象中的构造函数（前置）与析构函数（后置）" class="headerlink" title="前置和后置操作{类似高级语言面向对象中的构造函数（前置）与析构函数（后置）}"></a>前置和后置操作{类似高级语言面向对象中的构造函数（前置）与析构函数（后置）}</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">系统会检测当前操作是否具有前置和后置操作，如果存在就会按照顺序执行，前置和后置操作的定义方式如下：</span><br><span class="line">class IndexController extends Controller&#123;</span><br><span class="line">    //前置操作方法</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">_before_index</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">'before&lt;br/&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">index</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">'index&lt;br/&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    //后置操作方法</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">_after_index</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">'after&lt;br/&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">需要注意的是，在有些方法里面使用了<span class="built_in">exit</span>或者错误输出之类的话,有可能不会会再执行后置方法了。例如，如果在当前操作里面调用了控制器类的error方法，那么将不会再执行后置操作，但是不影响success方法的后置方法执行。</span><br></pre></td></tr></table></figure><h3 id="success和error方法"><a href="#success和error方法" class="headerlink" title="success和error方法"></a>success和error方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">一般形式：success(<span class="variable">$message</span>,<span class="variable">$error</span>,<span class="variable">$waitSecond</span>)或error(<span class="variable">$message</span>,<span class="variable">$error</span>,<span class="variable">$waitSecond</span>)  默认的等待时间success方法是1秒，error方法是3秒</span><br><span class="line"><span class="variable">$message</span> 页面提示信息</span><br><span class="line"><span class="variable">$error</span> 页面错误提示信息</span><br><span class="line"><span class="variable">$waitSecond</span> 跳转等待时间 单位为秒</span><br><span class="line"><span class="variable">$jumpUrl</span> 跳转页面地址</span><br><span class="line">eg:</span><br><span class="line">public <span class="keyword">function</span> showid(<span class="variable">$id</span>=0)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$id</span>===0)&#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;error(<span class="string">'操作失败'</span>,<span class="string">'./Index/index'</span>,1);</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">"This is PostController's showid method!The ID is "</span>.<span class="variable">$id</span>.<span class="string">"."</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Controller类的redirect方法可以实现页面的重定向功能</span><br><span class="line">redirect方法的参数用法和U函数的用法一致</span><br><span class="line">eg://重定向到New模块的Category操作 <span class="variable">$this</span>-&gt;redirect(<span class="string">'New/category'</span>, array(<span class="string">'cate_id'</span> =&gt; 2), 5, <span class="string">'页面跳转中...'</span>);</span><br><span class="line">如果仅仅是想重定向要一个指定的URL地址，而不是到某个模块的操作方法，可以直接使用redirect函数重定向，eg：//重定向到指定的URL地址 redirect(<span class="string">'/New/category/cate_id/2'</span>, 5, <span class="string">'页面跳转中...'</span>)//Redirect函数的第一个参数是一个URL地址</span><br><span class="line">控制器的redirect方法和redirect函数的区别在于前者是用URL规则定义跳转地址，后者是一个纯粹的URL地址</span><br></pre></td></tr></table></figure><h3 id="请求类型"><a href="#请求类型" class="headerlink" title="请求类型"></a>请求类型</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">常量                 说明</span><br><span class="line">IS_GET          判断是否是GET方式提交</span><br><span class="line">IS_POST         判断是否是POST方式提交</span><br><span class="line">IS_PUT          判断是否是PUT方式提交</span><br><span class="line">IS_DELETE       判断是否是DELETE方式提交</span><br><span class="line">IS_AJAX         判断是否是AJAX提交</span><br><span class="line">REQUEST_METHOD  当前提交类型</span><br></pre></td></tr></table></figure><h3 id="连贯操作（数据库操作）"><a href="#连贯操作（数据库操作）" class="headerlink" title="连贯操作（数据库操作）"></a>连贯操作（数据库操作）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">系统支持的连贯操作方法有：</span><br><span class="line">连贯操作作用                                  支持的参数类型</span><br><span class="line"><span class="built_in">where</span>*用于查询或者更新条件的定义                字符串、数组和对象</span><br><span class="line">table用于定义要操作的数据表名称                字符串和数组</span><br><span class="line"><span class="built_in">alias</span>用于给当前数据表定义别名                字符串</span><br><span class="line">data用于新增或者更新数据之前的数据对象赋值    数组和对象</span><br><span class="line">field用于定义要查询的字段（支持字段排除）    字符串和数组</span><br><span class="line">order用于对结果排序                            字符串和数组</span><br><span class="line"><span class="built_in">limit</span>用于限制查询结果数量                    字符串和数字</span><br><span class="line">page用于查询分页（内部会转换成<span class="built_in">limit</span>）        字符串和数字</span><br><span class="line">group用于对查询的group支持                    字符串</span><br><span class="line">having用于对查询的having支持                    字符串</span><br><span class="line">join*用于对查询的join支持                    字符串和数组</span><br><span class="line">union*用于对查询的union支持                    字符串、数组和对象</span><br><span class="line">distinct用于查询的distinct支持                    布尔值</span><br><span class="line">lock用于数据库的锁机制                        布尔值</span><br><span class="line">cache用于查询缓存支持                        多个参数</span><br><span class="line">relation用于关联查询（需要关联模型支持）        字符串</span><br><span class="line">result用于返回数据转换                        字符串</span><br><span class="line">validate用于数据自动验证                        数组</span><br><span class="line">auto用于数据自动完成                        数组</span><br><span class="line">filter用于数据过滤                            字符串</span><br><span class="line">scope*用于命名范围                            字符串、数组</span><br><span class="line"><span class="built_in">bind</span>*用于数据绑定操作                        数组或多个参数</span><br><span class="line">token用于令牌验证                            布尔值</span><br><span class="line">comment用于SQL注释                                字符串</span><br><span class="line">index用于数据集的强制索引（3.2.3新增）        字符串</span><br><span class="line">strict用于数据入库的严格检测（3.2.3新增）        布尔值</span><br><span class="line">所有的连贯操作都返回当前的模型实例对象（this），其中带*标识的表示支持多次调用。</span><br></pre></td></tr></table></figure><h3 id="where"><a href="#where" class="headerlink" title="where"></a>where</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">字符串</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line"><span class="variable">$User</span>-&gt;<span class="built_in">where</span>(<span class="string">'type=1 AND status=1'</span>)-&gt;select();</span><br><span class="line">相当于：SELECT * FROM think_user WHERE <span class="built_in">type</span>=1 AND status=1</span><br><span class="line">数组</span><br><span class="line">普通查询</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line"><span class="variable">$map</span>[<span class="string">'name'</span>] = <span class="string">'thinkphp'</span>;</span><br><span class="line"><span class="variable">$map</span>[<span class="string">'status'</span>] = 1;</span><br><span class="line">// 把查询条件传入查询方法</span><br><span class="line"><span class="variable">$User</span>-&gt;<span class="built_in">where</span>(<span class="variable">$map</span>)-&gt;select();</span><br><span class="line">相当于：SELECT * FROM think_user WHERE `name`=<span class="string">'thinkphp'</span> AND status=1</span><br><span class="line">或者表达式查询</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line"><span class="variable">$map</span>[<span class="string">'name'</span>] = array(<span class="string">'EQ'</span>,<span class="string">'thinkphp'</span>);</span><br><span class="line"><span class="variable">$map</span>[<span class="string">'status'</span>] = array(<span class="string">'EQ'</span>,1);</span><br><span class="line"><span class="variable">$User</span>-&gt;<span class="built_in">where</span>(<span class="variable">$map</span>)-&gt;select();</span><br><span class="line"> 支持的表达式有：</span><br><span class="line"> 表达式             含义</span><br><span class="line"> EQ                等于（=）</span><br><span class="line"> NEQ            不等于（&lt;&gt;）</span><br><span class="line"> GT                大于（&gt;）</span><br><span class="line"> EGT            大于等于（&gt;=）</span><br><span class="line"> LT                小于（&lt;）</span><br><span class="line"> ELT            小于等于（&lt;=）</span><br><span class="line"> LIKE            模糊查询</span><br><span class="line"> [NOT] BETWEEN   （不在）区间查询</span><br><span class="line"> [NOT] IN       （不在）IN 查询</span><br><span class="line"> EXP           表达式查询，支持SQL语法</span><br><span class="line">多次调用</span><br><span class="line"><span class="variable">$map</span>[<span class="string">'a'</span>] = array(<span class="string">'gt'</span>,1);</span><br><span class="line"><span class="variable">$where</span>[<span class="string">'b'</span>] = 1;</span><br><span class="line"><span class="variable">$Model</span>-&gt;<span class="built_in">where</span>(<span class="variable">$map</span>)-&gt;<span class="built_in">where</span>(<span class="variable">$where</span>)-&gt;<span class="built_in">where</span>(<span class="string">'status=1'</span>)-&gt;select();</span><br></pre></td></tr></table></figure><h3 id="命名范围（就是-scope-属性定义和scope-连贯操作方法的使用）"><a href="#命名范围（就是-scope-属性定义和scope-连贯操作方法的使用）" class="headerlink" title="命名范围（就是_scope 属性定义和scope 连贯操作方法的使用）"></a>命名范围（就是_scope 属性定义和scope 连贯操作方法的使用）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">定义_scope属性：</span><br><span class="line">namespace Home\Model;</span><br><span class="line">use Think\Model;</span><br><span class="line">class NewsModel extends Model &#123;</span><br><span class="line">    protected <span class="variable">$_scope</span> = array(</span><br><span class="line">    // 默认的命名范围</span><br><span class="line">    <span class="string">'default'</span>=&gt;array(</span><br><span class="line">    <span class="string">'where'</span>=&gt;array(<span class="string">'status'</span>=&gt;1),</span><br><span class="line">    <span class="string">'limit'</span>=&gt;10,</span><br><span class="line">    ),</span><br><span class="line">    // 命名范围normal</span><br><span class="line">    <span class="string">'normal'</span>=&gt;array(</span><br><span class="line">    <span class="string">'where'</span>=&gt;array(<span class="string">'status'</span>=&gt;1),</span><br><span class="line">    ),</span><br><span class="line">    // 命名范围latest</span><br><span class="line">    <span class="string">'latest'</span>=&gt;array(</span><br><span class="line">    <span class="string">'order'</span>=&gt;<span class="string">'create_time DESC'</span>,</span><br><span class="line">    <span class="string">'limit'</span>=&gt;10,</span><br><span class="line">    ),</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line">其实命名范围就是事先把常用的查询条件储存起来，之后方便直接调用</span><br><span class="line"><span class="variable">$Model</span> = D(<span class="string">'News'</span>); // 这里必须使用D方法 因为命名范围在模型里面定义</span><br><span class="line"><span class="variable">$Model</span>-&gt;scope(<span class="string">'normal'</span>)-&gt;select();</span><br><span class="line"><span class="variable">$Model</span>-&gt;scope(<span class="string">'latest'</span>)-&gt;select();</span><br><span class="line"><span class="variable">$Model</span>-&gt;scope()-&gt;select();//调用默认命名范围</span><br><span class="line">相当于：</span><br><span class="line">SELECT * FROM think_news WHERE status=1</span><br><span class="line">SELECT * FROM think_news ORDER BY create_time DESC LIMIT 10</span><br><span class="line">支持多次调用</span><br><span class="line"><span class="variable">$Model</span>-&gt;scope(<span class="string">'normal'</span>)-&gt;scope(<span class="string">'latest'</span>)-&gt;select();</span><br><span class="line">//相当于</span><br><span class="line"><span class="variable">$Model</span>-&gt;scope(<span class="string">'normal,latest'</span>)-&gt;select();</span><br></pre></td></tr></table></figure><h3 id="CURD操作-数据库操作的四个基本操作（CURD）：创建-Create-、更新-Update-、读取-Read-和删除-Delete"><a href="#CURD操作-数据库操作的四个基本操作（CURD）：创建-Create-、更新-Update-、读取-Read-和删除-Delete" class="headerlink" title="CURD操作{数据库操作的四个基本操作（CURD）：创建(Create)、更新(Update)、读取(Read)和删除(Delete)}"></a>CURD操作{数据库操作的四个基本操作（CURD）：创建(Create)、更新(Update)、读取(Read)和删除(Delete)}</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">add()方法--数据写入（相当于sql中的Insert）</span><br><span class="line">find()方法--读取数据表中的一行数据（或者关联数据）</span><br><span class="line">select()方法--获取数据表中的多行记录（以及关联数据）</span><br><span class="line">save()方法--更新数据（相当于sql中的Update）</span><br><span class="line">delete()方法--删除数据使用（相当于sql中的Drop）</span><br></pre></td></tr></table></figure><h3 id="ActiveRecord"><a href="#ActiveRecord" class="headerlink" title="ActiveRecord"></a>ActiveRecord</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">ThinkPHP实现了ActiveRecords模式的ORM模型，采用了非标准的ORM模型：表映射到类，记录映射到对象</span><br><span class="line">插入数据</span><br><span class="line">eg:</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line">// 然后直接给数据对象赋值</span><br><span class="line"><span class="variable">$User</span>-&gt;name = <span class="string">'ThinkPHP'</span>;</span><br><span class="line"><span class="variable">$User</span>-&gt;email = <span class="string">'ThinkPHP@gmail.com'</span>;</span><br><span class="line">// 把数据对象添加到数据库</span><br><span class="line"><span class="variable">$User</span>-&gt;add();</span><br><span class="line">根据主键查询</span><br><span class="line">eg:</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line">// 查找id为8的用户数据</span><br><span class="line"><span class="variable">$User</span>-&gt;<span class="built_in">where</span>(<span class="string">'id=8'</span>)-&gt;find();</span><br><span class="line">//相当于</span><br><span class="line"><span class="variable">$User</span>-&gt;find(8);</span><br><span class="line">// 查找主键为1、3、8的多个数据</span><br><span class="line"><span class="variable">$userList</span> = <span class="variable">$User</span>-&gt;select(<span class="string">'1,3,8'</span>);</span><br><span class="line">根据某个字段查询</span><br><span class="line">eg:</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">"User"</span>); // 实例化User对象</span><br><span class="line"><span class="variable">$User</span>-&gt;getByName(<span class="string">"ThinkPHP"</span>);</span><br><span class="line">更新记录</span><br><span class="line">eg:</span><br><span class="line"><span class="variable">$User</span>-&gt;find(1); // 查找主键为1的数据</span><br><span class="line"><span class="variable">$User</span>-&gt;name = <span class="string">'TOPThink'</span>; // 修改数据对象</span><br><span class="line"><span class="variable">$User</span>-&gt;save(); // 保存当前数据对象</span><br><span class="line">删除记录</span><br><span class="line">eg:</span><br><span class="line"><span class="variable">$User</span>-&gt;find(2);</span><br><span class="line"><span class="variable">$User</span>-&gt;delete(); // 删除当前的数据对象</span><br><span class="line"><span class="variable">$User</span>-&gt;delete(8); // 删除主键为8的数据</span><br><span class="line"><span class="variable">$User</span>-&gt;delete(<span class="string">'5,6'</span>); // 删除主键为5、6的多个数据</span><br></pre></td></tr></table></figure><h3 id="内置标签"><a href="#内置标签" class="headerlink" title="内置标签"></a>内置标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">标签名作用                                                 包含属性</span><br><span class="line">include包含外部模板文件（闭合）                                  file</span><br><span class="line">import 导入资源文件（闭合 包括js css load别名）           file,href,<span class="built_in">type</span>,value,basepath</span><br><span class="line">volist 循环数组数据输出                                   name,id,offset,length,key,mod</span><br><span class="line">foreach数组或对象遍历输出                               name,item,key</span><br><span class="line"><span class="keyword">for</span>     For循环数据输出                              name,from,to,before,step</span><br><span class="line">switch分支判断输出                                   name</span><br><span class="line"><span class="keyword">case</span>分支判断输出（必须和switch配套使用）           value,<span class="built_in">break</span></span><br><span class="line">default默认情况输出（闭合 必须和switch配套使用）       无</span><br><span class="line">compare比较输出（包括eq neq lt gt egt elt heq nheq等别名）name,value,<span class="built_in">type</span></span><br><span class="line">range范围判断输出（包括<span class="keyword">in</span> notin between notbetween别名）name,value,<span class="built_in">type</span></span><br><span class="line">present判断是否赋值                                    name</span><br><span class="line">notpresent判断是否尚未赋值                            name</span><br><span class="line">empty判断数据是否为空                                name</span><br><span class="line">notempty判断数据是否不为空                            name</span><br><span class="line">defined判断常量是否定义                                name</span><br><span class="line">notdefined判断常量是否未定义                            name</span><br><span class="line">define常量定义（闭合）                                name,value</span><br><span class="line">assign变量赋值（闭合）                                name,value</span><br><span class="line"><span class="keyword">if</span>条件判断输出                                        condition</span><br><span class="line">elseif条件判断输出（闭合 必须和<span class="keyword">if</span>标签配套使用）        condition</span><br><span class="line"><span class="keyword">else</span>条件不成立输出（闭合 可用于其他标签）            无</span><br><span class="line">php  使用php代码                                        无</span><br></pre></td></tr></table></figure><h3 id="日志记录"><a href="#日志记录" class="headerlink" title="日志记录"></a>日志记录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">默认情况下只是在调试模式记录日志，要在部署模式开启日志记录，必须在配置中开启LOG_RECORD 参数，以及可以在应用配置文件中配置需要记录的日志级别</span><br><span class="line">手动记录</span><br><span class="line">方法                  描述</span><br><span class="line">Log::record()   记录日志信息到内存</span><br><span class="line">Log::save()      把保存在内存中的日志信息（用指定的记录方式）写入</span><br><span class="line">Log::write()  实时写入一条日志信息</span><br></pre></td></tr></table></figure><h3 id="表单合法性检测-配置insertFields-和-updateFields属性"><a href="#表单合法性检测-配置insertFields-和-updateFields属性" class="headerlink" title="表单合法性检测(配置insertFields 和 updateFields属性)"></a>表单合法性检测(配置insertFields 和 updateFields属性)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">定义后，调用add方法写入用户数据的时候，只能写入<span class="string">'account'</span>,<span class="string">'password'</span>,<span class="string">'nickname'</span>,<span class="string">'email'</span> 这几个字段，编辑的时候只能更新<span class="string">'nickname'</span>,<span class="string">'email'</span> 两个字段</span><br><span class="line">eg:</span><br><span class="line">namespace Home\Model;</span><br><span class="line">class UserModel extends \Think\Model&#123;</span><br><span class="line">protected <span class="variable">$insertFields</span> = array(<span class="string">'account'</span>,<span class="string">'password'</span>,<span class="string">'nickname'</span>,<span class="string">'email'</span>);</span><br><span class="line">protected <span class="variable">$updateFields</span> = array(<span class="string">'nickname'</span>,<span class="string">'email'</span>);</span><br><span class="line">&#125;</span><br><span class="line">配合field方法使用</span><br><span class="line">//新增用户数据</span><br><span class="line">M(<span class="string">'User'</span>)-&gt;field(<span class="string">'account,password,nickname,email'</span>)-&gt;create();</span><br><span class="line">//更新用户数据</span><br><span class="line">M(<span class="string">'User'</span>)-&gt;field(<span class="string">'nickname,email'</span>)-&gt;create();</span><br></pre></td></tr></table></figure><h3 id="assign方法–模板赋值"><a href="#assign方法–模板赋值" class="headerlink" title="assign方法–模板赋值"></a>assign方法–模板赋值</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">assign方法必须在display和show方法之前调用，并且系统只会输出设定的变量，其它变量不会输出（系统变量例外），一定程度上保证了变量的安全性</span><br><span class="line"><span class="variable">$array</span>[<span class="string">'name'</span>] = <span class="string">'thinkphp'</span>;</span><br><span class="line"><span class="variable">$array</span>[<span class="string">'email'</span>] = <span class="string">'liu21st@gmail.com'</span>;</span><br><span class="line"><span class="variable">$array</span>[<span class="string">'phone'</span>] = <span class="string">'12335678'</span>;</span><br><span class="line"><span class="variable">$this</span>-&gt;assign(<span class="variable">$array</span>);</span><br></pre></td></tr></table></figure><h3 id="display方法–渲染模板"><a href="#display方法–渲染模板" class="headerlink" title="display方法–渲染模板"></a>display方法–渲染模板</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dump()方法 内置用于打印的函数</span><br><span class="line">一般形式：dump(<span class="variable">$var</span>, <span class="variable">$echo</span>=<span class="literal">true</span>, <span class="variable">$label</span>=null, <span class="variable">$strict</span>=<span class="literal">true</span>)</span><br><span class="line">参数                     描述</span><br><span class="line">var（必须）           要输出的变量，支持所有变量类型</span><br><span class="line"><span class="built_in">echo</span>（可选）      是否直接输出，默认为<span class="literal">true</span>，如果为<span class="literal">false</span>则返回但不输出</span><br><span class="line">label（可选）      变量输出的label标识，默认为空</span><br><span class="line">strict（可选）     输出变量类型，默认为<span class="literal">true</span>，如果为<span class="literal">false</span>则采用print_r输出</span><br></pre></td></tr></table></figure><h3 id="A方法"><a href="#A方法" class="headerlink" title="A方法"></a>A方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">默认情况下，A方法实例化的是默认控制器层（Controller），如果要实例化其他的分层控制器的话，可以使用</span><br><span class="line">// 假设当前模块是Home模块</span><br><span class="line">// 实例化Event控制器</span><br><span class="line"><span class="variable">$User</span> = A(<span class="string">'User'</span>,<span class="string">'Event'</span>);</span><br><span class="line"><span class="variable">$Blog</span> = A(<span class="string">'Admin/Blog'</span>,<span class="string">'Event'</span>);</span><br><span class="line">等效于</span><br><span class="line">// 实例化Home模块的User事件控制器</span><br><span class="line"><span class="variable">$User</span> = new \Home\Event\UserEvent();</span><br><span class="line">// 实例化Admin模块的Blog事件控制器</span><br><span class="line"><span class="variable">$Blog</span> = new \Admin\Event\BlogEvent();</span><br></pre></td></tr></table></figure><h3 id="C方法"><a href="#C方法" class="headerlink" title="C方法"></a>C方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">无论何种配置文件，定义了配置文件之后，都统一使用系统提供的C方法（Config）来读取已有的配置。用法：C(<span class="string">'参数名称'</span>)</span><br><span class="line">例如，读取当前的URL模式配置参数：</span><br><span class="line"><span class="variable">$model</span> = C(<span class="string">'URL_MODEL'</span>);</span><br><span class="line">还可以利用C方法对某些参数进行动态配置（或者增加新的配置），主要是指那些还没有被使用的参数。设置格式：C(<span class="string">'参数名称'</span>,<span class="string">'新的参数值'</span>)</span><br><span class="line">// 动态改变缓存有效期</span><br><span class="line">C(<span class="string">'DATA_CACHE_TIME'</span>,60);</span><br></pre></td></tr></table></figure><h3 id="D方法"><a href="#D方法" class="headerlink" title="D方法"></a>D方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">用于数据模型的实例化操作，实例化某个具体的模型类</span><br><span class="line">D(<span class="string">'User'</span>) //实例化UserModel</span><br><span class="line">D(<span class="string">'User'</span>,<span class="string">'Logic'</span>) //实例化UserLogic</span><br><span class="line">D(<span class="string">'User'</span>,<span class="string">'Service'</span>) //实例化UserService</span><br><span class="line">eg:</span><br><span class="line">//实例化模型</span><br><span class="line"><span class="variable">$User</span> = D(<span class="string">'User'</span>);</span><br><span class="line">// 相当于 <span class="variable">$User</span> = new \Home\Model\UserModel();</span><br><span class="line">// 执行具体的数据操作</span><br><span class="line"><span class="variable">$User</span>-&gt;select();</span><br></pre></td></tr></table></figure><h3 id="E方法"><a href="#E方法" class="headerlink" title="E方法"></a>E方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">手动抛出异常</span><br><span class="line">E(<span class="string">'新增失败'</span>);</span><br><span class="line">E(<span class="string">'信息录入错误'</span>,25);</span><br></pre></td></tr></table></figure><h3 id="F方法–快速缓存"><a href="#F方法–快速缓存" class="headerlink" title="F方法–快速缓存"></a>F方法–快速缓存</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">F方法可以支持不同的存储类型，如果是文件类型的话，默认保存在DATA_PATH目录下面</span><br><span class="line">//快速缓存Data数据</span><br><span class="line">F(<span class="string">'data'</span>,<span class="variable">$Data</span>);</span><br><span class="line">//保存到指定的目录</span><br><span class="line">F(<span class="string">'data'</span>,<span class="variable">$Data</span>,TEMP_PATH);</span><br><span class="line"></span><br><span class="line">//获取缓存数据</span><br><span class="line"><span class="variable">$Data</span> = F(<span class="string">'data'</span>);</span><br><span class="line">//删除缓存数据</span><br><span class="line">F(<span class="string">'data'</span>,NULL);</span><br></pre></td></tr></table></figure><h3 id="I方法"><a href="#I方法" class="headerlink" title="I方法"></a>I方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">I方法是ThinkPHP用于更加方便和安全的获取系统输入变量，可以用于任何地方，用法格式如下:</span><br><span class="line">I(<span class="string">'变量类型.变量名/修饰符'</span>,[<span class="string">'默认值'</span>],[<span class="string">'过滤方法或正则'</span>],[<span class="string">'额外数据源'</span>])</span><br><span class="line">//以GET变量类型为例</span><br><span class="line"><span class="built_in">echo</span> I(<span class="string">'get.id'</span>); // 相当于 <span class="variable">$_GET</span>[<span class="string">'id'</span>]</span><br><span class="line"><span class="built_in">echo</span> I(<span class="string">'get.name'</span>); // 相当于 <span class="variable">$_GET</span>[<span class="string">'name'</span>]</span><br><span class="line">变量类型是指请求方式或者输入类型，包括：</span><br><span class="line">变量类型             含义</span><br><span class="line">get                 获取GET参数</span><br><span class="line">post             获取POST参数</span><br><span class="line">param             自动判断请求类型获取GET、POST或者PUT参数</span><br><span class="line">request             获取REQUEST 参数</span><br><span class="line">put                 获取PUT 参数</span><br><span class="line">session             获取 <span class="variable">$_SESSION</span> 参数</span><br><span class="line">cookie             获取 <span class="variable">$_COOKIE</span> 参数</span><br><span class="line">server             获取 <span class="variable">$_SERVER</span> 参数</span><br><span class="line">globals             获取<span class="variable">$GLOBALS</span>参数</span><br><span class="line">path             获取PATHINFO模式的URL参数</span><br><span class="line">data             获取其他类型的参数，需要配合额外数据源参数</span><br><span class="line">I方法的第三个参数如果传入函数名，则表示调用该函数对变量进行过滤并返回，例：</span><br><span class="line">I(<span class="string">'post.email'</span>,<span class="string">''</span>,FILTER_VALIDATE_EMAIL)</span><br><span class="line">//表示 会对<span class="variable">$_POST</span>[<span class="string">'email'</span>] 进行 格式验证，如果不符合要求的话，返回空字符串。</span><br><span class="line">新版本中，I函数对变量使用修饰符功能，可以更方便的通过类型过滤变量</span><br><span class="line">I(<span class="string">'变量类型.变量名/修饰符'</span>)</span><br><span class="line">修饰符      作用</span><br><span class="line">s       强制转换为字符串类型</span><br><span class="line">d       强制转换为整型类型</span><br><span class="line">b       强制转换为布尔类型</span><br><span class="line">a       强制转换为数组类型</span><br><span class="line">f       强制转换为浮点类型</span><br><span class="line">eg:</span><br><span class="line">I(<span class="string">'get.id/d'</span>); // 强制变量转换为整型</span><br><span class="line">I(<span class="string">'post.name/s'</span>); // 强制转换变量为字符串类型</span><br><span class="line">I(<span class="string">'post.ids/a'</span>); // 强制变量转换为数组类型</span><br></pre></td></tr></table></figure><h3 id="M方法"><a href="#M方法" class="headerlink" title="M方法"></a>M方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">使用M方法实例化，对数据表进行基本的CURD操作，由于不需要加载具体的模型类，所以性能会更高</span><br><span class="line">用于数据模型的实例化操作，实例化某个具体的模型类</span><br><span class="line">M(<span class="string">'User'</span>) //实例化UserModel</span><br><span class="line">M(<span class="string">'User'</span>,<span class="string">'Logic'</span>) //实例化UserLogic</span><br><span class="line">M(<span class="string">'User'</span>,<span class="string">'Service'</span>) //实例化UserService</span><br><span class="line">eg:</span><br><span class="line">//实例化模型</span><br><span class="line"><span class="variable">$User</span> = M(<span class="string">'User'</span>);</span><br><span class="line">// 相当于 <span class="variable">$User</span> = new \Home\Model\UserModel();</span><br><span class="line">// 执行具体的数据操作</span><br><span class="line"><span class="variable">$User</span>-&gt;select();</span><br></pre></td></tr></table></figure><h3 id="S方法"><a href="#S方法" class="headerlink" title="S方法"></a>S方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">系统内置对缓存操作</span><br><span class="line">缓存初始化:S(array(<span class="string">'type'</span>=&gt;<span class="string">'xcache'</span>,<span class="string">'expire'</span>=&gt;60));</span><br><span class="line">常用的参数是：</span><br><span class="line">参数      描述</span><br><span class="line">expire   缓存有效期（时间为秒）</span><br><span class="line">prefix   缓存标识前缀</span><br><span class="line"><span class="built_in">type</span>   缓存类型</span><br><span class="line">支持的缓存类型包括：Apachenote、Apc、Db、Eaccelerator、File、Memcache、Redis、Shmop、Sqlite、Wincache和Xcache</span><br><span class="line">缓存设置</span><br><span class="line">// 设置缓存</span><br><span class="line">S(<span class="string">'name'</span>,<span class="variable">$value</span>);</span><br><span class="line">// 缓存数据300秒</span><br><span class="line">S(<span class="string">'name'</span>,<span class="variable">$value</span>,300);</span><br><span class="line">// 采用文件方式缓存数据300秒</span><br><span class="line">S(<span class="string">'name'</span>,<span class="variable">$value</span>,array(<span class="string">'type'</span>=&gt;<span class="string">'file'</span>,<span class="string">'expire'</span>=&gt;300));</span><br><span class="line">// 读取缓存</span><br><span class="line"><span class="variable">$value</span> = S(<span class="string">'name'</span>);</span><br><span class="line">// 删除缓存</span><br><span class="line">S(<span class="string">'name'</span>,null);</span><br></pre></td></tr></table></figure><h3 id="U方法"><a href="#U方法" class="headerlink" title="U方法"></a>U方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用于URL的动态生成</span><br><span class="line">U方法的定义规则如下（方括号内参数根据实际应用决定）：</span><br><span class="line">U(<span class="string">'地址表达式'</span>,[<span class="string">'参数'</span>],[<span class="string">'伪静态后缀'</span>],[<span class="string">'显示域名'</span>])</span><br><span class="line">地址表达式：[模块/控制器/操作<span class="comment">#锚点@域名]?参数1=值1&amp;参数2=值2...</span></span><br></pre></td></tr></table></figure><h3 id="W方法"><a href="#W方法" class="headerlink" title="W方法"></a>W方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在模版中调用Widget:&#123;:W(<span class="string">'Cate/Menu'</span>)&#125;</span><br></pre></td></tr></table></figure><h3 id="常用Config配置项"><a href="#常用Config配置项" class="headerlink" title="常用Config配置项"></a>常用Config配置项</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'DEFAULT_CONTROLLER'</span> =&gt; <span class="string">'User'</span>,//默认的控制器</span><br><span class="line"><span class="string">'show_page_trace'</span>=&gt;<span class="literal">false</span>,//是否显示页面追踪</span><br><span class="line"><span class="string">'URL_CASE_INSENSITIVE'</span> =&gt;<span class="literal">true</span>,//不区分URL大小写</span><br><span class="line"><span class="string">'ACTION_SUFFIX'</span> =&gt; <span class="string">'Action'</span>, // 操作方法后缀</span><br><span class="line"><span class="string">'CONTROLLER_LEVEL'</span> =&gt; 2,//设置2级目录的控制器层</span><br><span class="line"><span class="string">'URL_PARAMS_BIND_TYPE'</span> =&gt; 1, // 设置参数绑定按照变量顺序绑定</span><br><span class="line"><span class="string">'URL_PARAMS_BIND'</span> =&gt; <span class="literal">false</span>,//关闭参数绑定功能</span><br><span class="line"><span class="string">'URL_HTML_SUFFIX'</span> =&gt; <span class="string">'html|shtml|xml'</span>,// 多个伪静态后缀设置 用|分割</span><br><span class="line"><span class="string">'DEFAULT_FILTER'</span> =&gt; <span class="string">'strip_tags,htmlspecialchars'</span>,//默认的过滤器</span><br><span class="line"><span class="string">'DB_FIELDS_CACHE'</span>=&gt;<span class="literal">false</span>,// 关闭字段缓存</span><br><span class="line"><span class="string">'DEFAULT_V_LAYER'</span> =&gt;<span class="string">'Template'</span>, // 设置默认的视图层名称，默认为View</span><br><span class="line"><span class="string">'TMPL_TEMPLATE_SUFFIX'</span>=&gt;<span class="string">'.tpl'</span>,//配置视图的后缀，默认为.html</span><br><span class="line">define(<span class="string">'TMPL_PATH'</span>,<span class="string">'./Template/'</span>),//改变所有模块的模板目录</span><br><span class="line"><span class="string">'VIEW_PATH'</span>=&gt;<span class="string">'./Theme/'</span>,//改变某个模块的模板文件目录</span><br><span class="line">DEFAULT_THEME<span class="string">' =&gt; '</span>default<span class="string">',// 设置默认的模板主题</span></span><br><span class="line"><span class="string">'</span>SHOW_ERROR_MSG<span class="string">' =&gt; true, // 显示错误信息</span></span><br><span class="line"><span class="string"> '</span>SHOW_ERROR_MSG<span class="string">' =&gt; false,'</span>ERROR_MESSAGE<span class="string">' =&gt; '</span>发生错误！<span class="string">',//设置统一的错误提示信息</span></span><br><span class="line"><span class="string">'</span>ERROR_PAGE<span class="string">' =&gt;'</span>/Public/error.html<span class="string">',//所有异常和错误都指向一个统一页面</span></span><br><span class="line"><span class="string">'</span>TMPL_EXCEPTION_FILE<span class="string">' =&gt; APP_PATH.'</span>/Public/exception.tpl<span class="string">'//修改系统默认的异常模板文件</span></span><br><span class="line"><span class="string">'</span>LOG_RECORD<span class="string">' =&gt; true, // 开启日志记录</span></span><br><span class="line"><span class="string">'</span>LOG_LEVEL<span class="string">' =&gt;'</span>EMERG,ALERT,CRIT,ERR<span class="string">', // 只记录EMERG ALERT CRIT ERR 错误</span></span><br><span class="line"><span class="string">'</span>TMPL_PARSE_STRING<span class="string">' =&gt; array(</span></span><br><span class="line"><span class="string">'</span>__STATIC__<span class="string">' =&gt; __ROOT__.'</span>/Application/<span class="string">'.MODULE_NAME.'</span>/View/<span class="string">' . '</span>/Public/static<span class="string">',)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> thinkphp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>php 面向对象基础</title>
      <link href="/2016/09/05/php-object-jc/"/>
      <content type="html"><![CDATA[<h2 id="php-object-oriented-foundation"><a href="#php-object-oriented-foundation" class="headerlink" title="php object-oriented foundation"></a>php object-oriented foundation</h2><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">对象： 拥有相同属性和方法的集合</span><br><span class="line">class 类名(首字母大写或者驼峰式)｛</span><br><span class="line">public 属性名=属性值;//类属性</span><br><span class="line">//类的方法</span><br><span class="line">public <span class="keyword">function</span> 方法名()&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">｝</span><br><span class="line">对象操作：</span><br><span class="line"><span class="variable">$xx</span>(保存实例化结果)=new 类名</span><br><span class="line"><span class="variable">$xx</span>-&gt;属性 访问对象的属性</span><br><span class="line"><span class="variable">$xx</span>-&gt;方法() 访问对象的方法</span><br><span class="line"><span class="variable">$this</span>-&gt;属性 本类的属性</span><br><span class="line"><span class="variable">$this</span>-&gt;方法() 本类的方法</span><br><span class="line">eg：</span><br><span class="line">&lt;?php</span><br><span class="line"> //计算类</span><br><span class="line"> class CountNum&#123;</span><br><span class="line">   public <span class="variable">$a</span>=5;</span><br><span class="line">   public <span class="variable">$b</span>=6;</span><br><span class="line">   /*</span><br><span class="line">   类里面的变量仍然是局部变量</span><br><span class="line">   */</span><br><span class="line">   public <span class="keyword">function</span> <span class="function"><span class="title">add</span></span>()&#123;</span><br><span class="line">     <span class="variable">$this</span>-&gt;<span class="built_in">test</span>();</span><br><span class="line">     //var_dump(<span class="variable">$this</span>-&gt;a);<span class="built_in">exit</span>;</span><br><span class="line">     <span class="built_in">return</span> <span class="variable">$this</span>-&gt;a+<span class="variable">$this</span>-&gt;b;</span><br><span class="line">   &#125;</span><br><span class="line">   public <span class="keyword">function</span> <span class="function"><span class="title">mid</span></span>()&#123;</span><br><span class="line">     <span class="built_in">return</span> <span class="variable">$this</span>-&gt;a-<span class="variable">$this</span>-&gt;b;</span><br><span class="line">   &#125;</span><br><span class="line">   public <span class="keyword">function</span> <span class="function"><span class="title">plus</span></span>()&#123;</span><br><span class="line">     <span class="built_in">return</span> <span class="variable">$this</span>-&gt;a*<span class="variable">$this</span>-&gt;b;</span><br><span class="line">   &#125;</span><br><span class="line">   public <span class="keyword">function</span> <span class="function"><span class="title">chu</span></span>()&#123;</span><br><span class="line">     <span class="built_in">return</span> <span class="variable">$this</span>-&gt;a/<span class="variable">$this</span>-&gt;b;</span><br><span class="line">   &#125;</span><br><span class="line">   public <span class="keyword">function</span> <span class="function"><span class="title">test</span></span>()&#123;</span><br><span class="line">     <span class="built_in">echo</span> 1;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="variable">$c</span>=new CountNum;//实例化计算类</span><br><span class="line"><span class="variable">$c</span>-&gt;a=7;</span><br><span class="line"><span class="variable">$c</span>-&gt;b=6;</span><br><span class="line">var_dump(<span class="variable">$c</span>-&gt;add());</span><br><span class="line">var_dump(<span class="variable">$c</span>-&gt;mid());</span><br><span class="line">var_dump(<span class="variable">$c</span>-&gt;chu());</span><br><span class="line">var_dump(<span class="variable">$c</span>-&gt;plus());</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="面向对象四大特性"><a href="#面向对象四大特性" class="headerlink" title="面向对象四大特性"></a>面向对象四大特性</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">继承 extends</span><br><span class="line">子类可以全部继承父类的公开方法和属性</span><br><span class="line">重载 子类必须大于等于父类权限</span><br><span class="line">子类可以改写父类的方法和属性</span><br><span class="line">多态 （不支持多态)</span><br><span class="line">封装</span><br><span class="line">public 公开，公共 所有子类和本类的内部都可以使用的，外部</span><br><span class="line">protected 受保护的 本类和子类使用，外部不能调用</span><br><span class="line">private 私有化 本类访问</span><br></pre></td></tr></table></figure><h3 id="魔术函数"><a href="#魔术函数" class="headerlink" title="魔术函数"></a>魔术函数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">__construct() 构造函数 类实例化的时候自动调用</span><br><span class="line">__destruct() 析构函数 类销毁</span><br><span class="line">eg:</span><br><span class="line">&lt;?php</span><br><span class="line">class Person&#123;</span><br><span class="line">  /*人类的属性*/</span><br><span class="line">  public <span class="variable">$eye</span>=<span class="string">'黑色'</span>;</span><br><span class="line">  public <span class="variable">$mouth</span>=<span class="string">''</span>;</span><br><span class="line">  public <span class="variable">$foot</span>=<span class="string">''</span>;</span><br><span class="line">  </span><br><span class="line">  public <span class="keyword">function</span> __construct(<span class="variable">$f</span>=<span class="string">'缓慢爬行'</span>,<span class="variable">$m</span>=<span class="string">'嗷嗷嗷'</span>)&#123;</span><br><span class="line">     <span class="built_in">echo</span> <span class="string">'新人类诞生啦&lt;br/&gt;'</span>;</span><br><span class="line">    <span class="variable">$this</span>-&gt;mouth=<span class="variable">$m</span>;</span><br><span class="line">    <span class="variable">$this</span>-&gt;foot=<span class="variable">$f</span>;</span><br><span class="line">     <span class="variable">$this</span>-&gt;move();</span><br><span class="line">    <span class="variable">$this</span>-&gt;say();</span><br><span class="line">  &#125;</span><br><span class="line">  /*</span><br><span class="line">  人类的行为</span><br><span class="line">  */</span><br><span class="line">  public <span class="keyword">function</span> <span class="function"><span class="title">move</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$this</span>-&gt;foot.<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  /*</span><br><span class="line">  人类的语言</span><br><span class="line">  */</span><br><span class="line">  public <span class="keyword">function</span> <span class="function"><span class="title">say</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$this</span>-&gt;mouth.<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  public <span class="keyword">function</span> <span class="function"><span class="title">__destruct</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">'新人类死亡啦&lt;br/&gt;'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">class GoodPerson extends Person&#123;</span><br><span class="line">  public <span class="variable">$eye</span>=<span class="string">'蓝色'</span>;</span><br><span class="line">  public <span class="keyword">function</span> <span class="function"><span class="title">move</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">'我是神奇大侠&lt;br/&gt;'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  public <span class="keyword">function</span> move(<span class="variable">$word</span>)&#123;//不支持多态</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">'我是神奇大侠1&lt;br/&gt;'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">/*</span><br><span class="line"><span class="variable">$p</span>=new Person;</span><br><span class="line">//<span class="variable">$p</span>-&gt;move();</span><br><span class="line">//<span class="variable">$p</span>-&gt;say();</span><br><span class="line"><span class="built_in">unset</span>(<span class="variable">$p</span>);</span><br><span class="line"><span class="variable">$p1</span>=new Person(<span class="string">'快速爬行'</span>,<span class="string">'呃呃呃'</span>);</span><br><span class="line"><span class="built_in">unset</span>(<span class="variable">$p1</span>);</span><br><span class="line"><span class="variable">$p2</span>=new Person(<span class="string">'飞速爬行'</span>,<span class="string">'哟哟哟'</span>);</span><br><span class="line"><span class="built_in">unset</span>(<span class="variable">$p2</span>);</span><br><span class="line">*/</span><br><span class="line"><span class="variable">$gp</span>=new GoodPerson;</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$gp</span>-&gt;eye.<span class="string">'&lt;br/&gt;'</span>;</span><br></pre></td></tr></table></figure><h3 id="this、parent、self"><a href="#this、parent、self" class="headerlink" title="$this、parent、self"></a>$this、parent、self</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$this</span> 本类</span><br><span class="line">parent 父类</span><br><span class="line">self 自己</span><br></pre></td></tr></table></figure><h3 id="动态变量、动态属性和静态变量、静态属性"><a href="#动态变量、动态属性和静态变量、静态属性" class="headerlink" title="动态变量、动态属性和静态变量、静态属性"></a>动态变量、动态属性和静态变量、静态属性</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">动态变量,动态属性：</span><br><span class="line">方法调用、类实例化就会还原</span><br><span class="line">静态变量,静态属性</span><br><span class="line">不会跟随方法调用，类实例化还原</span><br><span class="line">oop里面静态属性不能重载为非静态的属性,可以不实例化的前提直接访问</span><br><span class="line">oop的静态方法是可以不实例化的前提直接访问的</span><br><span class="line">eg:</span><br><span class="line">&lt;?php</span><br><span class="line">class Person&#123;</span><br><span class="line">    /*人类的属性*/</span><br><span class="line">    public static <span class="variable">$eye</span>=<span class="string">'黑色'</span>;</span><br><span class="line">    public <span class="variable">$mouth</span>=<span class="string">''</span>;</span><br><span class="line">    public <span class="variable">$foot</span>=<span class="string">''</span>;</span><br><span class="line">    public <span class="keyword">function</span> __construct(<span class="variable">$f</span>=<span class="string">'缓慢爬行'</span>,<span class="variable">$m</span>=<span class="string">'嗷嗷嗷'</span>)&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">'新人类诞生啦&lt;br/&gt;'</span>;</span><br><span class="line">    <span class="variable">$this</span>-&gt;mouth=<span class="variable">$m</span>;</span><br><span class="line">    <span class="variable">$this</span>-&gt;foot=<span class="variable">$f</span>;</span><br><span class="line">    <span class="variable">$this</span>-&gt;move();</span><br><span class="line">    <span class="variable">$this</span>-&gt;say();</span><br><span class="line">    &#125;</span><br><span class="line">    /*</span><br><span class="line">    人类的行为</span><br><span class="line">    */</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">move</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$this</span>-&gt;foot.<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    /*</span><br><span class="line">    人类的语言</span><br><span class="line">    */</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">say</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$this</span>-&gt;mouth.<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">__destruct</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">'新人类死亡啦&lt;br/&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class GoodPerson extends Person&#123;</span><br><span class="line">    public static <span class="variable">$eye</span>=<span class="string">'蓝色'</span>;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">move</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">'我是神奇大侠&lt;br/&gt;'</span>;</span><br><span class="line">    <span class="built_in">echo</span> Person::<span class="variable">$eye</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public static <span class="keyword">function</span> <span class="function"><span class="title">test</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">'我是静态方法&lt;br/&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">/*</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">test</span></span>()&#123;</span><br><span class="line">static <span class="variable">$a</span>=1;</span><br><span class="line"><span class="variable">$a</span>++;</span><br><span class="line"><span class="built_in">return</span> <span class="variable">$a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">test</span>();</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">test</span>();</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">test</span>();</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">test</span>();</span><br><span class="line">*/</span><br><span class="line">//<span class="variable">$p</span>=new Person;</span><br><span class="line">//<span class="variable">$gp</span>=new GoodPerson;</span><br><span class="line">//<span class="built_in">echo</span> GoodPerson::<span class="variable">$eye</span>;</span><br><span class="line"><span class="built_in">echo</span> GoodPerson::<span class="built_in">test</span>();</span><br></pre></td></tr></table></figure><h3 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">__get 访问不存在的受保护及限制属性时候自动触发</span><br><span class="line">public <span class="keyword">function</span> __get(<span class="variable">$name</span>)&#123;</span><br><span class="line">var_dump(<span class="variable">$name</span>);</span><br><span class="line">&#125;</span><br><span class="line">__set 给不存在或受保护及限制的属性赋值的时候自动触发</span><br><span class="line">public <span class="keyword">function</span> __set(<span class="variable">$name</span>,<span class="variable">$value</span>)&#123;</span><br><span class="line">self::$<span class="variable">$name</span>=<span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br><span class="line">__isset </span><br><span class="line">阻止判断不存在或受限制及保护的属性</span><br><span class="line">__call 访问不存在或受保护的方法 </span><br><span class="line">public <span class="keyword">function</span> __call(<span class="variable">$method</span>,<span class="variable">$parm</span>)&#123;</span><br><span class="line">call_user_func_array(array(<span class="variable">$this</span>,<span class="variable">$method</span>),<span class="variable">$parm</span>);</span><br><span class="line">&#125;</span><br><span class="line">eg:</span><br><span class="line">&lt;?php</span><br><span class="line">class F&#123;</span><br><span class="line">  const NAME=<span class="string">'父亲路人甲'</span>;//常量</span><br><span class="line">  public static <span class="variable">$money</span>=1000;</span><br><span class="line">  private static <span class="variable">$selfMoney</span>=100000000;</span><br><span class="line">  </span><br><span class="line">  public <span class="keyword">function</span> __get(<span class="variable">$name</span>)&#123;</span><br><span class="line">    //<span class="built_in">echo</span> <span class="string">'亲，这个属性没有哦&lt;br/&gt;'</span>;</span><br><span class="line">    <span class="built_in">echo</span> self::$<span class="variable">$name</span>.<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  public <span class="keyword">function</span> __isset(<span class="variable">$name</span>)&#123;</span><br><span class="line">   <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  public <span class="keyword">function</span> __unset(<span class="variable">$name</span>)&#123;</span><br><span class="line">    <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  public <span class="keyword">function</span> __set(<span class="variable">$name</span>,<span class="variable">$value</span>)&#123;</span><br><span class="line">    self::$<span class="variable">$name</span>=<span class="variable">$value</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  public <span class="keyword">function</span> __call(<span class="variable">$method</span>,<span class="variable">$parm</span>)&#123;</span><br><span class="line">    call_user_func_array(array(<span class="variable">$this</span>,<span class="variable">$method</span>),<span class="variable">$parm</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  /*</span><br><span class="line">  父类买东西</span><br><span class="line">  */</span><br><span class="line">  public <span class="keyword">function</span> buy(<span class="variable">$m</span>)&#123;</span><br><span class="line">    //<span class="variable">$this</span>-&gt;money=<span class="variable">$this</span>-&gt;money-<span class="variable">$m</span>;</span><br><span class="line">   self::<span class="variable">$money</span>=self::<span class="variable">$money</span>-<span class="variable">$m</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  private <span class="keyword">function</span> <span class="function"><span class="title">test</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> self::<span class="variable">$selfMoney</span>.<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">  &#125; </span><br><span class="line">  </span><br><span class="line">  public <span class="keyword">function</span> <span class="function"><span class="title">countTotal</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">'钱包还剩下：'</span>.self::<span class="variable">$money</span>.<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class S1 extends F&#123;</span><br><span class="line">  const NAME=<span class="string">'儿子路人乙'</span>;//重载常量</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$f</span>=new F;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'本来钱包有：'</span>.<span class="variable">$f</span>::<span class="variable">$money</span>.<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">//<span class="built_in">echo</span> <span class="variable">$f</span>::<span class="variable">$selfMoney</span>.<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="variable">$f</span>-&gt;buy(200);</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$f</span>::NAME.<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="variable">$f</span>-&gt;countTotal();</span><br><span class="line"><span class="variable">$s1</span>=new S1;</span><br><span class="line">//<span class="built_in">echo</span> <span class="variable">$s1</span>-&gt;<span class="built_in">test</span>().<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'本来钱包有：'</span>.<span class="variable">$s1</span>::<span class="variable">$money</span>.<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">//<span class="variable">$s1</span>-&gt;selfMoney=0; //__set()</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$s1</span>-&gt;selfMoney; //__get()</span><br><span class="line"><span class="variable">$s1</span>-&gt;<span class="built_in">test</span>();         //__call()</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$s1</span>::NAME.<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="variable">$s1</span>-&gt;buy(300);</span><br><span class="line"><span class="variable">$s1</span>-&gt;countTotal();</span><br><span class="line">var_dump(isset(<span class="variable">$f</span>-&gt;selfMoney)); //__isset()</span><br><span class="line">当类实例化不成功因为类不存在的时候，自动触发去查找相关类</span><br><span class="line"><span class="keyword">function</span> __autoload(<span class="variable">$name</span>)&#123;</span><br><span class="line">include(strtolower(<span class="variable">$name</span>).<span class="string">'.php'</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">eg:</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">function</span> __autoload(<span class="variable">$name</span>)&#123;</span><br><span class="line">   include(strtolower(<span class="variable">$name</span>).<span class="string">'.php'</span>);</span><br><span class="line">   //var_dump(<span class="variable">$name</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=new A;</span><br><span class="line">a.php</span><br><span class="line">&lt;?php</span><br><span class="line"> class A&#123;</span><br><span class="line">   public <span class="keyword">function</span> <span class="function"><span class="title">__construct</span></span>()&#123;</span><br><span class="line">     <span class="built_in">echo</span> <span class="string">'A类加载成功'</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line">b.php</span><br><span class="line">&lt;?php</span><br><span class="line"> class B&#123;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">__construct</span></span>()&#123;</span><br><span class="line">     <span class="built_in">echo</span> <span class="string">'B类加载成功'</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="克隆"><a href="#克隆" class="headerlink" title="克隆"></a>克隆</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class User&#123;</span><br><span class="line">   public <span class="variable">$username</span> = <span class="string">'sky'</span>;</span><br><span class="line">   public <span class="variable">$password</span> = 123123;</span><br><span class="line">   //当对象被克隆时调用,防止克隆时候把重要的信息克隆到</span><br><span class="line">   public <span class="keyword">function</span> <span class="function"><span class="title">__clone</span></span>()&#123;</span><br><span class="line">      <span class="variable">$this</span>-&gt;password =<span class="string">""</span>;//密码不能外泄，克隆时把密码清空</span><br><span class="line">   &#125;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$u1</span> = new User();</span><br><span class="line">var_dump(<span class="variable">$u1</span>);</span><br><span class="line"><span class="variable">$u2</span> = <span class="built_in">clone</span> <span class="variable">$u1</span>;</span><br><span class="line">var_dump(<span class="variable">$u2</span>);</span><br></pre></td></tr></table></figure><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/*</span><br><span class="line">const:在类中定义一个常量</span><br><span class="line">调用：类名::常量名</span><br><span class="line">意义：为了保证类的独立性，防止常量冲突</span><br><span class="line">*/</span><br><span class="line">define(<span class="string">'NAME'</span>,<span class="string">'tom'</span>);//公共常量</span><br><span class="line">class Test&#123;</span><br><span class="line">   const NAME = <span class="string">'miny'</span>;//只属于本类，可以被重载，不能在外部赋值，只在本类有效</span><br><span class="line">   public <span class="keyword">function</span> <span class="function"><span class="title">showName</span></span>()&#123;</span><br><span class="line">      <span class="built_in">echo</span> NAME.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">      <span class="built_in">echo</span> Test::NAME.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$test</span> = new Test;</span><br><span class="line"><span class="variable">$test</span>-&gt;showName();</span><br><span class="line"><span class="built_in">echo</span> NAME.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"><span class="built_in">echo</span> Test::NAME.<span class="string">'&lt;br&gt;'</span>;</span><br></pre></td></tr></table></figure><h3 id="抽象类-方法"><a href="#抽象类-方法" class="headerlink" title="抽象类 方法"></a>抽象类 方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/*</span><br><span class="line">抽象方法：</span><br><span class="line">1 不能实例化</span><br><span class="line">2.抽象方法可以规范子类的格式</span><br><span class="line">3.抽象方法不能是私有的，因为私有方法不能被重载</span><br><span class="line">*/</span><br><span class="line">abstract class F&#123;</span><br><span class="line">  const NAME=<span class="string">'父亲路人甲'</span>;</span><br><span class="line">  public static <span class="variable">$money</span>=1000;</span><br><span class="line">  private static <span class="variable">$selfMoney</span>=100000000;</span><br><span class="line">  public <span class="keyword">function</span> __get(<span class="variable">$name</span>)&#123;</span><br><span class="line">    <span class="built_in">echo</span> self::$<span class="variable">$name</span>.<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  /*</span><br><span class="line">  抽象方法是没有方法体(没有内容)</span><br><span class="line">  内容由子类去决定，而且子类是必须一定要实现抽象方法</span><br><span class="line">  */</span><br><span class="line">  abstract <span class="keyword">function</span> buy();</span><br><span class="line">&#125;</span><br><span class="line">class S1 extends F&#123;</span><br><span class="line">  public <span class="keyword">function</span> <span class="function"><span class="title">buy</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> self::<span class="variable">$money</span>=self::<span class="variable">$money</span>-100;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$s1</span>=new S1;</span><br><span class="line"><span class="variable">$s1</span>-&gt;selfMoney;</span><br><span class="line"><span class="variable">$s1</span>-&gt;buy();</span><br></pre></td></tr></table></figure><h3 id="接口-多继承"><a href="#接口-多继承" class="headerlink" title="接口(多继承)"></a>接口(多继承)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/*</span><br><span class="line">interface:接口</span><br><span class="line">implements:实现接口</span><br><span class="line">用处：完全用于规范子类的方法，强制子类必须实现某方法</span><br><span class="line">特点：</span><br><span class="line">1、接口中只能定义常量或不完全方法</span><br><span class="line">2、接口中的方法在子类中都必须实现（重载）</span><br><span class="line">3、接口是一个特殊的类，它不被继承，而被实现，而且可以是多实现</span><br><span class="line">interface &gt; abstract &gt; 普通类</span><br><span class="line">*/</span><br><span class="line">interface Test&#123;</span><br><span class="line">   //public <span class="variable">$t1</span>;</span><br><span class="line">   //static public <span class="variable">$t2</span>;</span><br><span class="line">   const T3=<span class="string">'sky'</span>;</span><br><span class="line">   /*public <span class="keyword">function</span> <span class="function"><span class="title">t4</span></span>()&#123;</span><br><span class="line">   &#125;</span><br><span class="line">   */</span><br><span class="line">   public <span class="keyword">function</span> t5();</span><br><span class="line">&#125;</span><br><span class="line">interface Test2&#123;</span><br><span class="line">   public <span class="keyword">function</span> t6();</span><br><span class="line">&#125;</span><br><span class="line">class C implements Test,Test2&#123;</span><br><span class="line">   public <span class="keyword">function</span> <span class="function"><span class="title">t5</span></span>()&#123;</span><br><span class="line">   &#125;</span><br><span class="line">   public <span class="keyword">function</span> <span class="function"><span class="title">t6</span></span>()&#123;</span><br><span class="line">   &#125;</span><br><span class="line">   public <span class="keyword">function</span> <span class="function"><span class="title">t7</span></span>()&#123;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">//例子：鸟人</span><br><span class="line">interface Animal&#123;</span><br><span class="line">   public <span class="keyword">function</span> eat();//鸟和人都具有吃的方法，为避免接口方法冲突（php5.4后无此问题），应将该方法提出到上一级的接口中</span><br><span class="line">&#125;</span><br><span class="line">interface Person extends Animal&#123;</span><br><span class="line">   public <span class="keyword">function</span> think();</span><br><span class="line">   public <span class="keyword">function</span> talk();</span><br><span class="line">&#125;</span><br><span class="line">interface Bird extends Animal&#123;</span><br><span class="line">   public <span class="keyword">function</span> fly();</span><br><span class="line">&#125;</span><br><span class="line">class BridPerson implements Person,Bird&#123;</span><br><span class="line">   public <span class="keyword">function</span> <span class="function"><span class="title">think</span></span>()&#123;</span><br><span class="line">   &#125;</span><br><span class="line">   public <span class="keyword">function</span> <span class="function"><span class="title">talk</span></span>()&#123;</span><br><span class="line">   &#125;</span><br><span class="line">   public <span class="keyword">function</span> <span class="function"><span class="title">fly</span></span>()&#123;</span><br><span class="line">   &#125;</span><br><span class="line">   public <span class="keyword">function</span> <span class="function"><span class="title">eat</span></span>()&#123;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>javascript优化技巧</title>
      <link href="/2016/09/05/javascript-youhua-jiqiao/"/>
      <content type="html"><![CDATA[<h2 id="优化技巧"><a href="#优化技巧" class="headerlink" title="优化技巧"></a>优化技巧</h2><h3 id="避免全局查找"><a href="#避免全局查找" class="headerlink" title="避免全局查找"></a>避免全局查找</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">在一个函数中会用到全局对象存储为局部变量来减少全局查找，因为访问局部变量的速度要比访问全局变量的速度更快些</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">search</span></span>() &#123;</span><br><span class="line">//当使用当前页面地址和主机域名</span><br><span class="line">   alert(window.location.href + window.location.host);</span><br><span class="line">&#125;</span><br><span class="line">//最好的方式是如下这样先用一个简单变量保存起来</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">search</span></span>() &#123;</span><br><span class="line">   var location = window.location;</span><br><span class="line">   alert(location.href + location.host);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">如果针对的是不断运行的代码，不应该使用setTimeout，而应该是用setInterval，因为setTimeout每一次都会初始化一个定时器，而setInterval只会在开始的时候初始化一个定时器</span><br><span class="line">var timeoutTimes = 0;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">timeout</span></span>() &#123;</span><br><span class="line">   timeoutTimes++;</span><br><span class="line">   <span class="keyword">if</span> (timeoutTimes &lt; 10) &#123;</span><br><span class="line">       setTimeout(timeout, 10);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">timeout();</span><br><span class="line">//可以替换为：</span><br><span class="line">var intervalTimes = 0;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">interval</span></span>() &#123;</span><br><span class="line">   intervalTimes++;</span><br><span class="line">   <span class="keyword">if</span> (intervalTimes &gt;= 10) &#123;</span><br><span class="line">       clearInterval(interv);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">var interv = setInterval(interval, 10);</span><br></pre></td></tr></table></figure><h3 id="字符串连接"><a href="#字符串连接" class="headerlink" title="字符串连接"></a>字符串连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">如果要连接多个字符串，应该少使用+=，如</span><br><span class="line">s+=a;</span><br><span class="line">s+=b;</span><br><span class="line">s+=c;</span><br><span class="line">应该写成s+=a + b + c；</span><br><span class="line">而如果是收集字符串，比如多次对同一个字符串进行+=操作的话，最好使用一个缓存，使用JavaScript数组来收集，最后使用join方法连接起来</span><br><span class="line">var buf = [];</span><br><span class="line"><span class="keyword">for</span> (var i = 0; i &lt; 100; i++) &#123;</span><br><span class="line">   buf.push(i.toString());</span><br><span class="line">&#125;</span><br><span class="line">var all = buf.join(<span class="string">""</span>);</span><br></pre></td></tr></table></figure><h3 id="避免with语句"><a href="#避免with语句" class="headerlink" title="避免with语句"></a>避免with语句</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">和函数类似 ，with语句会创建自己的作用域，因此会增加其中执行的代码的作用域链的长度，由于额外的作用域链的查找，在with语句中执行的代码肯定会比外面执行的代码要慢，在能不使用with语句的时候尽量不要使用with语句。</span><br><span class="line">with (a.b.c.d) &#123;</span><br><span class="line">    property1 = 1;</span><br><span class="line">    property2 = 2;</span><br><span class="line">&#125;</span><br><span class="line">//可以替换为：</span><br><span class="line">var obj = a.b.c.d;</span><br><span class="line">obj.property1 = 1;</span><br><span class="line">obj.property2 = 2;</span><br></pre></td></tr></table></figure><h3 id="数字转换成字符串"><a href="#数字转换成字符串" class="headerlink" title="数字转换成字符串"></a>数字转换成字符串</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一般最好用<span class="string">""</span> + 1来将数字转换成字符串，虽然看起来比较丑一点，但事实上这个效率是最高的，性能上来说：(<span class="string">""</span> +) &gt; String() &gt; .toString() &gt; new String()</span><br></pre></td></tr></table></figure><h3 id="浮点数转换成整型"><a href="#浮点数转换成整型" class="headerlink" title="浮点数转换成整型"></a>浮点数转换成整型</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">很多人喜欢使用parseInt()，其实parseInt()是用于将字符串转换成数字，而不是浮点数和整型之间的转换，应该使用Math.floor()或者Math.round()</span><br></pre></td></tr></table></figure><h3 id="各种类型转换"><a href="#各种类型转换" class="headerlink" title="各种类型转换"></a>各种类型转换</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var myVar = <span class="string">"3.14159"</span>,</span><br><span class="line">str = <span class="string">""</span> + myVar, //  to string  </span><br><span class="line">i_int = ~ ~myVar,  //  to <span class="built_in">integer</span>  </span><br><span class="line">f_float = 1 * myVar,  //  to <span class="built_in">float</span>  </span><br><span class="line">b_bool = !!myVar,  /*  to boolean - any string with length  and any number except 0 are <span class="literal">true</span> */</span><br><span class="line">array = [myVar];  //  to array  </span><br><span class="line">如果定义了toString()方法来进行类型转换的话，推荐显式调用toString()，因为内部的操作在尝试所有可能性之后，会尝试对象的toString()方法尝试能否转化为String，所以直接调用这个方法效率会更高</span><br></pre></td></tr></table></figure><h3 id="多个类型声明"><a href="#多个类型声明" class="headerlink" title="多个类型声明"></a>多个类型声明</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var myVar = <span class="string">"3.14159"</span>,</span><br><span class="line">    str = <span class="string">""</span> + myVar, //  to string  </span><br><span class="line">    i_int = ~ ~myVar,  //  to <span class="built_in">integer</span>  </span><br><span class="line">    f_float = 1 * myVar,  //  to <span class="built_in">float</span>  </span><br><span class="line">    b_bool = !!myVar,  /*  to boolean - any string with length  and any number except 0 are <span class="literal">true</span> */</span><br><span class="line">    array = [myVar];  //  to array  </span><br><span class="line">如果定义了toString()方法来进行类型转换的话，推荐显式调用toString()，因为内部的操作在尝试所有可能性之后，会尝试对象的toString()方法尝试能否转化为String，所以直接调用这个方法效率会更高</span><br><span class="line">多个类型声明</span><br><span class="line">在JavaScript中所有变量都可以使用单个var语句来声明，这样就是组合在一起的语句，以减少整个脚本的执行时间,，就如上面代码一样。</span><br></pre></td></tr></table></figure><h3 id="插入迭代器"><a href="#插入迭代器" class="headerlink" title="插入迭代器"></a>插入迭代器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如var name=values[i]; i++;前面两条语句可以写成var name=values[i++]</span><br></pre></td></tr></table></figure><h3 id="使用直接量"><a href="#使用直接量" class="headerlink" title="使用直接量"></a>使用直接量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var aTest = new Array(); //替换为</span><br><span class="line">var aTest = [];</span><br><span class="line">var aTest = new Object; //替换为</span><br><span class="line">var aTest = &#123;&#125;;</span><br><span class="line">var reg = new RegExp(); //替换为</span><br><span class="line">var reg = /../;</span><br><span class="line">//如果要创建具有一些特性的一般对象，也可以使用字面量，如下：</span><br><span class="line">var oFruit = new O;</span><br><span class="line">oFruit.color = <span class="string">"red"</span>;</span><br><span class="line">oFruit.name = <span class="string">"apple"</span>;</span><br><span class="line">//前面的代码可用对象字面量来改写成这样：</span><br><span class="line">var oFruit = &#123; color: <span class="string">"red"</span>, name: <span class="string">"apple"</span> &#125;;</span><br></pre></td></tr></table></figure><h3 id="使用DocumentFragment优化多次append"><a href="#使用DocumentFragment优化多次append" class="headerlink" title="使用DocumentFragment优化多次append"></a>使用DocumentFragment优化多次append</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">一旦需要更新DOM,请考虑使用文档碎片来构建DOM结构，然后再将其添加到现存的文档中。</span><br><span class="line"><span class="keyword">for</span> (var i = 0; i &lt; 1000; i++) &#123;</span><br><span class="line">    var el = document.createElement(<span class="string">'p'</span>);</span><br><span class="line">    el.innerHTML = i;</span><br><span class="line">    document.body.appendChild(el);</span><br><span class="line">&#125;</span><br><span class="line">//可以替换为：</span><br><span class="line">var frag = document.createDocumentFragment();</span><br><span class="line"><span class="keyword">for</span> (var i = 0; i &lt; 1000; i++) &#123;</span><br><span class="line">    var el = document.createElement(<span class="string">'p'</span>);</span><br><span class="line">    el.innerHTML = i;</span><br><span class="line">    frag.appendChild(el);</span><br><span class="line">&#125;</span><br><span class="line">document.body.appendChild(frag);</span><br></pre></td></tr></table></figure><h3 id="使用一次innerHTML赋值代替构建dom元素"><a href="#使用一次innerHTML赋值代替构建dom元素" class="headerlink" title="使用一次innerHTML赋值代替构建dom元素"></a>使用一次innerHTML赋值代替构建dom元素</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">对于大的DOM更改，使用innerHTML要比使用标准的DOM方法创建同样的DOM结构快得多。</span><br><span class="line">var frag = document.createDocumentFragment();</span><br><span class="line"><span class="keyword">for</span> (var i = 0; i &lt; 1000; i++) &#123;</span><br><span class="line">    var el = document.createElement(<span class="string">'p'</span>);</span><br><span class="line">    el.innerHTML = i;</span><br><span class="line">    frag.appendChild(el);</span><br><span class="line">&#125;</span><br><span class="line">document.body.appendChild(frag);</span><br><span class="line">//可以替换为：</span><br><span class="line">var html = [];</span><br><span class="line"><span class="keyword">for</span> (var i = 0; i &lt; 1000; i++) &#123;</span><br><span class="line">    html.push(<span class="string">'&lt;p&gt;'</span> + i + <span class="string">'&lt;/p&gt;'</span>);</span><br><span class="line">&#125;</span><br><span class="line">document.body.innerHTML = html.join(<span class="string">''</span>);</span><br><span class="line">通过模板元素<span class="built_in">clone</span>，替代createElement</span><br></pre></td></tr></table></figure><h3 id="插入HTML"><a href="#插入HTML" class="headerlink" title="插入HTML"></a>插入HTML</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">如果需要创建很多元素，应该先准备一个样板节点</span><br><span class="line">var frag = document.createDocumentFragment();</span><br><span class="line"><span class="keyword">for</span> (var i = 0; i &lt; 1000; i++) &#123;</span><br><span class="line">    var el = document.createElement(<span class="string">'p'</span>);</span><br><span class="line">    el.innerHTML = i;</span><br><span class="line">    frag.appendChild(el);</span><br><span class="line">&#125;</span><br><span class="line">document.body.appendChild(frag);</span><br><span class="line">//替换为：</span><br><span class="line">var frag = document.createDocumentFragment();</span><br><span class="line">var pEl = document.getElementsByTagName(<span class="string">'p'</span>)[0];</span><br><span class="line"><span class="keyword">for</span> (var i = 0; i &lt; 1000; i++) &#123;</span><br><span class="line">    var el = pEl.cloneNode(<span class="literal">false</span>);</span><br><span class="line">    el.innerHTML = i;</span><br><span class="line">    frag.appendChild(el);</span><br><span class="line">&#125;</span><br><span class="line">document.body.appendChild(frag);</span><br><span class="line">使用firstChild和nextSibling代替childNodes遍历dom元素</span><br><span class="line">var nodes = element.childNodes;</span><br><span class="line"><span class="keyword">for</span> (var i = 0, l = nodes.length; i &lt; l; i++) &#123;</span><br><span class="line">    var node = nodes[i];</span><br><span class="line">    //……</span><br><span class="line">&#125;</span><br><span class="line">//可以替换为：</span><br><span class="line">var node = element.firstChild;</span><br><span class="line"><span class="keyword">while</span> (node) &#123;</span><br><span class="line">    //……</span><br><span class="line">    node = node.nextSibling;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">删除dom节点之前,一定要删除注册在该节点上的事件,不管是用observe方式还是用attachEvent方式注册的事件,否则将会产生无法回 收的内存。另外，在removeChild和innerHTML=’’二者之间,尽量选择后者. 因为在sIEve(内存泄露监测工具)中监测的结果是用removeChild无法有效地释放dom节点</span><br></pre></td></tr></table></figure><h3 id="使用事件代理"><a href="#使用事件代理" class="headerlink" title="使用事件代理"></a>使用事件代理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">任何可以冒泡的事件都不仅仅可以在事件目标上进行处理，目标的任何祖先节点上也能处理，使用这个知识就可以将事件处理程序附加到更高的地方负责多个目标的事件处理，同样，对于内容动态增加并且子节点都需要相同的事件处理函数的情况，可以把事件注册提到父节点上，这样就不需要为每个子节点注册事件监听了。另外，现有的js库都采用observe方式来创建事件监听,其实现上隔离了dom对象和事件处理函数之间的循环引用,所以应该尽量采用这种方式来创建事件监听</span><br></pre></td></tr></table></figure><h3 id="重复使用的调用结果，事先保存到局部变量"><a href="#重复使用的调用结果，事先保存到局部变量" class="headerlink" title="重复使用的调用结果，事先保存到局部变量"></a>重复使用的调用结果，事先保存到局部变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//避免多次取值的调用开销</span><br><span class="line">var h1 = element1.clientHeight + num1;</span><br><span class="line">var h2 = element1.clientHeight + num2;</span><br><span class="line">//可以替换为：</span><br><span class="line">var eleHeight = element1.clientHeight;</span><br><span class="line">var h1 = eleHeight + num1;</span><br><span class="line">var h2 = eleHeight + num2;</span><br></pre></td></tr></table></figure><h3 id="注意NodeList"><a href="#注意NodeList" class="headerlink" title="注意NodeList"></a>注意NodeList</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">最小化访问NodeList的次数可以极大的改进脚本的性能</span><br><span class="line">var images = document.getElementsByTagName(<span class="string">'img'</span>);</span><br><span class="line"><span class="keyword">for</span> (var i = 0, len = images.length; i &lt; len; i++) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">编写JavaScript的时候一定要知道何时返回NodeList对象，这样可以最小化对它们的访问</span><br><span class="line">•进行了对getElementsByTagName()的调用</span><br><span class="line">•获取了元素的childNodes属性</span><br><span class="line">•获取了元素的attributes属性</span><br><span class="line">•访问了特殊的集合，如document.forms、document.images等等</span><br></pre></td></tr></table></figure><h3 id="优化循环"><a href="#优化循环" class="headerlink" title="优化循环"></a>优化循环</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">减值迭代</span><br><span class="line">var list = document.getElementsByTagName(<span class="string">'p'</span>);</span><br><span class="line"><span class="keyword">for</span> (var i = 0; i &lt; list.length; i++) &#123;</span><br><span class="line">    //……</span><br><span class="line">&#125;</span><br><span class="line">//替换为：</span><br><span class="line">var list = document.getElementsByTagName(<span class="string">'p'</span>);</span><br><span class="line"><span class="keyword">for</span> (var i = 0, l = list.length; i &lt; l; i++) &#123;</span><br><span class="line">    //……</span><br><span class="line">&#125;</span><br><span class="line">简化循环体</span><br><span class="line"><span class="keyword">while</span>循环的效率要优于<span class="keyword">for</span>(;;)</span><br><span class="line">var arr = [1, 2, 3, 4, 5, 6, 7];</span><br><span class="line">var sum = 0;</span><br><span class="line"><span class="keyword">for</span> (var i = 0, l = arr.length; i &lt; l; i++) &#123;</span><br><span class="line">    sum += arr[i];</span><br><span class="line">&#125;</span><br><span class="line">//可以考虑替换为：</span><br><span class="line">var arr = [1, 2, 3, 4, 5, 6, 7];</span><br><span class="line">var sum = 0, l = arr.length;</span><br><span class="line"><span class="keyword">while</span> (l--) &#123;</span><br><span class="line">    sum += arr[l];</span><br><span class="line">&#125;</span><br><span class="line">尽量少使用<span class="built_in">eval</span>函数</span><br><span class="line">不要使用Function构造器</span><br></pre></td></tr></table></figure><h3 id="不要给setTimeout或者setInterval传递字符串参数"><a href="#不要给setTimeout或者setInterval传递字符串参数" class="headerlink" title="不要给setTimeout或者setInterval传递字符串参数"></a>不要给setTimeout或者setInterval传递字符串参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var num = 0;</span><br><span class="line">setTimeout(<span class="string">'num++'</span>, 10);</span><br><span class="line">//可以替换为：</span><br><span class="line">var num = 0;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">addNum</span></span>() &#123;</span><br><span class="line">    num++;</span><br><span class="line">&#125;</span><br><span class="line">setTimeout(addNum, 10);</span><br></pre></td></tr></table></figure><h3 id="缩短否定检测"><a href="#缩短否定检测" class="headerlink" title="缩短否定检测"></a>缩短否定检测</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (oTest != <span class="string">'#ff0000'</span>) &#123;</span><br><span class="line">    //<span class="keyword">do</span> something</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (oTest != null) &#123;</span><br><span class="line">    //<span class="keyword">do</span> something</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (oTest != <span class="literal">false</span>) &#123;</span><br><span class="line">    //<span class="keyword">do</span> something</span><br><span class="line">&#125;</span><br><span class="line">//虽然这些都正确，但用逻辑非操作符来操作也有同样的效果：</span><br><span class="line"><span class="keyword">if</span> (!oTest) &#123;</span><br><span class="line">    //<span class="keyword">do</span> something</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="条件分支"><a href="#条件分支" class="headerlink" title="条件分支"></a>条件分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">在同一条件，多个条件分支时，使用switch优于<span class="keyword">if</span>：switch分支选择的效率高于<span class="keyword">if</span>，在IE下尤为明显。4分支的测试，IE下switch的执行时间约为<span class="keyword">if</span>的一半。</span><br><span class="line">•使用三目运算符替代条件分支</span><br><span class="line"><span class="keyword">if</span> (a &gt; b) &#123;</span><br><span class="line">    num = a;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    num = b;</span><br><span class="line">&#125;</span><br><span class="line">//可以替换为：</span><br><span class="line">num = a &gt; b ? a : b;</span><br></pre></td></tr></table></figure><h3 id="使用常量"><a href="#使用常量" class="headerlink" title="使用常量"></a>使用常量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">重复值:任何在多处用到的值都应该抽取为一个常量</span><br><span class="line">任意可能会更改的值，比如用到字面量值需要改变的就应该被提取出来作为一个常量</span><br></pre></td></tr></table></figure><h3 id="避免与null进行比较"><a href="#避免与null进行比较" class="headerlink" title="避免与null进行比较"></a>避免与null进行比较</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">由于JavaScript是弱类型的，所以它不会做任何的自动类型检查，所以如果看到与null进行比较的代码，尝试使用以下技术替换</span><br><span class="line">•如果值应为一个引用类型，使用instanceof操作符检查其构造函数</span><br><span class="line">•如果值应为一个基本类型，作用typeof检查其类型</span><br><span class="line">•如果是希望对象包含某个特定的方法名，则使用typeof操作符确保指定名字的方法存在于对象上</span><br></pre></td></tr></table></figure><h3 id="避免全局量"><a href="#避免全局量" class="headerlink" title="避免全局量"></a>避免全局量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">//糟糕的全局变量和全局函数</span><br><span class="line">var current = null;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">init</span></span>()&#123;</span><br><span class="line">//...</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">change</span></span>() &#123;</span><br><span class="line">    //...</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">verify</span></span>() &#123;</span><br><span class="line">    //...</span><br><span class="line">&#125;</span><br><span class="line">//解决办法有很多，建议的方法是：</span><br><span class="line">//如果变量和函数不需要在“外面”引用，那么就可以使用一个没有名字的方法将他们全都包起来。</span><br><span class="line">(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">var current = null;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">init</span></span>() &#123;</span><br><span class="line">    //...</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">change</span></span>() &#123;</span><br><span class="line">    //...</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">verify</span></span>() &#123;</span><br><span class="line">    //...</span><br><span class="line">&#125;</span><br><span class="line">&#125;)();</span><br><span class="line">//如果变量和函数需要在“外面”引用，需要把变量和函数放在一个“命名空间”中</span><br><span class="line">//这里用一个<span class="keyword">function</span>做命名空间而不是一个var，因为在前者中声明<span class="keyword">function</span>更简单，而且能保护隐私数据</span><br><span class="line">myNameSpace = <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">    var current = null;</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">init</span></span>() &#123;</span><br><span class="line">        //...</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">change</span></span>() &#123;</span><br><span class="line">        //...</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">verify</span></span>() &#123;</span><br><span class="line">        //...</span><br><span class="line">    &#125;</span><br><span class="line">//所有需要在命名空间外调用的函数和属性都要写在<span class="built_in">return</span>里面</span><br><span class="line">    <span class="built_in">return</span> &#123;</span><br><span class="line">        init: init,</span><br><span class="line">        //甚至可以为函数和属性命名一个别名</span><br><span class="line">        <span class="built_in">set</span>: change</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="对象的所有权"><a href="#对象的所有权" class="headerlink" title="对象的所有权"></a>对象的所有权</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">JavaScript可以在任何时候修改任意对象，这样就可以以不可预计的方式覆写默认的行为，如果不负责维护某个对象，它的对象或者它的方法，就不要对它进行修改，具体一点就是说：</span><br><span class="line">•不要为实例或原型添加属性</span><br><span class="line">•不要为实例或者原型添加方法</span><br><span class="line">•不要重定义已经存在的方法</span><br><span class="line">•不要重复定义其它团队成员已经实现的方法，永远不要修改不是由自己所有的对象，可以通过以下方式为对象创建新的功能:</span><br><span class="line">•创建包含所需功能的新对象，并用它与相关对象进行交互</span><br><span class="line">•创建自定义类型，继承需要进行修改的类型，然后可以为自定义类型添加额外功能</span><br></pre></td></tr></table></figure><h3 id="循环引用"><a href="#循环引用" class="headerlink" title="循环引用"></a>循环引用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">如果循环引用中包含DOM对象或者ActiveX对象，那么就会发生内存泄露。内存泄露的后果是在浏览器关闭前，即使是刷新页面，这部分内存不会被浏览器释放。</span><br><span class="line">简单的循环引用：</span><br><span class="line">var el = document.getElementById(<span class="string">'MyElement'</span>);</span><br><span class="line">var func = <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">    //…</span><br><span class="line">&#125;</span><br><span class="line">el.func = func;</span><br><span class="line">func.element = el;</span><br><span class="line">但是通常不会出现这种情况。通常循环引用发生在为dom元素添加闭包作为expendo的时候。</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">init</span></span>() &#123;</span><br><span class="line">    var el = document.getElementById(<span class="string">'MyElement'</span>);</span><br><span class="line">    el.onclick = <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        //……</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">init();</span><br><span class="line">init在执行的时候，当前上下文叫做context。这个时候，context引用了el，el引用了<span class="keyword">function</span>，<span class="keyword">function</span>引用了context。这时候形成了一个循环引用。</span><br><span class="line">下面2种方法可以解决循环引用：</span><br><span class="line">1)置空dom对象</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">init</span></span>() &#123;</span><br><span class="line">    var el = document.getElementById(<span class="string">'MyElement'</span>);</span><br><span class="line">    el.onclick = <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        //……</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">init();</span><br><span class="line">//可以替换为：</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">init</span></span>() &#123;</span><br><span class="line">    var el = document.getElementById(<span class="string">'MyElement'</span>);</span><br><span class="line">    el.onclick = <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        //……</span><br><span class="line">    &#125;</span><br><span class="line">    el = null;</span><br><span class="line">&#125;</span><br><span class="line">init();</span><br><span class="line">将el置空，context中不包含对dom对象的引用，从而打断循环应用。</span><br><span class="line">如果需要将dom对象返回，可以用如下方法：</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">init</span></span>() &#123;</span><br><span class="line">    var el = document.getElementById(<span class="string">'MyElement'</span>);</span><br><span class="line">    el.onclick = <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        //……</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> el;</span><br><span class="line">&#125;</span><br><span class="line">init();</span><br><span class="line">//可以替换为：</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">init</span></span>() &#123;</span><br><span class="line">    var el = document.getElementById(<span class="string">'MyElement'</span>);</span><br><span class="line">    el.onclick = <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        //……</span><br><span class="line">    &#125;</span><br><span class="line">    try &#123;</span><br><span class="line">        <span class="built_in">return</span> el;</span><br><span class="line">    &#125; finally &#123;</span><br><span class="line">        el = null;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">init();</span><br><span class="line">2)构造新的context</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">init</span></span>() &#123;</span><br><span class="line">    var el = document.getElementById(<span class="string">'MyElement'</span>);</span><br><span class="line">    el.onclick = <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        //……</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">init();</span><br><span class="line">//可以替换为：</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">elClickHandler</span></span>() &#123;</span><br><span class="line">    //……</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">init</span></span>() &#123;</span><br><span class="line">    var el = document.getElementById(<span class="string">'MyElement'</span>);</span><br><span class="line">    el.onclick = elClickHandler;</span><br><span class="line">&#125;</span><br><span class="line">init();</span><br><span class="line">把<span class="keyword">function</span>抽到新的context中，这样，<span class="keyword">function</span>的context就不包含对el的引用，从而打断循环引用。</span><br></pre></td></tr></table></figure><h3 id="通过javascript创建的dom对象，必须append到页面中"><a href="#通过javascript创建的dom对象，必须append到页面中" class="headerlink" title="通过javascript创建的dom对象，必须append到页面中"></a>通过javascript创建的dom对象，必须append到页面中</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">create</span></span>() &#123;</span><br><span class="line">    var gc = document.getElementById(<span class="string">'GC'</span>);</span><br><span class="line">    <span class="keyword">for</span> (var i = 0; i &lt; 5000; i++) &#123;</span><br><span class="line">        var el = document.createElement(<span class="string">'div'</span>);</span><br><span class="line">        el.innerHTML = <span class="string">"test"</span>;</span><br><span class="line">        //下面这句可以注释掉，看看浏览器在任务管理器中，点击按钮然后刷新后的内存变化</span><br><span class="line">        gc.appendChild(el);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="释放dom元素占用的内存"><a href="#释放dom元素占用的内存" class="headerlink" title="释放dom元素占用的内存"></a>释放dom元素占用的内存</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将dom元素的innerHTML设置为空字符串，可以释放其子元素占用的内存。</span><br></pre></td></tr></table></figure><h3 id="释放javascript对象"><a href="#释放javascript对象" class="headerlink" title="释放javascript对象"></a>释放javascript对象</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">对象：obj = null</span><br><span class="line">对象属性：delete obj.myproperty</span><br><span class="line">数组item：使用数组的splice方法释放数组中不用的item</span><br><span class="line">避免string的隐式装箱</span><br><span class="line">对string的方法调用，比如<span class="string">'xxx'</span>.length，浏览器会进行一个隐式的装箱操作，将字符串先转换成一个String对象。推荐对声明有可能使用String实例方法的字符串时，采用如下写法：</span><br><span class="line">var myString = new String(<span class="string">'Hello World'</span>);</span><br></pre></td></tr></table></figure><h3 id="性能方面的注意事项"><a href="#性能方面的注意事项" class="headerlink" title="性能方面的注意事项"></a>性能方面的注意事项</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">尽量使用原生方法</span><br><span class="line">switch语句相对<span class="keyword">if</span>较快</span><br><span class="line">通过将<span class="keyword">case</span>语句按照最可能到最不可能的顺序进行组织</span><br><span class="line">位运算较快</span><br><span class="line">当进行数字运算时，位运算操作要比任何布尔运算或者算数运算快</span><br><span class="line">巧用||和&amp;&amp;布尔运算符</span><br><span class="line"><span class="keyword">function</span> eventHandler(e) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!e) e = window.event;</span><br><span class="line">&#125;</span><br><span class="line">//可以替换为：</span><br><span class="line"><span class="keyword">function</span> eventHandler(e) &#123;</span><br><span class="line">    e = e || window.event;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (myobj) &#123;</span><br><span class="line">    doSomething(myobj);</span><br><span class="line">&#125;</span><br><span class="line">//可以替换为：</span><br><span class="line">myobj &amp;&amp; doSomething(myobj);</span><br></pre></td></tr></table></figure><h3 id="避免错误应注意的地方"><a href="#避免错误应注意的地方" class="headerlink" title="避免错误应注意的地方"></a>避免错误应注意的地方</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">每条语句末尾须加分号</span><br><span class="line">在<span class="keyword">if</span>语句中，即使条件表达式只有一条语句也要用&#123;&#125;把它括起来，以免后续如果添加了语句之后造成逻辑错误</span><br><span class="line">使用+号时需谨慎</span><br><span class="line">JavaScript 和其他编程语言不同的是，在 JavaScript 中，<span class="string">'+'</span>除了表示数字值相加，字符串相连接以外，还可以作一元运算符用，把字符串转换为数字。因而如果使用不当，则可能与自增符<span class="string">'++'</span>混淆而引起计算错误</span><br><span class="line"> var valueA = 20;</span><br><span class="line"> var valueB = <span class="string">"10"</span>;</span><br><span class="line"> alert(valueA + valueB);     //ouput: 2010 </span><br><span class="line"> alert(valueA + (+valueB));  //output: 30 </span><br><span class="line"> alert(valueA + +valueB);    //output:30 </span><br><span class="line"> alert(valueA ++ valueB);     //Compile error</span><br><span class="line">使用<span class="built_in">return</span>语句需要注意</span><br><span class="line">一条有返回值的<span class="built_in">return</span>语句不要用()括号来括住返回值，如果返回表达式，则表达式应与<span class="built_in">return</span>关键字在同一行，以避免压缩时，压缩工具自动加分号而造成返回与开发人员不一致的结果</span><br><span class="line"> <span class="keyword">function</span> <span class="function"><span class="title">F1</span></span>() &#123;</span><br><span class="line">     var valueA = 1;</span><br><span class="line">     var valueB = 2;</span><br><span class="line">     <span class="built_in">return</span> valueA + valueB;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">function</span> <span class="function"><span class="title">F2</span></span>() &#123;</span><br><span class="line">     var valueA = 1;</span><br><span class="line">     var valueB = 2;</span><br><span class="line">     <span class="built_in">return</span></span><br><span class="line">     valueA + valueB;</span><br><span class="line"> &#125;</span><br><span class="line"> alert(F1());  //output: 3 </span><br><span class="line"> alert(F2());  //ouput: undefined</span><br></pre></td></tr></table></figure><h3 id="和-的区别"><a href="#和-的区别" class="headerlink" title="==和===的区别"></a>==和===的区别</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">避免在<span class="keyword">if</span>和<span class="keyword">while</span>语句的条件部分进行赋值，如<span class="keyword">if</span> (a = b)，应该写成<span class="keyword">if</span> (a == b)，但是在比较是否相等的情况下，最好使用全等运行符，也就是使用===和!==操作符会相对于==和!=会好点。==和!=操作符会进行类型强制转换</span><br><span class="line">var valueA = <span class="string">"1"</span>;</span><br><span class="line">var valueB = 1;</span><br><span class="line"><span class="keyword">if</span> (valueA == valueB) &#123;</span><br><span class="line">    alert(<span class="string">"Equal"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    alert(<span class="string">"Not equal"</span>);</span><br><span class="line">&#125;</span><br><span class="line">//output: <span class="string">"Equal"</span></span><br><span class="line"><span class="keyword">if</span> (valueA === valueB) &#123;</span><br><span class="line">    alert(<span class="string">"Equal"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    alert(<span class="string">"Not equal"</span>);</span><br><span class="line">&#125;</span><br><span class="line">//output: <span class="string">"Not equal"</span></span><br></pre></td></tr></table></figure><h3 id="不要使用生偏语法"><a href="#不要使用生偏语法" class="headerlink" title="不要使用生偏语法"></a>不要使用生偏语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">代码不方便以后维护</span><br></pre></td></tr></table></figure><h3 id="函数返回统一类型"><a href="#函数返回统一类型" class="headerlink" title="函数返回统一类型"></a>函数返回统一类型</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">为了规范和以后维护时容易理解</span><br></pre></td></tr></table></figure><h3 id="检查数据类型"><a href="#检查数据类型" class="headerlink" title="检查数据类型"></a>检查数据类型</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">为了安全性及可用性，用typeof方法来检测<span class="keyword">function</span>接受的输入是否合法</span><br></pre></td></tr></table></figure><h3 id="何时用单引号，何时用双引号"><a href="#何时用单引号，何时用双引号" class="headerlink" title="何时用单引号，何时用双引号"></a>何时用单引号，何时用双引号</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">建议在HTML中使用双引号，在JavaScript中使用单引号，但为了兼容各个浏览器，也为了解析时不会出错，定义JSON对象时，最好使用双引号</span><br></pre></td></tr></table></figure><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">用JSLint运行JavaScript验证器来确保没有语法错误或者是代码没有潜在的问</span><br><span class="line">•部署之前推荐使用压缩工具将JS文件压缩</span><br><span class="line">•文件编码统一用UTF-8</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>javascript立即调用函数表达式</title>
      <link href="/2016/09/04/javascript-callback/"/>
      <content type="html"><![CDATA[<h2 id="javascript"><a href="#javascript" class="headerlink" title="javascript"></a>javascript</h2><h3 id="自执行"><a href="#自执行" class="headerlink" title="自执行"></a>自执行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">在JavaScript里，任何<span class="keyword">function</span>在执行的时候都会创建一个执行上下文，因为为<span class="keyword">function</span>声明的变量和<span class="keyword">function</span>有可能 只在该<span class="keyword">function</span>内部，这个上下文，在调用<span class="keyword">function</span>的时候，提供了一种简单的方式来创建自由变量或私有子<span class="keyword">function</span>。</span><br><span class="line">// 由于该<span class="keyword">function</span>里返回了另外一个<span class="keyword">function</span>，其中这个<span class="keyword">function</span>可以访问自由变量i</span><br><span class="line">// 所有说，这个内部的<span class="keyword">function</span>实际上是有权限可以调用内部的对象。</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">makeCounter</span></span>() &#123;</span><br><span class="line">    // 只能在makeCounter内部访问i</span><br><span class="line">    var i = 0;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        console.log(++i);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line">// 注意，counter和counter2是不同的实例，分别有自己范围内的i。</span><br><span class="line">var counter = makeCounter();</span><br><span class="line">counter(); // logs: 1</span><br><span class="line">counter(); // logs: 2</span><br><span class="line">var counter2 = makeCounter();</span><br><span class="line">counter2(); // logs: 1</span><br><span class="line">counter2(); // logs: 2</span><br><span class="line">alert(i); // 引用错误：i没有defind（因为i是存在于makeCounter内部）。</span><br><span class="line">很多情况下，不需要makeCounter多个实例，甚至某些<span class="keyword">case</span>下，也不需要显示的返回值</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="核心"><a href="#核心" class="headerlink" title="核心"></a>核心</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">声明类似<span class="keyword">function</span> <span class="function"><span class="title">foo</span></span>()&#123;&#125;或var foo = <span class="function"><span class="title">function</span></span>()&#123;&#125;函数的时候，通过在后面加个括弧就可以实现自执行，例如foo()，看代码：</span><br><span class="line">// 因为想下面第一个声明的<span class="keyword">function</span>可以在后面加一个括弧()就可以自己执行了，比如foo()，// 因为foo仅仅是<span class="function"><span class="title">function</span></span>() &#123; /* code */ &#125;这个表达式的一个引用 </span><br><span class="line">var foo = <span class="function"><span class="title">function</span></span>()&#123; /* code */ &#125; </span><br><span class="line"><span class="function"><span class="title">function</span></span>()&#123; /* code */ &#125;(); // SyntaxError: Unexpected token</span><br><span class="line">//上述代码，如果运行，第2个代码会出错，因为在解析器解析全局的<span class="keyword">function</span>或者<span class="keyword">function</span>内部<span class="keyword">function</span>关键字的时候，默认是认为<span class="keyword">function</span>声明，而不是<span class="keyword">function</span>表达式，如果不显示告诉编译器，它默认会声明成一个缺少名字的<span class="keyword">function</span>，并且抛出一个语法错误信息，因为<span class="keyword">function</span>声明需要一个名字。</span><br><span class="line">// 但是如果你在括弧()里传入一个表达式，将不会有异常抛出</span><br><span class="line">// 但是foo函数依然不会执行</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">foo</span></span>()&#123; /* code */ &#125;(1);</span><br><span class="line">// 因为它完全等价于下面这个代码，一个<span class="keyword">function</span>声明后面，又声明了一个毫无关系的表达式： </span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">foo</span></span>()&#123; /* code */ &#125;</span><br><span class="line">(1);</span><br></pre></td></tr></table></figure><h3 id="自执行函数表达式"><a href="#自执行函数表达式" class="headerlink" title="自执行函数表达式"></a>自执行函数表达式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">要解决上述问题，非常简单，只需要用大括弧将代码的代码全部括住就行了，因为JavaScript里括弧()里面不能包含语句，所以在这一点上，解析器在解析<span class="keyword">function</span>关键字的时候，会将相应的代码解析成<span class="keyword">function</span>表达式，而不是<span class="keyword">function</span>声明。</span><br><span class="line">// 下面2个括弧()都会立即执行</span><br><span class="line">(<span class="function"><span class="title">function</span></span> () &#123; /* code */ &#125; ()); // 推荐使用这个</span><br><span class="line">(<span class="function"><span class="title">function</span></span> () &#123; /* code */ &#125;)(); // 但是这个也是可以用的</span><br><span class="line">// 由于括弧()和JS的&amp;&amp;，异或，逗号等操作符是在函数表达式和函数声明上消除歧义的</span><br><span class="line">// 所以一旦解析器知道其中一个已经是表达式了，其它的也都默认为表达式了</span><br><span class="line">var i = <span class="function"><span class="title">function</span></span> () &#123; <span class="built_in">return</span> 10; &#125; ();</span><br><span class="line"><span class="literal">true</span> &amp;&amp; <span class="function"><span class="title">function</span></span> () &#123; /* code */ &#125; ();</span><br><span class="line">0, <span class="function"><span class="title">function</span></span> () &#123; /* code */ &#125; ();</span><br><span class="line">// 如果不在意返回值，或者不怕难以阅读</span><br><span class="line">// 甚至可以在<span class="keyword">function</span>前面加一元操作符号</span><br><span class="line">!<span class="function"><span class="title">function</span></span> () &#123; /* code */ &#125; ();</span><br><span class="line">~<span class="function"><span class="title">function</span></span> () &#123; /* code */ &#125; ();</span><br><span class="line">-<span class="function"><span class="title">function</span></span> () &#123; /* code */ &#125; ();</span><br><span class="line">+<span class="function"><span class="title">function</span></span> () &#123; /* code */ &#125; ();</span><br><span class="line">// 还有一个情况，使用new关键字,也可以用，执行效率没测试过</span><br><span class="line">new <span class="function"><span class="title">function</span></span> () &#123; /* code */ &#125;</span><br><span class="line">new <span class="function"><span class="title">function</span></span> () &#123; /* code */ &#125; () // 如果需要传递参数，只需要加上括弧()</span><br></pre></td></tr></table></figure><h3 id="用闭包保存状态"><a href="#用闭包保存状态" class="headerlink" title="用闭包保存状态"></a>用闭包保存状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">和普通<span class="keyword">function</span>执行的时候传参数一样，自执行的函数表达式也可以这么传参，因为闭包直接可以引用传入的这些参数，利用这些被lock住的传入参数，自执行函数表达式可以有效地保存状态。</span><br><span class="line">// 这个代码是错误的，因为变量i从来就没被locked住</span><br><span class="line">// 相反，当循环执行以后，在点击的时候i才获得数值</span><br><span class="line">// 因为这个时候i操真正获得值</span><br><span class="line">// 所以说无论点击哪个连接，最终显示的都是I am link <span class="comment">#10（如果有10个a元素的话）</span></span><br><span class="line">var elems = document.getElementsByTagName(<span class="string">'a'</span>);</span><br><span class="line"><span class="keyword">for</span> (var i = 0; i &lt; elems.length; i++) &#123;</span><br><span class="line">    elems[i].addEventListener(<span class="string">'click'</span>, <span class="keyword">function</span> (e) &#123;</span><br><span class="line">        e.preventDefault();</span><br><span class="line">        alert(<span class="string">'I am link #'</span> + i);</span><br><span class="line">    &#125;, <span class="string">'false'</span>);</span><br><span class="line">&#125;</span><br><span class="line">// 这个是可以用的，因为他在自执行函数表达式闭包内部</span><br><span class="line">// i的值作为locked的索引存在，在循环执行结束以后，尽管最后i的值变成了a元素总数</span><br><span class="line">// 但闭包内部的lockedInIndex值是没有改变，因为已经执行完毕了</span><br><span class="line">// 所以当点击连接的时候，结果是正确的</span><br><span class="line">var elems = document.getElementsByTagName(<span class="string">'a'</span>);</span><br><span class="line"><span class="keyword">for</span> (var i = 0; i &lt; elems.length; i++) &#123;</span><br><span class="line">    (<span class="keyword">function</span> (lockedInIndex) &#123;</span><br><span class="line">        elems[i].addEventListener(<span class="string">'click'</span>, <span class="keyword">function</span> (e) &#123;</span><br><span class="line">            e.preventDefault();</span><br><span class="line">            alert(<span class="string">'I am link #'</span> + lockedInIndex);</span><br><span class="line">        &#125;, <span class="string">'false'</span>);</span><br><span class="line">    &#125;)(i);</span><br><span class="line">&#125;</span><br><span class="line">// 也可以像下面这样应用，在处理函数那里使用自执行函数表达式</span><br><span class="line">// 而不是在addEventListener外部</span><br><span class="line">// 但是相对来说，上面的代码更具可读性</span><br><span class="line">var elems = document.getElementsByTagName(<span class="string">'a'</span>);</span><br><span class="line"><span class="keyword">for</span> (var i = 0; i &lt; elems.length; i++) &#123;</span><br><span class="line">    elems[i].addEventListener(<span class="string">'click'</span>, (<span class="keyword">function</span> (lockedInIndex) &#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="keyword">function</span> (e) &#123;</span><br><span class="line">            e.preventDefault();</span><br><span class="line">            alert(<span class="string">'I am link #'</span> + lockedInIndex);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;)(i), <span class="string">'false'</span>);</span><br><span class="line">&#125;</span><br><span class="line">其实，上面2个例子里的lockedInIndex变量，也可以换成i，因为和外面的i不在一个作用域，所以不会出现问题，这也是匿名函数+闭包的威力。</span><br></pre></td></tr></table></figure><h3 id="自执行匿名函数和立即执行的函数表达式区别"><a href="#自执行匿名函数和立即执行的函数表达式区别" class="headerlink" title="自执行匿名函数和立即执行的函数表达式区别"></a>自执行匿名函数和立即执行的函数表达式区别</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">// 这是一个自执行的函数，函数内部执行自身，递归</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">foo</span></span>() &#123; foo(); &#125;</span><br><span class="line">// 这是一个自执行的匿名函数，因为没有标示名称</span><br><span class="line">// 必须使用arguments.callee属性来执行自己</span><br><span class="line">var foo = <span class="function"><span class="title">function</span></span> () &#123; arguments.callee(); &#125;;</span><br><span class="line">// 这可能也是一个自执行的匿名函数，仅仅是foo标示名称引用它自身</span><br><span class="line">// 如果将foo改变成其它的，将得到一个used-to-self-execute匿名函数</span><br><span class="line">var foo = <span class="function"><span class="title">function</span></span> () &#123; foo(); &#125;;</span><br><span class="line">// 没有调用自身，它只是立即执行而已。</span><br><span class="line">(<span class="function"><span class="title">function</span></span> () &#123; /* code */ &#125; ());</span><br><span class="line">// 为函数表达式添加一个标示名称，可以方便Debug</span><br><span class="line">// 但一定命名了，这个函数就不再是匿名的了</span><br><span class="line">(<span class="keyword">function</span> <span class="function"><span class="title">foo</span></span>() &#123; /* code */ &#125; ());</span><br><span class="line">// 立即调用的函数表达式也可以自执行，不过可能不常用罢了</span><br><span class="line">(<span class="function"><span class="title">function</span></span> () &#123; arguments.callee(); &#125; ());</span><br><span class="line">(<span class="keyword">function</span> <span class="function"><span class="title">foo</span></span>() &#123; foo(); &#125; ());</span><br><span class="line">// 另外，下面的代码在黑莓5里执行会出错，因为在一个命名的函数表达式里，它的名称是undefined</span><br><span class="line">(<span class="keyword">function</span> <span class="function"><span class="title">foo</span></span>() &#123; foo(); &#125; ());</span><br><span class="line">注：arguments.callee在ECMAScript 5 strict mode里被废弃了，所以在这个模式下，其实是不能用的。</span><br></pre></td></tr></table></figure><h3 id="Module模式"><a href="#Module模式" class="headerlink" title="Module模式"></a>Module模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">// 创建一个立即调用的匿名函数表达式</span><br><span class="line">// <span class="built_in">return</span>一个变量，其中这个变量里包含要暴露的东西</span><br><span class="line">// 返回的这个变量将赋值给counter，而不是外面声明的<span class="keyword">function</span>自身</span><br><span class="line">var counter = (<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">    var i = 0;</span><br><span class="line">    <span class="built_in">return</span> &#123;</span><br><span class="line">        get: <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">            <span class="built_in">return</span> i;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="built_in">set</span>: <span class="keyword">function</span> (val) &#123;</span><br><span class="line">            i = val;</span><br><span class="line">        &#125;,</span><br><span class="line">        increment: <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">            <span class="built_in">return</span> ++i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125; ());</span><br><span class="line">// counter是一个带有多个属性的对象，上面的代码对于属性的体现其实是方法</span><br><span class="line">counter.get(); // 0</span><br><span class="line">counter.set(3);</span><br><span class="line">counter.increment(); // 4</span><br><span class="line">counter.increment(); // 5</span><br><span class="line">counter.i; // undefined 因为i不是返回对象的属性</span><br><span class="line">i; // 引用错误: i 没有定义（因为i只存在于闭包）</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mysql_innodb_myisam</title>
      <link href="/2016/09/03/mysql-innodb-myisam/"/>
      <content type="html"><![CDATA[<h2 id="mysql-innodb-myisam"><a href="#mysql-innodb-myisam" class="headerlink" title="mysql_innodb_myisam"></a>mysql_innodb_myisam</h2><h3 id="两者区别"><a href="#两者区别" class="headerlink" title="两者区别"></a>两者区别</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">MySQL默认采用的是MyISAM。</span><br><span class="line">MyISAM不支持事务，而InnoDB支持。InnoDB的AUTOCOMMIT默认是打开的，即每条SQL语句会默认被封装成一个事务，自动提交，这样会影响速度，所以最好是把多条SQL语句显示放在begin和commit之间，组成一个事务去提交</span><br><span class="line">InnoDB支持数据行锁定，MyISAM不支持行锁定，只支持锁定整个表。即MyISAM同一个表上的读锁和写锁是互斥的，MyISAM并发读写时如果等待队列中既有读请求又有写请求，默认写请求的优先级高，即使读请求先到，所以MyISAM不适合于有大量查询和修改并存的情况，那样查询进程会长时间阻塞。因为MyISAM是锁表，所以某项读操作比较耗时会使其他写进程锁死。</span><br><span class="line">InnoDB支持外键，MyISAM不支持。</span><br><span class="line">InnoDB的主键范围更大，最大是MyISAM的2倍。</span><br><span class="line">InnoDB不支持全文索引，而MyISAM支持。全文索引是指对char、varchar和text中的每个词（停用词除外）建立倒排序索引。MyISAM的全文索引其实没啥用，因为它不支持中文分词，必须由使用者分词后加入空格再写到数据表里，而且少于4个汉字的词会和停用词一样被忽略掉。</span><br><span class="line">MyISAM支持GIS数据，InnoDB不支持。即MyISAM支持以下空间数据对象：Point,Line,Polygon,Surface等。</span><br><span class="line">没有<span class="built_in">where</span>的count(*)使用MyISAM要比InnoDB快得多。因为MyISAM内置了一个计数器，count(*)时它直接从计数器中读，而InnoDB必须扫描全表。所以在InnoDB上执行count(*)时一般要伴随<span class="built_in">where</span>，且<span class="built_in">where</span>中要包含主键以外的索引列。为什么这里特别强调“主键以外”？因为InnoDB中primary index是和raw data存放在一起的，而secondary index则是单独存放，然后有个指针指向primary key。所以只是count(*)的话使用secondary index扫描更快，而primary key则主要在扫描索引同时要返回raw data时的作用较大。</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>phpstorm以及xdebug安装</title>
      <link href="/2016/09/02/phpstorm-problem/"/>
      <content type="html"><![CDATA[<h3 id="phpstorm安装"><a href="#phpstorm安装" class="headerlink" title="phpstorm安装"></a>phpstorm安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">首先安装PhpStorm</span><br><span class="line">官方地址：https://www.jetbrains.com/phpstorm/</span><br><span class="line">注册码可以在这里找：http://idea.lanyus.com/</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="xdebug安装"><a href="#xdebug安装" class="headerlink" title="xdebug安装"></a>xdebug安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">谷歌浏览器用Xdebug helper扩展 火狐用theeasiestxdebug</span><br><span class="line">下载xdebug</span><br><span class="line">需要找到与PHP版本相配的xdebug ，也可通过https://xdebug.org/download.php 找到与PHP版本对应的xdebug</span><br><span class="line">如果在这里不知道如何选择xdebug版本， 打开 https://xdebug.org/wizard.php 在浏览器访问phpinfo.php然后全选界面的内容拷到文本框里就可以得到相要的版本，注：不要把HTML源代码拷进去</span><br><span class="line">将下载的php_xdebug.dll文件 拷贝到 php 安装路径ext文件夹下。</span><br><span class="line">然后配置php.ini 注xdebug.remote_port端口必须与phpstorm配置的端口一致</span><br><span class="line">以下是我的配置文件</span><br><span class="line">[xdebug]</span><br><span class="line">zend_extension = D:\phpStudy\php56n\ext\php_xdebug-2.5.0-5.6-vc11-nts.dll</span><br><span class="line">;允许远程IDE调试</span><br><span class="line">xdebug.profiler_output_name = <span class="string">"cachegrind.out.%t-%s"</span></span><br><span class="line">xdebug.remote_autostart = 1</span><br><span class="line">xdebug.remote_enable=1</span><br><span class="line">;远程IDE所在HOST和PORT</span><br><span class="line">xdebug.remote_host=localhost</span><br><span class="line">xdebug.remote_port=9003</span><br><span class="line">xdebug.remote_handler=dbgp</span><br><span class="line">;开启远程调试自动启动</span><br><span class="line">xdebug.remote_autostart = 1</span><br><span class="line">;可以是任意Key，这里设定为PHPSTORM</span><br><span class="line">xdebug.idekey = <span class="string">"PHPSTORM"</span></span><br><span class="line">xdebug.default_enable = 1</span><br><span class="line">;开启自动跟踪</span><br><span class="line">xdebug.auto_trace = 1</span><br><span class="line">xdebug.show_exception_trace = 1</span><br><span class="line">xdebug.collect_vars = 1</span><br><span class="line">xdebug.collect_return = 1</span><br><span class="line">xdebug.collect_params = 1</span><br><span class="line">xdebug.profiler_enable = 1</span><br><span class="line">xdebug.profiler_enable_trigger = 0</span><br><span class="line">xdebug.trace_output_dir=<span class="string">"D:\webserver\xdebug"</span></span><br><span class="line">;把执行情况的分析文件写入到指定目录中</span><br><span class="line">xdebug.profiler_enable=on</span><br><span class="line">xdebug.profiler_output_dir=<span class="string">"D:\webserver\xdebug"</span></span><br></pre></td></tr></table></figure><h3 id="编辑器设置"><a href="#编辑器设置" class="headerlink" title="编辑器设置"></a>编辑器设置</h3><p><img src="1.png" alt="1"><br><img src="2.png" alt="2"><br><img src="3.png" alt="3"></p>]]></content>
      
      
        <tags>
            
            <tag> phpstorm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>git基本操作</title>
      <link href="/2016/09/01/git-command/"/>
      <content type="html"><![CDATA[<p>下载安装Git客户端<br><a href="https://git-scm.com/download/" target="_blank" rel="noopener">git下载</a></p><h2 id="git-command"><a href="#git-command" class="headerlink" title="git command"></a>git command</h2><h3 id="安装完后配置"><a href="#安装完后配置" class="headerlink" title="安装完后配置"></a>安装完后配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"Your Name"</span></span><br><span class="line">$ git config --global user.email <span class="string">"email@example.com"</span></span><br><span class="line">注：单独设置名称邮箱去掉参数 --global</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="创建本地仓库"><a href="#创建本地仓库" class="headerlink" title="创建本地仓库"></a>创建本地仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure><h3 id="把文件添加到仓库"><a href="#把文件添加到仓库" class="headerlink" title="把文件添加到仓库"></a>把文件添加到仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add readme.txt</span><br></pre></td></tr></table></figure><h3 id="提交文件到仓库"><a href="#提交文件到仓库" class="headerlink" title="提交文件到仓库"></a>提交文件到仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m <span class="string">"注释"</span></span><br></pre></td></tr></table></figure><h3 id="查看是否有提交（冲突操作）"><a href="#查看是否有提交（冲突操作）" class="headerlink" title="查看是否有提交（冲突操作）"></a>查看是否有提交（冲突操作）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br></pre></td></tr></table></figure><h3 id="查看文件修改的内容"><a href="#查看文件修改的内容" class="headerlink" title="查看文件修改的内容"></a>查看文件修改的内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git diff 文件名</span><br></pre></td></tr></table></figure><h3 id="查看历史记录"><a href="#查看历史记录" class="headerlink" title="查看历史记录"></a>查看历史记录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> (显示信息多)</span><br><span class="line">$ git <span class="built_in">log</span> --pretty=oneline (显示信息少)</span><br></pre></td></tr></table></figure><h3 id="版本回退及查看"><a href="#版本回退及查看" class="headerlink" title="版本回退及查看"></a>版本回退及查看</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard HEAD^ 那么如果要回退到上上个版本只需把HEAD^ 改成 HEAD^^ 以此类推</span><br><span class="line">$ git reset --hard HEAD~100 回退到前100个版本</span><br><span class="line">$ cat 文件名</span><br><span class="line">$ git <span class="built_in">log</span></span><br></pre></td></tr></table></figure><h3 id="恢复版本回退及查看"><a href="#恢复版本回退及查看" class="headerlink" title="恢复版本回退及查看"></a>恢复版本回退及查看</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git reflog （左侧会显示对应的版本号）</span><br><span class="line">$ git reset --hard 版本号</span><br><span class="line">$ cat 文件名</span><br></pre></td></tr></table></figure><h3 id="撤销添加数据命令"><a href="#撤销添加数据命令" class="headerlink" title="撤销添加数据命令"></a>撤销添加数据命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -- 文件名</span><br></pre></td></tr></table></figure><h3 id="同步到Github"><a href="#同步到Github" class="headerlink" title="同步到Github"></a>同步到Github</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add origin git@github.com:yourname/yourname.github.io.git或者 git remote add origin https://github.com/yourname/yourname.github.io.git</span><br><span class="line">$ git push -u origin master (第一次推送，要添加-u) 之后用 $ git push origin master 推送</span><br></pre></td></tr></table></figure><h3 id="从github上下载到本地"><a href="#从github上下载到本地" class="headerlink" title="从github上下载到本地"></a>从github上下载到本地</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> git@github.com:youngxhui/nuc_JavaLab.git 文件夹目录/某个位置 或者 git <span class="built_in">clone</span> https://github.com/youngxhui/项目名称</span><br></pre></td></tr></table></figure><h3 id="创建分支-b-参数表示创建并切换"><a href="#创建分支-b-参数表示创建并切换" class="headerlink" title="创建分支 -b 参数表示创建并切换"></a>创建分支 -b 参数表示创建并切换</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b dev 相当于 $ git branch dev $ git checkout dev 两步完成</span><br></pre></td></tr></table></figure><h3 id="查看分支"><a href="#查看分支" class="headerlink" title="查看分支"></a>查看分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -r 查看远程分支</span><br><span class="line">$ git branch -a 查看所有分支</span><br></pre></td></tr></table></figure><h3 id="切换回master分支"><a href="#切换回master分支" class="headerlink" title="切换回master分支"></a>切换回master分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout master</span><br></pre></td></tr></table></figure><h3 id="把dev分支合并到master"><a href="#把dev分支合并到master" class="headerlink" title="把dev分支合并到master"></a>把dev分支合并到master</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git merge dev或者$ git rebase dev</span><br></pre></td></tr></table></figure><h3 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -d dev</span><br></pre></td></tr></table></figure><h3 id="合并dev分支禁用fast-forward"><a href="#合并dev分支禁用fast-forward" class="headerlink" title="合并dev分支禁用fast forward"></a>合并dev分支禁用fast forward</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git merge --no-ff - m <span class="string">"merge with no-ff"</span> dev或者$ git rebase --no-ff - m <span class="string">"merge with no-ff"</span></span><br></pre></td></tr></table></figure><h3 id="查看删除的分支信息"><a href="#查看删除的分支信息" class="headerlink" title="查看删除的分支信息"></a>查看删除的分支信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --graph --pretty=oneline --abbrev-commit</span><br></pre></td></tr></table></figure><h3 id="隐藏创建的分支上的内容并查看状态（一般创建临时分支用）"><a href="#隐藏创建的分支上的内容并查看状态（一般创建临时分支用）" class="headerlink" title="隐藏创建的分支上的内容并查看状态（一般创建临时分支用）"></a>隐藏创建的分支上的内容并查看状态（一般创建临时分支用）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git stash</span><br><span class="line">$ git status</span><br></pre></td></tr></table></figure><h3 id="查看分支隐藏的文件列表"><a href="#查看分支隐藏的文件列表" class="headerlink" title="查看分支隐藏的文件列表"></a>查看分支隐藏的文件列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git stash list</span><br></pre></td></tr></table></figure><h3 id="恢复隐藏的文件列表"><a href="#恢复隐藏的文件列表" class="headerlink" title="恢复隐藏的文件列表"></a>恢复隐藏的文件列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">方法一、$ git stash apply 恢复后，stash内容并不删除，需要使用命令git stash drop来删除</span><br><span class="line">方法二、$ git stash pop 恢复的同时把stash内容也会删除</span><br></pre></td></tr></table></figure><h3 id="多人协作查看信息"><a href="#多人协作查看信息" class="headerlink" title="多人协作查看信息"></a>多人协作查看信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git remote 查看远程库的信息</span><br><span class="line">$ git remote --v 查看远程库的详细信息</span><br></pre></td></tr></table></figure><h3 id="抓取分支-多人协作工作模式"><a href="#抓取分支-多人协作工作模式" class="headerlink" title="抓取分支(多人协作工作模式)"></a>抓取分支(多人协作工作模式)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ git push orgin dev首先把dev分支推送到远程</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/youname/项目名称  克隆远程库</span><br><span class="line">$ git checkout -b dev origin/dev 创建远程origin的dev分支到本地</span><br><span class="line">$ git add 文件名</span><br><span class="line">$ git commit -m <span class="string">"注释"</span></span><br><span class="line">$ git push origin dev 把现在的dev分支推送到远程</span><br><span class="line">$ git checkout dev 切换到dev分支</span><br><span class="line">$ git add 文件名</span><br><span class="line">$ git commit -m <span class="string">"注释"</span></span><br><span class="line">$ git push origin dev (不同人推送同个文件修改同个文件同个地方报错)</span><br><span class="line">解决：</span><br><span class="line">$ git pull 把最新的提交从origin/dev抓下来,此步骤操作失败</span><br><span class="line">没有指定本地dev分支与远程origin/dev分支的链接：</span><br><span class="line">a、设置dev和origin/dev的链接 $ git branch --<span class="built_in">set</span>-upstream dev origin/dev</span><br><span class="line">b、$ git pull</span><br><span class="line">c、$ cat 文件名</span><br><span class="line">d、$ git add 文件名</span><br><span class="line">e、$ git commit -m <span class="string">"注释"</span></span><br><span class="line">f、$ git push origin dev</span><br></pre></td></tr></table></figure><h3 id="git-高级命令"><a href="#git-高级命令" class="headerlink" title="git 高级命令"></a>git 高级命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend </span><br><span class="line">用于给先前commit的添加新的代码。本地仓库中并不会产生一个新的commit，而是将本次提交的代码提交到先前的commit中去，且提交时可以更新先前的commit的提交信息。减少了不必要的commit节点，从而也就降低了工作树的复杂度。需要注意的是，并非所有的代码的更改都应添加到先前的commit中去，应是情况而定，只有与先前的commit的用途一致的代码才应提交到先前的commit中去。</span><br><span class="line">git commit -am <span class="string">"message"</span></span><br><span class="line">用于将工作区中的代码直接提交到本地仓库，而无需手动添加到index区。一般的流程是，当我们修改了代码后，首先应该运行git add &lt;files&gt;命令将代码从工作区放入index区，然后运行git commit命令将其提交到本地仓库中。git commit -am <span class="string">"message"</span>实现了将这两条命令合并在一起的操作，更加快捷高效。</span><br><span class="line">git checkout -b &lt;branch name&gt;</span><br><span class="line"> 用于创建一个新的分支并将代码库切换到这个新的分支上去。git checkout -b &lt;branch name&gt; ＝ git branch &lt;branch name&gt; + git checkout &lt;branch name&gt;</span><br><span class="line">git fetch / git merge</span><br><span class="line"> 与git pull这条命令的作用相同。这组命令更安全实用，与git pull这条命令的作用相同。利用git fetch拉取代码后，且在merge代码前可以有机会查看代码的改动。</span><br><span class="line">git cherry-pick &lt;commit ID&gt;</span><br><span class="line"> 将想要的commit摘取到当前的分支上，并自动提交到本地仓库。例如创建了一个分支用于新的版本1.0的release，同时也维护着master分支的代。当在master上面发现了bug并将其修复后，同样也需要在1.0的分支上将这些修改拿过来，此时git cherry-pick &lt;commit ID&gt;就可以派上用场了，它将这些修改的commit从master分支上摘取过来，并自动提交到当前的分支。</span><br><span class="line">git stash / git stash apply stash@&#123;index&#125;</span><br><span class="line"> 暂时保存当前的修改，并在之后的某个时间将代码恢复。例如当在一个分支上工作时修改了很多代码，但是任务还没完成，还没有到能够提交代码。发现了一个非常严重的bug，首先要做的就是先运行git stash命令将这些修改暂存，然后切换到master命令上去创建一个新的针对这个bug修复的分支，并在这个新的分支上工作。当完成修复工作后，切换回到之前的分支上，通过命令git stash stash@&#123;index&#125;将之前暂存的改动提取出来。</span><br><span class="line">git pull --rebase / git rebase --<span class="built_in">continue</span></span><br><span class="line"> 用于从远程代码库拉取代码到本地，主要针对在一个相同分支上的代码操作（比如master分支）。首先将改动的代码提交到本地仓库，然后利用git pull --rebase命令将远程仓库的代码拉取到本地，它将其获取的所有的commit放在我们新提交的commit的底部，这步完成后可能会有冲突，等将冲突解决完成后，再利用git rebase --<span class="built_in">continue</span>命令将解决冲突后的代码提交到之前提交的代码中去。</span><br><span class="line">git rebase -i master / git rebase --<span class="built_in">continue</span></span><br><span class="line"> 让当前的分支从master同步最新的代码，而且还可以将分支上的多个commit合并成为一个，可以让branch更简洁，毕竟branch上的代码都是为了实现一个功能。如果同步时有冲突，解决完冲突后，使用git rebase --<span class="built_in">continue</span>将代码提交到先前的commit中去。</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux工作命令</title>
      <link href="/2016/08/31/linux-work-command/"/>
      <content type="html"><![CDATA[<h2 id="linux-command"><a href="#linux-command" class="headerlink" title="linux command"></a>linux command</h2><h3 id="一、常用的系统工作命令"><a href="#一、常用的系统工作命令" class="headerlink" title="一、常用的系统工作命令"></a>一、常用的系统工作命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">将<span class="built_in">echo</span>命令的字符串输出到终端 <span class="built_in">echo</span> Linux</span><br><span class="line">用<span class="built_in">echo</span>命令查看SHELL变量的值(前面有$符号) <span class="built_in">echo</span> <span class="variable">$SHELL</span></span><br><span class="line">查看本机主机名 <span class="built_in">echo</span> <span class="variable">$HOSTNAME</span></span><br><span class="line">查看当前系统的时间 date</span><br><span class="line">设置系统时间为2016年6月19号早上6点7分 date -s <span class="string">"20160619 6:07:00"</span></span><br><span class="line">重启计算机 reboot</span><br><span class="line">下载node源代码 wget http://nodejs.org/dist/v4.4.5/node-v4.4.5.tar.gz</span><br><span class="line">实现一个纯文本界面的浏览器 a、yum install elinks b、elinks www.baidu.com</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="二、常用的系统检测命令"><a href="#二、常用的系统检测命令" class="headerlink" title="二、常用的系统检测命令"></a>二、常用的系统检测命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">获取网卡配置与网络状态等信息 ifconfig</span><br><span class="line">查看系统内核版本等信息 uname -a</span><br><span class="line">查看系统负载情况，输出内容分别为系统当前时间，系统已运行时间，当前在线用户以及平均负载值 uptime</span><br><span class="line">显示系统的诊断信息,操作系统版本号,物理内及其它信息 dmesg | more</span><br><span class="line">显示硬盘空间 df -h</span><br><span class="line">显示当前系统中内存的使用量情况 free -m</span><br><span class="line">动态实时查看系统内存,CPU,进程 top</span><br><span class="line">查看当前登录主机的用户情况 who</span><br><span class="line">查看所有系统的登入纪录 last</span><br><span class="line">显示历史执行过的命令 <span class="built_in">history</span></span><br></pre></td></tr></table></figure><h3 id="三、工作目录切换命令"><a href="#三、工作目录切换命令" class="headerlink" title="三、工作目录切换命令"></a>三、工作目录切换命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">显示当前的工作目录  <span class="built_in">pwd</span></span><br><span class="line">切换到/etc目录 <span class="built_in">cd</span> /etc; 返回上级目录 <span class="built_in">cd</span> -; 返回用户自己的家目录 <span class="built_in">cd</span> ~</span><br><span class="line">查看目录有哪些文件 ls -al</span><br></pre></td></tr></table></figure><h3 id="四、文本文件编辑命令"><a href="#四、文本文件编辑命令" class="headerlink" title="四、文本文件编辑命令"></a>四、文本文件编辑命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">查看纯文本文件（较短的） cat 文件名</span><br><span class="line">查看纯文本文件（较长的） more 文件名</span><br><span class="line">查看纯文本的前N行 head -n 20 文件名</span><br><span class="line">查看纯文本的后N行 tail -n 10 文件名</span><br><span class="line">查看特殊格式的文件  od 参数(如-ta) 文件名</span><br><span class="line">将tr.txt文件的内容转换成大写 cat tr.txt | tr[a-z][A-Z]</span><br><span class="line">统计当前系统中的用户个数 wc -l /etc/passwd</span><br><span class="line">查看当前系统中所有用户的名称：参数作用: -d以<span class="string">":"</span>来做分隔符，-f参数代表只看第一列的内容 cut -d: -f1 /etc/passwd</span><br><span class="line">比较多个文本文件的差异 diff A.txt B.txt</span><br></pre></td></tr></table></figure><h3 id="五、文件目录管理命令"><a href="#五、文件目录管理命令" class="headerlink" title="五、文件目录管理命令"></a>五、文件目录管理命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">创建空白文件与修改文件时间 touch 文件名</span><br><span class="line">创建空白的文件夹 mkdir 文件夹名</span><br><span class="line">复制文件或目录 cp 源文件 目标文件</span><br><span class="line">cp -a tool /home/vpser/www /*把tool目录，复制到www目录下*/</span><br><span class="line">将文件aaa重命名为bbb(移动文件) mv aaa bbb</span><br><span class="line">删除普通文件并提示确认信息 rm 文件名</span><br><span class="line">删除普通文件或目录文件，不提示确认信息rm -rf文件或目录名</span><br></pre></td></tr></table></figure><h3 id="六、用户与组管理命令"><a href="#六、用户与组管理命令" class="headerlink" title="六、用户与组管理命令"></a>六、用户与组管理命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">创建名为Nomad的用户，并定义家目录路径、UID以及登录解释器(不允许登录) useradd -d /home/linux -u 8888 -s /sbin/nologin Nomad</span><br><span class="line">查看Nomad用户信息 id Noamd</span><br><span class="line">修改当前用户的密码 passwd</span><br><span class="line">修改其他用户的密码 passwd 其他用户名</span><br><span class="line">删除用户及其家目录 userdel -d 用户名</span><br><span class="line">添加 sudo 权限 visudo <span class="comment">#找到如下行数 root  ALL=(ALL)   ALL 添加username  ALL=(ALL)  ALL</span></span><br><span class="line">创建名称为Nomad的用户群组 groupadd Nomad</span><br></pre></td></tr></table></figure><h3 id="七、打包压缩文件命令"><a href="#七、打包压缩文件命令" class="headerlink" title="七、打包压缩文件命令"></a>七、打包压缩文件命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">打包并压缩文件 tar -czvf 压缩包名.tar.gz 文件名</span><br><span class="line">解压并展开压缩包 tar -xzvf 压缩包名.tar.gz</span><br></pre></td></tr></table></figure><h3 id="八、文件查询搜索命令"><a href="#八、文件查询搜索命令" class="headerlink" title="八、文件查询搜索命令"></a>八、文件查询搜索命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">搜索某个文件中某个关键词 grep 关键词 文本文件</span><br><span class="line">搜索在/etc/中所有以host开头的文件 find /etc -name <span class="string">"host*"</span> -<span class="built_in">print</span></span><br><span class="line">/ : 向下查找（后加关键字）</span><br><span class="line">? : 向上查找（后加关键字）</span><br><span class="line">n : 下一条符合的记录</span><br></pre></td></tr></table></figure><p><a href="http://www.vpser.net/manage/vi.html" target="_blank" rel="noopener">vim详细教程</a></p>]]></content>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mysql常用命令</title>
      <link href="/2016/08/30/mysql-im-ex/"/>
      <content type="html"><![CDATA[<h2 id="mysql-command"><a href="#mysql-command" class="headerlink" title="mysql command"></a>mysql command</h2><h3 id="查看数据库版本"><a href="#查看数据库版本" class="headerlink" title="*查看数据库版本"></a>*查看数据库版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT VERSION();</span><br></pre></td></tr></table></figure><h3 id="一、从命令行登录MySQL数据库服务器"><a href="#一、从命令行登录MySQL数据库服务器" class="headerlink" title="一、从命令行登录MySQL数据库服务器"></a>一、从命令行登录MySQL数据库服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">登录MySQL,如果连接远程数据库，需要用-h指定hostname /usr/<span class="built_in">local</span>/mysql/bin/mysql -h hostname -u root -p</span><br><span class="line">登录使用默认3306端口的MySQL /usr/<span class="built_in">local</span>/mysql/bin/mysql -u root -p</span><br><span class="line">通过TCP连接管理不同端口的多个MySQL（注意：MySQL4.1以上版本才有此项功能） /usr/<span class="built_in">local</span>/mysql/bin/mysql -u root -p --protocol=tcp --host=localhost --port=3307</span><br><span class="line">通过socket套接字管理不同端口的多个MySQL /usr/<span class="built_in">local</span>/mysql/bin/mysql -u root -p --socket=/tmp/mysql3307.sock</span><br><span class="line">通过端口和IP管理不同端口的多个MySQL /usr/<span class="built_in">local</span>/mysql/bin/mysql -u root -p -P 3306 -h 127.0.0.1</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="二、数据库操作SQL语句"><a href="#二、数据库操作SQL语句" class="headerlink" title="二、数据库操作SQL语句"></a>二、数据库操作SQL语句</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">启动mysql net start mysql</span><br><span class="line">停止mysql net stop mysql</span><br><span class="line">登录mysql mysql -h hostname -u username -p 或者mysql -u username -ppassword</span><br><span class="line">退出mysql <span class="built_in">exit</span> 或者 quit</span><br><span class="line">显示服务器上当前存在什么数据库 SHOW DATABASES;</span><br><span class="line">创建名称为rewin的数据库 CREATE DATABASE rewin;</span><br><span class="line">删除名称为rewin的数据库 DROP DATABASE rewin;</span><br><span class="line">选择rewin数据库 USE rewin;</span><br></pre></td></tr></table></figure><h3 id="三、表操作SQL语句（登录之后必须用以上的USE命令选择一个数据库，再进行表操作）"><a href="#三、表操作SQL语句（登录之后必须用以上的USE命令选择一个数据库，再进行表操作）" class="headerlink" title="三、表操作SQL语句（登录之后必须用以上的USE命令选择一个数据库，再进行表操作）"></a>三、表操作SQL语句（登录之后必须用以上的USE命令选择一个数据库，再进行表操作）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">显示当前数据库中存在什么表 SHOW TABLES;</span><br><span class="line">创建数据库表zhangyan：在mysql&gt;后粘贴以下SQL语句，存储引擎为MYISAM，字段id为主键、唯一索引 CREATE TABLE `zhangyan` ( `id` INT( 5 ) UNSIGNED NOT NULL AUTO_INCREMENT , `name` VARCHAR( 20 ) NOT NULL , `password` CHAR( 32 ) NOT NULL , `time` DATETIME NOT NULL , `photo_number` FLOAT( 10 ) NOT NULL , `content` TEXT NOT NULL , PRIMARY KEY ( `id` ) ) ENGINE = MYISAM ;</span><br><span class="line">查看zhangyan表结构 DESCRIBE zhangyan;</span><br><span class="line">从zhangyan表中检索所有记录 SELECT * FROM zhangyan;</span><br><span class="line">从zhangyan表中检索特定的行：字段name等于abc，字段photo_number等于1，按字段id降序排列 SELECT * FROM zhangyan WHERE name = abc AND photo_number=1 ORDER BY id DESC;</span><br><span class="line">显示zhangyan表所有的name以字母“bob”开头和phone_number为“3444444”的第1至第5条记录 SELECT * FROM zhangyan WHERE name like <span class="string">"Bob%"</span> AND phone_number = <span class="string">'3444444'</span> <span class="built_in">limit</span> 1,5; </span><br><span class="line">从zhangyan表中检索指定的字段：name和password SELECT name, password FROM zhangyan;</span><br><span class="line">从zhangyan表中检索出唯一的不重复记录： SELECT DISTINCT name FROM zhangyan;</span><br><span class="line">插入信息到zhangyan表 INSERT INTO zhangyan (id, name, password, time, photo_number, content) VALUES (, abc, 123456,2007-08-06 14:32:12, 23.41, hello world);</span><br><span class="line">更新zhangyan表中的指定信息 UPDATE zhangyan SET content = hello china WHERE name = abc;</span><br><span class="line">删除zhangyan表中的指定信息 DELETE FROM zhangyan WHERE id = 1;</span><br><span class="line">清空zhangyan表 DELETE FROM zhangyan;</span><br><span class="line">删除zhangyan表 DROP TABLE zhangyan;</span><br><span class="line">更改表结构，将zhangyan表name字段的字段类型改为CHAR(25) alter table zhangyan modify column name char(25);</span><br><span class="line">返回zhangyan表的各列信息show columns from zhangyan;</span><br><span class="line">使用值“whatever”过滤zhangyan表显示选定的某些行 SELECT * FROM zhangyan WHERE [field name] = <span class="string">"whatever"</span>;</span><br><span class="line">使用正则表达式查找记录。使用“正则表达式二进制”强制区分大小写。此命令查找zhangyan表以a开头的任何记录 SELECT * FROM zhangyan WHERE rec RLIKE <span class="string">"^a"</span>;</span><br><span class="line">返回zhangyan表中字段name唯一不同的记录(去重复) SELECT DISTINCT name FROM zhangyan;或select name from zhangyan group by name;</span><br><span class="line">返回zhangyan表的行数 SELECT COUNT(*) FROM zhangyan;</span><br><span class="line">统计zhangyan表指定列值的总和 SELECT SUM(*) FROM zhangyan;</span><br></pre></td></tr></table></figure><h3 id="四、数据库权限操作SQL语句"><a href="#四、数据库权限操作SQL语句" class="headerlink" title="四、数据库权限操作SQL语句"></a>四、数据库权限操作SQL语句</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">创建一个具有root权限，可从任何IP登录的用户sina，密码为zhangyan GRANT ALL PRIVILEGES ON *.* TO sina@% IDENTIFIED BY zhangyan;</span><br><span class="line">创建一个具有<span class="string">"数据操作"</span>、<span class="string">"结构操作"</span>权限，只能从192.168.1.***登录的用户sina，密码为zhangyan GRANT SELECT , INSERT , UPDATE , DELETE , FILE , CREATE , DROP , INDEX , ALTER , CREATE TEMPORARY TABLES , CREATE VIEW , SHOW VIEW , CREATE ROUTINE, ALTER ROUTINE, EXECUTE ON *.* TO sina@192.168.1.% IDENTIFIED BY zhangyan;</span><br><span class="line">创建一个只拥有<span class="string">"数据操作"</span>权限，只能从192.168.1.24登录，只能操作rewin数据库的zhangyan表的用户sina，密码为zhangyan GRANT SELECT , INSERT , UPDATE , DELETE ON  rewin.zhangyan TO sina@192.168.1.24 IDENTIFIED BY zhangyan;</span><br><span class="line">创建一个拥有<span class="string">"数据操作"</span>、<span class="string">"结构操作"</span>权限，可从任何IP登录，只能操作rewin数据库的用户sina，密码为zhangyan GRANT SELECT , INSERT , UPDATE , DELETE , CREATE , DROP , INDEX , ALTER , CREATE TEMPORARY TABLES , CREATE VIEW , SHOW VIEW , CREATE ROUTINE, ALTER ROUTINE, EXECUTE ON rewin.* TO sina@% IDENTIFIED BY zhangyan;</span><br><span class="line">删除用户 DROP USER sina@%;</span><br><span class="line">MySQL中将字符串aaa批量替换为bbb的SQL语句 UPDATE 表名 SET 字段名 = REPLACE (字段名, aaa, bbb);</span><br><span class="line">修复损坏的表 a、用root帐号从命令行登录MySQL：mysql -u root -p b、输入root帐号的密码。c、选定数据库名（本例中的数据库名为student）：use student;修复损坏的表（本例中要修复的表为smis_user_student）：repair table smis_user_student;udent;</span><br><span class="line">新建一个用户，以root登录。切换到mysql数据库，创建用户，刷新权限 mysql -u root -p; INSERT INTO user (Host,User,Password) VALUES(<span class="string">'%'</span>,<span class="string">'username'</span>,PASSWORD(<span class="string">'password'</span>)); flush privileges;</span><br><span class="line">从unix命令行更改用户密码 /usr/<span class="built_in">local</span>/mysql/bin/mysqladmin -u username -h hostname.blah.org -p password <span class="string">'new-password'</span>;</span><br><span class="line">从mysql命令行更改用户密码。以root登录，设置密码，更新权限 /etc/init.d/mysql stop; mysqld_safe --skip-grant-tables &amp;; mysql -u root; use mysql; update user <span class="built_in">set</span> password=PASSWORD(<span class="string">"newrootpassword"</span>) <span class="built_in">where</span> User=<span class="string">'root'</span>; flush privileges; quit; /etc/init.d/mysql stop; /etc/init.d/mysql start;</span><br><span class="line">root密码为空时，设置root密码 mysqladmin -u root password newpassword;</span><br><span class="line">更新root密码 mysqladmin -u root -p oldpassword newpassword;</span><br><span class="line">允许用户“bob”从localhost以密码“passwd”连接服务器。以root登录，切换mysql数据库。设置权限，更新权限 mysql -u root -p; use mysql; grant usage on *.* to bob@localhost identified by <span class="string">'passwd'</span>; flush privileges;</span><br><span class="line">为数据库db设置权限。以root登录，切换到mysql数据库，授予权限，更新权限 mysql -u root -p; use mysql; INSERT INTO db (Host,Db,User,Select_priv,Insert_priv,Update_priv,Delete_priv,Create_priv,Drop_priv) VALUES (<span class="string">'%'</span>,<span class="string">'databasename'</span>,<span class="string">'username'</span>,<span class="string">'Y'</span>,<span class="string">'Y'</span>,<span class="string">'Y'</span>,<span class="string">'Y'</span>,<span class="string">'Y'</span>,<span class="string">'N'</span>); flush privileges;或者grant all privileges on databasename.* to username@localhost; flush privileges;</span><br><span class="line">更新已存在表的数据 UPDATE [table name] SET Select_priv = <span class="string">'Y'</span>,Insert_priv = <span class="string">'Y'</span>,Update_priv = <span class="string">'Y'</span> <span class="built_in">where</span> [field name] = <span class="string">'user'</span>;</span><br><span class="line">删除表中[field name] = ‘whatever’的行 ELETE from [table name] <span class="built_in">where</span> [field name] = <span class="string">'whatever'</span>;</span><br><span class="line">更新数据库的权限/特权 flush privileges;</span><br><span class="line">删除列 alter table [table name] drop column [column name];</span><br><span class="line">新增列到db alter table [table name] add column [new column name] varchar (20);</span><br><span class="line">更改列名 alter table [table name] change [old column name] [new column name] varchar (50);</span><br><span class="line">更改表名 alter table table1 rename as table2;</span><br><span class="line">增加唯一的列 alter table [table name] add unique ([column name]);</span><br><span class="line">设置列值大点(修改字段类型或长度) alter table [table name] modify [column name] VARCHAR(3);</span><br><span class="line">删除唯一列 alter table [table name] drop index [colmn name];</span><br></pre></td></tr></table></figure><h3 id="五、MySQL拷贝表结构、表数据"><a href="#五、MySQL拷贝表结构、表数据" class="headerlink" title="五、MySQL拷贝表结构、表数据"></a>五、MySQL拷贝表结构、表数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">只复制拷贝表结构，不复制拷贝表数据 CREATE TABLE 新的表名 LIKE 要复制的表名;</span><br><span class="line">复制表结构和数据，但是新的表结构不会有主键和索引 CREATE TABLE 新的表名 AS (SELECT * FROM 要复制的表名);</span><br><span class="line">真正的复制表结构和完整数据，先复制表结构，再插入所有数据 CREATE TABLE 新的表名 LIKE 要复制的表名; INSERT INTO 新的表名 (SELECT * FROM 要复制的表名);</span><br></pre></td></tr></table></figure><h3 id="六、MySQL导入导出"><a href="#六、MySQL导入导出" class="headerlink" title="六、MySQL导入导出"></a>六、MySQL导入导出</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">导入一个CSV文件到表 LOAD DATA INFILE <span class="string">'/tmp/filename.csv'</span> replace INTO TABLE [table name] FIELDS TERMINATED BY <span class="string">','</span> LINES TERMINATED BY <span class="string">'\n'</span> (field1,field2,field3);</span><br><span class="line">导出所有数据库到sql文件 mysqldump -u root -ppassword --opt &gt;/tmp/alldatabases.sql;</span><br><span class="line">导出一个数据库 mysqldump -u username -ppassword --databases databasename &gt;/tmp/databasename.sql;</span><br><span class="line">从一个数据库导出一个表 mysqldump -c -u username -ppassword databasename tablename &gt; /tmp/databasename.tablename.sql;</span><br><span class="line">从sql文件还原数据库（数据表）mysql -u username -ppassword databasename &lt; /tmp/databasename.sql;</span><br><span class="line">导出整个数据库</span><br><span class="line">mysqldump -u 用户名 -p 数据库名 &gt; 导出的文件名</span><br><span class="line">mysqldump -uroot -proot dingding &gt; 1.sql</span><br><span class="line">导出一个表</span><br><span class="line">mysqldump -u 用户名 -p 数据库名 表名&gt; 导出的文件名</span><br><span class="line">mysqldump -uroot -proot dingding &gt;F:/dingding/wcnc.sql</span><br><span class="line">导出一个数据库结构</span><br><span class="line">mysqldump -u wcnc -p -d --add-drop-table smgp_apps_wcnc &gt;d:wcnc_db.sql</span><br><span class="line">导入数据库</span><br><span class="line">常用<span class="built_in">source</span>命令</span><br><span class="line">进入mysql数据库控制台，</span><br><span class="line">如mysql -u root -p</span><br><span class="line">mysql&gt;use 数据库</span><br><span class="line">然后使用<span class="built_in">source</span>命令，后面参数为脚本文件(如这里用到的.sql)</span><br><span class="line">mysql&gt;<span class="built_in">source</span> d:wcnc_db.sql</span><br></pre></td></tr></table></figure><h3 id="七、MySQL索引的查看创建和删除"><a href="#七、MySQL索引的查看创建和删除" class="headerlink" title="七、MySQL索引的查看创建和删除"></a>七、MySQL索引的查看创建和删除</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">普通索引 ALTER TABLE table_name ADD INDEX index_name (column_list);或者CREATE INDEX index_name ON table_name (column_list);</span><br><span class="line">UNIQUE索引 ALTER TABLE table_name ADD UNIQUE (column_list);或者CREATE UNIQUE INDEX index_name ON table_name (column_list);</span><br><span class="line">PRIMARY KEY索引 ALTER TABLE table_name ADD PRIMARY KEY (column_list);</span><br><span class="line">对students表在sid上添加PRIMARY KEY索引 ALTER TABLE students ADD PRIMARY KEY (sid);</span><br><span class="line">删除索引 DROP INDEX index_name ON talbe_name;或者ALTER TABLE table_name DROP INDEX index_name;</span><br><span class="line">只在删除PRIMARY KEY索引时使用 ALTER TABLE table_name DROP PRIMARY KEY;</span><br><span class="line">查看索引 SHOW index FROM `tblname`;或者SHOW keys FROM `tblname`;</span><br></pre></td></tr></table></figure><h3 id="八、mysql修改表存储引擎"><a href="#八、mysql修改表存储引擎" class="headerlink" title="八、mysql修改表存储引擎"></a>八、mysql修改表存储引擎</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table tablename <span class="built_in">type</span>=innodb;</span><br><span class="line">alter table tablename <span class="built_in">type</span>=myisam;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello KuGou</title>
      <link href="/2016/08/29/hello-kugou/"/>
      <content type="html"><![CDATA[<pre><code>Hello,KuGou!!! This is my blog~~~.</code></pre><h2 id="perfect"><a href="#perfect" class="headerlink" title="perfect"></a>perfect</h2><h3 id="perfect-perfect-perfect"><a href="#perfect-perfect-perfect" class="headerlink" title="perfect perfect perfect"></a>perfect perfect perfect</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perfect perfect perfect perfect perfect</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
  
  
    
    <entry>
      <title>404 Not Found：该页无法显示!!!</title>
      <link href="//404.html"/>
      <content type="html"><![CDATA[<style type="text/css">    .article-header {        padding: 0;        padding-top: 26px;        border-left: none;        text-align: center;    }    .article-header:hover {        border-left: none;    }    .article-title {        font-size: 2.1em;    }    strong a {        color: #747474;    }    .article-meta {        display: none;    }    .share {        display: none;    }    .ds-meta {        display: none;    }    .player {        margin-left: -10px;    }    .sign {        text-align: right;        font-style: italic;    }      #page-visit {        display: none;    }    .center {        text-align: center;        height: 2.5em;        font-weight: bold;    }    .article-entry hr {        margin: 0;    }    .pic {        text-align: center;        margin: 0;    }    .pic br {          display: none;      }    #container .article-info-post.article-info {      display: none;      }    #container .article .article-title {    padding: 0;    }</style>]]></content>
    </entry>
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
    <entry>
      <title>关于我</title>
      <link href="/about/index.html"/>
      <content type="html"><![CDATA[<p>哈哈哈哈<del>~</del></p><p>优质资源：<br>知乎周刊：<a href="http://zhuanlan.zhihu.com/Weekly" target="_blank" rel="noopener">http://zhuanlan.zhihu.com/Weekly</a><br>码农周刊：<a href="http://weekly.manong.io/" target="_blank" rel="noopener">http://weekly.manong.io/</a><br>Pycoder’s Weekly：<a href="http://pycoders.com/archive/" target="_blank" rel="noopener">http://pycoders.com/archive/</a><br>Hacker News：<a href="https://news.ycombinator.com/" target="_blank" rel="noopener">https://news.ycombinator.com/</a><br>Startup News：<a href="http://news.dbanotes.net/" target="_blank" rel="noopener">http://news.dbanotes.net/</a><br>极客头条：<a href="http://geek.csdn.net/" target="_blank" rel="noopener">http://geek.csdn.net/</a><br>InfoQ：<a href="http://www.infoq.com/cn" target="_blank" rel="noopener">http://www.infoq.com/cn</a><br>Stack Overflow：<a href="http://stackoverflow.com/" target="_blank" rel="noopener">http://stackoverflow.com/</a><br>GitHub：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a><br>FreeBuf：<a href="http://www.freebuf.com/" target="_blank" rel="noopener">http://www.freebuf.com/</a><br>WooYun：<a href="http://drops.wooyun.org/" target="_blank" rel="noopener">http://drops.wooyun.org/</a><br>csdn：<a href="http://www.csdn.net/" target="_blank" rel="noopener">http://www.csdn.net/</a></p><p>在线学习：<br>实验楼：<a href="http://www.shiyanlou.com/" target="_blank" rel="noopener">http://www.shiyanlou.com/</a> Linuxer必去，玩转Linux最好的地方。<br>Codecademy:<a href="http://www.codecademy.com/" target="_blank" rel="noopener">http://www.codecademy.com/</a><br>Teamtreehouse:<a href="http://teamtreehouse.com/" target="_blank" rel="noopener">http://teamtreehouse.com/</a></p><p>技术社区：<br>开源中国：<a href="http://www.oschina.net/" target="_blank" rel="noopener">http://www.oschina.net/</a><br>博客园：<a href="http://www.cnblogs.com/" target="_blank" rel="noopener">http://www.cnblogs.com/</a><br>51CTO：<a href="http://www.51cto.com/" target="_blank" rel="noopener">http://www.51cto.com/</a><br>V2EX：<a href="http://v2ex.com/" target="_blank" rel="noopener">http://v2ex.com/</a><br>csdn：<a href="http://www.csdn.net/" target="_blank" rel="noopener">http://www.csdn.net/</a></p>]]></content>
    </entry>
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
  
</search>
